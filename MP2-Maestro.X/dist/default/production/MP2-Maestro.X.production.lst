

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Mar 06 18:30:58 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F887 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  008F                     	;# 
   110  0090                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  0105                     	;# 
   129  0107                     	;# 
   130  0108                     	;# 
   131  0109                     	;# 
   132  010C                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  0185                     	;# 
   138  0187                     	;# 
   139  0188                     	;# 
   140  0189                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0015                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001B                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  0081                     	;# 
   179  0085                     	;# 
   180  0086                     	;# 
   181  0087                     	;# 
   182  0088                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  008F                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0094                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0097                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009A                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  009F                     	;# 
   206  0105                     	;# 
   207  0107                     	;# 
   208  0108                     	;# 
   209  0109                     	;# 
   210  010C                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010E                     	;# 
   214  010F                     	;# 
   215  0185                     	;# 
   216  0187                     	;# 
   217  0188                     	;# 
   218  0189                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000D                     	;# 
   235  000E                     	;# 
   236  000E                     	;# 
   237  000F                     	;# 
   238  0010                     	;# 
   239  0011                     	;# 
   240  0012                     	;# 
   241  0013                     	;# 
   242  0014                     	;# 
   243  0015                     	;# 
   244  0015                     	;# 
   245  0016                     	;# 
   246  0017                     	;# 
   247  0018                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001B                     	;# 
   252  001C                     	;# 
   253  001D                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  0081                     	;# 
   257  0085                     	;# 
   258  0086                     	;# 
   259  0087                     	;# 
   260  0088                     	;# 
   261  0089                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  008F                     	;# 
   266  0090                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0094                     	;# 
   273  0095                     	;# 
   274  0096                     	;# 
   275  0097                     	;# 
   276  0098                     	;# 
   277  0099                     	;# 
   278  009A                     	;# 
   279  009B                     	;# 
   280  009C                     	;# 
   281  009D                     	;# 
   282  009E                     	;# 
   283  009F                     	;# 
   284  0105                     	;# 
   285  0107                     	;# 
   286  0108                     	;# 
   287  0109                     	;# 
   288  010C                     	;# 
   289  010C                     	;# 
   290  010D                     	;# 
   291  010E                     	;# 
   292  010F                     	;# 
   293  0185                     	;# 
   294  0187                     	;# 
   295  0188                     	;# 
   296  0189                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0006                     	;# 
   306  0007                     	;# 
   307  0008                     	;# 
   308  0009                     	;# 
   309  000A                     	;# 
   310  000B                     	;# 
   311  000C                     	;# 
   312  000D                     	;# 
   313  000E                     	;# 
   314  000E                     	;# 
   315  000F                     	;# 
   316  0010                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0013                     	;# 
   320  0014                     	;# 
   321  0015                     	;# 
   322  0015                     	;# 
   323  0016                     	;# 
   324  0017                     	;# 
   325  0018                     	;# 
   326  0019                     	;# 
   327  001A                     	;# 
   328  001B                     	;# 
   329  001B                     	;# 
   330  001C                     	;# 
   331  001D                     	;# 
   332  001E                     	;# 
   333  001F                     	;# 
   334  0081                     	;# 
   335  0085                     	;# 
   336  0086                     	;# 
   337  0087                     	;# 
   338  0088                     	;# 
   339  0089                     	;# 
   340  008C                     	;# 
   341  008D                     	;# 
   342  008E                     	;# 
   343  008F                     	;# 
   344  0090                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0094                     	;# 
   351  0095                     	;# 
   352  0096                     	;# 
   353  0097                     	;# 
   354  0098                     	;# 
   355  0099                     	;# 
   356  009A                     	;# 
   357  009B                     	;# 
   358  009C                     	;# 
   359  009D                     	;# 
   360  009E                     	;# 
   361  009F                     	;# 
   362  0105                     	;# 
   363  0107                     	;# 
   364  0108                     	;# 
   365  0109                     	;# 
   366  010C                     	;# 
   367  010C                     	;# 
   368  010D                     	;# 
   369  010E                     	;# 
   370  010F                     	;# 
   371  0185                     	;# 
   372  0187                     	;# 
   373  0188                     	;# 
   374  0189                     	;# 
   375  018C                     	;# 
   376  018D                     	;# 
   377  0014                     _SSPCON	set	20
   378  0013                     _SSPBUF	set	19
   379  0014                     _SSPCONbits	set	20
   380  0008                     _PORTD	set	8
   381  0006                     _PORTB	set	6
   382  0005                     _PORTA	set	5
   383  0047                     _RD7	set	71
   384  0046                     _RD6	set	70
   385  0091                     _SSPCON2bits	set	145
   386  0087                     _TRISCbits	set	135
   387  0093                     _SSPADD	set	147
   388  0091                     _SSPCON2	set	145
   389  0094                     _SSPSTAT	set	148
   390  008F                     _OSCCONbits	set	143
   391  0088                     _TRISD	set	136
   392  0086                     _TRISB	set	134
   393  0085                     _TRISA	set	133
   394  0189                     _ANSELH	set	393
   395  0188                     _ANSEL	set	392
   396                           
   397                           	psect	strings
   398  0003                     __pstrings:
   399  0003                     stringtab:
   400  0003                     __stringtab:
   401  0003                     stringcode:	
   402                           ;	String table - string pointers are 1 byte each
   403                           
   404  0003                     stringdir:
   405  0003  3000               	movlw	high stringdir
   406  0004  008A               	movwf	10
   407  0005  0804               	movf	4,w
   408  0006  0A84               	incf	4,f
   409  0007  0782               	addwf	2,f
   410  0008                     __stringbase:
   411  0008  3400               	retlw	0
   412  0009                     __end_of__stringtab:
   413  0009                     STR_2:
   414  0009  3453               	retlw	83	;'S'
   415  000A  3465               	retlw	101	;'e'
   416  000B  346D               	retlw	109	;'m'
   417  000C  3461               	retlw	97	;'a'
   418  000D  3466               	retlw	102	;'f'
   419  000E  346F               	retlw	111	;'o'
   420  000F  3472               	retlw	114	;'r'
   421  0010  346F               	retlw	111	;'o'
   422  0011  3400               	retlw	0
   423  0012                     STR_1:
   424  0012  3447               	retlw	71	;'G'
   425  0013  3465               	retlw	101	;'e'
   426  0014  3473               	retlw	115	;'s'
   427  0015  3474               	retlw	116	;'t'
   428  0016  346F               	retlw	111	;'o'
   429  0017  3400               	retlw	0
   430                           
   431                           	psect	cinit
   432  07F8                     start_initialization:	
   433                           ; #config settings
   434                           
   435  07F8                     __initialization:
   436                           
   437                           ; Clear objects allocated to BANK0
   438  07F8  1283               	bcf	3,5	;RP0=0, select bank0
   439  07F9  1303               	bcf	3,6	;RP1=0, select bank0
   440  07FA  01AB               	clrf	__pbssBANK0& (0+127)
   441  07FB  01AC               	clrf	(__pbssBANK0+1)& (0+127)
   442  07FC                     end_of_initialization:	
   443                           ;End of C runtime variable initialization code
   444                           
   445  07FC                     __end_of__initialization:
   446  07FC  0183               	clrf	3
   447  07FD  120A  118A  2ED8   	ljmp	_main	;jump to C main() function
   448                           
   449                           	psect	bssBANK0
   450  002B                     __pbssBANK0:
   451  002B                     _data:
   452  002B                     	ds	2
   453                           
   454                           	psect	cstackCOMMON
   455  0070                     __pcstackCOMMON:
   456  0070                     ?_setup:
   457  0070                     ?_config_io:	
   458                           ; 1 bytes @ 0x0
   459                           
   460  0070                     ??_config_io:	
   461                           ; 1 bytes @ 0x0
   462                           
   463  0070                     ?_config_clock:	
   464                           ; 1 bytes @ 0x0
   465                           
   466  0070                     ??_config_clock:	
   467                           ; 1 bytes @ 0x0
   468                           
   469  0070                     ?_config_lcd:	
   470                           ; 1 bytes @ 0x0
   471                           
   472  0070                     ?_LCD_START:	
   473                           ; 1 bytes @ 0x0
   474                           
   475  0070                     ?_LCD_writeString:	
   476                           ; 1 bytes @ 0x0
   477                           
   478  0070                     ?_main:	
   479                           ; 1 bytes @ 0x0
   480                           
   481  0070                     ?_flip_EN:	
   482                           ; 1 bytes @ 0x0
   483                           
   484  0070                     ??_flip_EN:	
   485                           ; 1 bytes @ 0x0
   486                           
   487  0070                     ?_LCD_CMD:	
   488                           ; 1 bytes @ 0x0
   489                           
   490  0070                     ?_LCD_write:	
   491                           ; 1 bytes @ 0x0
   492                           
   493  0070                     ?_i2c_MasterWait:	
   494                           ; 1 bytes @ 0x0
   495                           
   496  0070                     ??_i2c_MasterWait:	
   497                           ; 1 bytes @ 0x0
   498                           
   499  0070                     ?_i2c_MasterStart:	
   500                           ; 1 bytes @ 0x0
   501                           
   502  0070                     ??_i2c_MasterStart:	
   503                           ; 1 bytes @ 0x0
   504                           
   505  0070                     ?_i2c_MasterStop:	
   506                           ; 1 bytes @ 0x0
   507                           
   508  0070                     ??_i2c_MasterStop:	
   509                           ; 1 bytes @ 0x0
   510                           
   511  0070                     ?_i2c_MasterSS:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  0070                     ??_i2c_MasterSS:	
   515                           ; 1 bytes @ 0x0
   516                           
   517  0070                     ?_i2c_MasterWrite:	
   518                           ; 1 bytes @ 0x0
   519                           
   520  0070                     ??_i2c_MasterWrite:	
   521                           ; 1 bytes @ 0x0
   522                           
   523  0070                     ?___lldiv:	
   524                           ; 1 bytes @ 0x0
   525                           
   526  0070                     i2c_MasterSS@address:	
   527                           ; 4 bytes @ 0x0
   528                           
   529  0070                     i2c_MasterWrite@dato:	
   530                           ; 1 bytes @ 0x0
   531                           
   532  0070                     ___lldiv@divisor:	
   533                           ; 1 bytes @ 0x0
   534                           
   535                           
   536                           ; 4 bytes @ 0x0
   537  0070                     	ds	1
   538  0071                     ?_i2c_MW:
   539  0071                     i2c_MW@messege:	
   540                           ; 1 bytes @ 0x1
   541                           
   542                           
   543                           ; 1 bytes @ 0x1
   544  0071                     	ds	1
   545  0072                     ??_i2c_MW:
   546  0072                     ??_LCD_CMD:	
   547                           ; 1 bytes @ 0x2
   548                           
   549  0072                     ??_LCD_write:	
   550                           ; 1 bytes @ 0x2
   551                           
   552  0072                     LCD_CMD@cmd:	
   553                           ; 1 bytes @ 0x2
   554                           
   555  0072                     LCD_write@value:	
   556                           ; 1 bytes @ 0x2
   557                           
   558  0072                     i2c_MW@address:	
   559                           ; 1 bytes @ 0x2
   560                           
   561                           
   562                           ; 1 bytes @ 0x2
   563  0072                     	ds	1
   564  0073                     ??_LCD_START:
   565  0073                     ?_LCD_setCursor:	
   566                           ; 1 bytes @ 0x3
   567                           
   568  0073                     ??_LCD_writeString:	
   569                           ; 1 bytes @ 0x3
   570                           
   571  0073                     LCD_setCursor@columna:	
   572                           ; 1 bytes @ 0x3
   573                           
   574  0073                     LCD_writeString@i:	
   575                           ; 1 bytes @ 0x3
   576                           
   577                           
   578                           ; 2 bytes @ 0x3
   579  0073                     	ds	1
   580  0074                     ??_LCD_setCursor:
   581  0074                     LCD_setCursor@fila:	
   582                           ; 1 bytes @ 0x4
   583                           
   584  0074                     ___lldiv@dividend:	
   585                           ; 1 bytes @ 0x4
   586                           
   587                           
   588                           ; 4 bytes @ 0x4
   589  0074                     	ds	1
   590  0075                     LCD_writeString@text:
   591                           
   592                           ; 1 bytes @ 0x5
   593  0075                     	ds	1
   594  0076                     ??_config_lcd:
   595                           
   596                           ; 1 bytes @ 0x6
   597  0076                     	ds	2
   598  0078                     ??___lldiv:
   599                           
   600                           ; 1 bytes @ 0x8
   601  0078                     	ds	1
   602  0079                     ___lldiv@quotient:
   603                           
   604                           ; 4 bytes @ 0x9
   605  0079                     	ds	4
   606  007D                     ___lldiv@counter:
   607                           
   608                           ; 1 bytes @ 0xD
   609  007D                     	ds	1
   610  007E                     ??_setup:
   611                           
   612                           	psect	cstackBANK0
   613  0020                     __pcstackBANK0:	
   614                           ; 1 bytes @ 0xE
   615                           
   616  0020                     ?_i2c_MasterInit:
   617  0020                     i2c_MasterInit@freq:	
   618                           ; 1 bytes @ 0x0
   619                           
   620                           
   621                           ; 4 bytes @ 0x0
   622  0020                     	ds	4
   623  0024                     ??_i2c_MasterInit:
   624                           
   625                           ; 1 bytes @ 0x4
   626  0024                     	ds	4
   627  0028                     ??_main:
   628                           
   629                           ; 1 bytes @ 0x8
   630  0028                     	ds	3
   631                           
   632                           	psect	maintext
   633  06D8                     __pmaintext:	
   634 ;;
   635 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   636 ;;
   637 ;; *************** function _main *****************
   638 ;; Defined at:
   639 ;;		line 87 in file "C:/Users/nicou/OneDrive/Documents/2022/1er_semestre/Digital_2/MiniProy2/MP2-Maestro.X/main.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;		None
   642 ;; Auto vars:     Size  Location     Type
   643 ;;		None
   644 ;; Return value:  Size  Location     Type
   645 ;;                  1    wreg      void 
   646 ;; Registers used:
   647 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   648 ;; Tracked objects:
   649 ;;		On entry : B00/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   653 ;;      Params:         0       0       0       0       0
   654 ;;      Locals:         0       0       0       0       0
   655 ;;      Temps:          0       3       0       0       0
   656 ;;      Totals:         0       3       0       0       0
   657 ;;Total ram usage:        3 bytes
   658 ;; Hardware stack levels required when called: 5
   659 ;; This function calls:
   660 ;;		_i2c_MW
   661 ;;		_setup
   662 ;; This function is called by:
   663 ;;		Startup code after reset
   664 ;; This function uses a non-reentrant model
   665 ;;
   666                           
   667                           
   668                           ;psect for function _main
   669  06D8                     _main:
   670  06D8                     l1133:	
   671                           ;incstack = 0
   672                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   673                           
   674                           
   675                           ;main.c: 88: setup();
   676  06D8  120A  118A  2647  120A  118A  	fcall	_setup
   677  06DD                     l1135:
   678                           
   679                           ;main.c: 89: data.send = 0x15;
   680  06DD  3015               	movlw	21
   681  06DE  1283               	bcf	3,5	;RP0=0, select bank0
   682  06DF  1303               	bcf	3,6	;RP1=0, select bank0
   683  06E0  00A8               	movwf	??_main
   684  06E1  0828               	movf	??_main,w
   685  06E2  00AB               	movwf	_data
   686  06E3                     l1137:
   687                           
   688                           ;main.c: 93: i2c_MW(0x50, data.send);
   689  06E3  082B               	movf	_data,w
   690  06E4  00A8               	movwf	??_main
   691  06E5  0828               	movf	??_main,w
   692  06E6  00F1               	movwf	i2c_MW@messege
   693  06E7  3050               	movlw	80
   694  06E8  120A  118A  262F  120A  118A  	fcall	_i2c_MW
   695  06ED                     l1139:
   696                           
   697                           ;main.c: 94: _delay((unsigned long)((1000)*(4000000/4000.0)));
   698  06ED  3006               	movlw	6
   699  06EE  1283               	bcf	3,5	;RP0=0, select bank0
   700  06EF  1303               	bcf	3,6	;RP1=0, select bank0
   701  06F0  00AA               	movwf	??_main+2
   702  06F1  3013               	movlw	19
   703  06F2  00A9               	movwf	??_main+1
   704  06F3  30AD               	movlw	173
   705  06F4  00A8               	movwf	??_main
   706  06F5                     u257:
   707  06F5  0BA8               	decfsz	??_main,f
   708  06F6  2EF5               	goto	u257
   709  06F7  0BA9               	decfsz	??_main+1,f
   710  06F8  2EF5               	goto	u257
   711  06F9  0BAA               	decfsz	??_main+2,f
   712  06FA  2EF5               	goto	u257
   713  06FB                     l1141:
   714                           
   715                           ;main.c: 100: PORTA++;
   716  06FB  3001               	movlw	1
   717  06FC  1283               	bcf	3,5	;RP0=0, select bank0
   718  06FD  1303               	bcf	3,6	;RP1=0, select bank0
   719  06FE  00A8               	movwf	??_main
   720  06FF  0828               	movf	??_main,w
   721  0700  0785               	addwf	5,f	;volatile
   722  0701  2EE3               	goto	l1137
   723  0702  120A  118A  2800   	ljmp	start
   724  0705                     __end_of_main:
   725                           
   726                           	psect	text1
   727  0647                     __ptext1:	
   728 ;; *************** function _setup *****************
   729 ;; Defined at:
   730 ;;		line 112 in file "C:/Users/nicou/OneDrive/Documents/2022/1er_semestre/Digital_2/MiniProy2/MP2-Maestro.X/main.c"
   731 ;; Parameters:    Size  Location     Type
   732 ;;		None
   733 ;; Auto vars:     Size  Location     Type
   734 ;;		None
   735 ;; Return value:  Size  Location     Type
   736 ;;                  1    wreg      void 
   737 ;; Registers used:
   738 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   739 ;; Tracked objects:
   740 ;;		On entry : 0/0
   741 ;;		On exit  : 0/0
   742 ;;		Unchanged: 0/0
   743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   744 ;;      Params:         0       0       0       0       0
   745 ;;      Locals:         0       0       0       0       0
   746 ;;      Temps:          0       0       0       0       0
   747 ;;      Totals:         0       0       0       0       0
   748 ;;Total ram usage:        0 bytes
   749 ;; Hardware stack levels used: 1
   750 ;; Hardware stack levels required when called: 4
   751 ;; This function calls:
   752 ;;		_config_clock
   753 ;;		_config_io
   754 ;;		_config_lcd
   755 ;;		_i2c_MasterInit
   756 ;; This function is called by:
   757 ;;		_main
   758 ;; This function uses a non-reentrant model
   759 ;;
   760                           
   761                           
   762                           ;psect for function _setup
   763  0647                     _setup:
   764  0647                     l1107:	
   765                           ;incstack = 0
   766                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   767                           
   768                           
   769                           ;main.c: 113: config_io();
   770  0647  120A  118A  2602  120A  118A  	fcall	_config_io
   771  064C                     l1109:
   772                           
   773                           ;main.c: 114: config_clock();
   774  064C  120A  118A  25B9  120A  118A  	fcall	_config_clock
   775  0651                     l1111:
   776                           
   777                           ;main.c: 115: config_lcd();
   778  0651  120A  118A  2666  120A  118A  	fcall	_config_lcd
   779  0656                     l1113:
   780                           
   781                           ;main.c: 118: i2c_MasterInit(100000);
   782  0656  3000               	movlw	0
   783  0657  1283               	bcf	3,5	;RP0=0, select bank0
   784  0658  1303               	bcf	3,6	;RP1=0, select bank0
   785  0659  00A3               	movwf	i2c_MasterInit@freq+3
   786  065A  3001               	movlw	1
   787  065B  00A2               	movwf	i2c_MasterInit@freq+2
   788  065C  3086               	movlw	134
   789  065D  00A1               	movwf	i2c_MasterInit@freq+1
   790  065E  30A0               	movlw	160
   791  065F  00A0               	movwf	i2c_MasterInit@freq
   792  0660  120A  118A  2705  120A  118A  	fcall	_i2c_MasterInit
   793  0665                     l51:
   794  0665  0008               	return
   795  0666                     __end_of_setup:
   796                           
   797                           	psect	text2
   798  0705                     __ptext2:	
   799 ;; *************** function _i2c_MasterInit *****************
   800 ;; Defined at:
   801 ;;		line 10 in file "C:/Users/nicou/OneDrive/Documents/2022/1er_semestre/Digital_2/MiniProy2/MP2-Maestro.X/i2c.c"
   802 ;; Parameters:    Size  Location     Type
   803 ;;  freq            4    0[BANK0 ] unsigned long 
   804 ;; Auto vars:     Size  Location     Type
   805 ;;		None
   806 ;; Return value:  Size  Location     Type
   807 ;;                  1    wreg      void 
   808 ;; Registers used:
   809 ;;		wreg, status,2, status,0, pclath, cstack
   810 ;; Tracked objects:
   811 ;;		On entry : 0/0
   812 ;;		On exit  : 0/0
   813 ;;		Unchanged: 0/0
   814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   815 ;;      Params:         0       4       0       0       0
   816 ;;      Locals:         0       0       0       0       0
   817 ;;      Temps:          0       4       0       0       0
   818 ;;      Totals:         0       8       0       0       0
   819 ;;Total ram usage:        8 bytes
   820 ;; Hardware stack levels used: 1
   821 ;; Hardware stack levels required when called: 1
   822 ;; This function calls:
   823 ;;		___lldiv
   824 ;; This function is called by:
   825 ;;		_setup
   826 ;; This function uses a non-reentrant model
   827 ;;
   828                           
   829                           
   830                           ;psect for function _i2c_MasterInit
   831  0705                     _i2c_MasterInit:
   832  0705                     l1077:	
   833                           ;incstack = 0
   834                           ; Regs used in _i2c_MasterInit: [wreg+status,2+status,0+pclath+cstack]
   835                           
   836                           
   837                           ;i2c.c: 11: SSPSTAT = 0b10000000;
   838  0705  3080               	movlw	128
   839  0706  1683               	bsf	3,5	;RP0=1, select bank1
   840  0707  1303               	bcf	3,6	;RP1=0, select bank1
   841  0708  0094               	movwf	20	;volatile
   842  0709                     l1079:
   843                           
   844                           ;i2c.c: 13: SSPCONbits.SSPEN = 1;
   845  0709  1283               	bcf	3,5	;RP0=0, select bank0
   846  070A  1303               	bcf	3,6	;RP1=0, select bank0
   847  070B  1694               	bsf	20,5	;volatile
   848  070C                     l1081:
   849                           
   850                           ;i2c.c: 14: SSPCONbits.SSPM = 0b1000;
   851  070C  0814               	movf	20,w	;volatile
   852  070D  39F0               	andlw	-16
   853  070E  3808               	iorlw	8
   854  070F  0094               	movwf	20	;volatile
   855  0710                     l1083:
   856                           
   857                           ;i2c.c: 16: SSPCON2 = 0;
   858  0710  1683               	bsf	3,5	;RP0=1, select bank1
   859  0711  1303               	bcf	3,6	;RP1=0, select bank1
   860  0712  0191               	clrf	17	;volatile
   861  0713                     l1085:
   862                           
   863                           ;i2c.c: 18: SSPADD = (4000000/(4*freq))-1;
   864  0713  1283               	bcf	3,5	;RP0=0, select bank0
   865  0714  1303               	bcf	3,6	;RP1=0, select bank0
   866  0715  0820               	movf	i2c_MasterInit@freq,w
   867  0716  00A4               	movwf	??_i2c_MasterInit
   868  0717  0821               	movf	i2c_MasterInit@freq+1,w
   869  0718  00A5               	movwf	??_i2c_MasterInit+1
   870  0719  0822               	movf	i2c_MasterInit@freq+2,w
   871  071A  00A6               	movwf	??_i2c_MasterInit+2
   872  071B  0823               	movf	i2c_MasterInit@freq+3,w
   873  071C  00A7               	movwf	??_i2c_MasterInit+3
   874  071D  3002               	movlw	2
   875  071E                     u235:
   876  071E  1003               	clrc
   877  071F  0DA4               	rlf	??_i2c_MasterInit,f
   878  0720  0DA5               	rlf	??_i2c_MasterInit+1,f
   879  0721  0DA6               	rlf	??_i2c_MasterInit+2,f
   880  0722  0DA7               	rlf	??_i2c_MasterInit+3,f
   881  0723                     u230:
   882  0723  3EFF               	addlw	-1
   883  0724  1D03               	skipz
   884  0725  2F1E               	goto	u235
   885  0726  0827               	movf	??_i2c_MasterInit+3,w
   886  0727  00F3               	movwf	___lldiv@divisor+3
   887  0728  0826               	movf	??_i2c_MasterInit+2,w
   888  0729  00F2               	movwf	___lldiv@divisor+2
   889  072A  0825               	movf	??_i2c_MasterInit+1,w
   890  072B  00F1               	movwf	___lldiv@divisor+1
   891  072C  0824               	movf	??_i2c_MasterInit,w
   892  072D  00F0               	movwf	___lldiv@divisor
   893  072E  3000               	movlw	0
   894  072F  00F7               	movwf	___lldiv@dividend+3
   895  0730  303D               	movlw	61
   896  0731  00F6               	movwf	___lldiv@dividend+2
   897  0732  3009               	movlw	9
   898  0733  00F5               	movwf	___lldiv@dividend+1
   899  0734  3000               	movlw	0
   900  0735  00F4               	movwf	___lldiv@dividend
   901  0736  120A  118A  2792  120A  118A  	fcall	___lldiv
   902  073B  0870               	movf	?___lldiv,w
   903  073C  3EFF               	addlw	255
   904  073D  1683               	bsf	3,5	;RP0=1, select bank1
   905  073E  1303               	bcf	3,6	;RP1=0, select bank1
   906  073F  0093               	movwf	19	;volatile
   907  0740                     l1087:
   908                           
   909                           ;i2c.c: 20: TRISCbits.TRISC3 = 1;
   910  0740  1587               	bsf	7,3	;volatile
   911  0741                     l1089:
   912                           
   913                           ;i2c.c: 21: TRISCbits.TRISC4 = 1;
   914  0741  1607               	bsf	7,4	;volatile
   915  0742                     l124:
   916  0742  0008               	return
   917  0743                     __end_of_i2c_MasterInit:
   918                           
   919                           	psect	text3
   920  0792                     __ptext3:	
   921 ;; *************** function ___lldiv *****************
   922 ;; Defined at:
   923 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
   924 ;; Parameters:    Size  Location     Type
   925 ;;  divisor         4    0[COMMON] unsigned long 
   926 ;;  dividend        4    4[COMMON] unsigned long 
   927 ;; Auto vars:     Size  Location     Type
   928 ;;  quotient        4    9[COMMON] unsigned long 
   929 ;;  counter         1   13[COMMON] unsigned char 
   930 ;; Return value:  Size  Location     Type
   931 ;;                  4    0[COMMON] unsigned long 
   932 ;; Registers used:
   933 ;;		wreg, status,2, status,0
   934 ;; Tracked objects:
   935 ;;		On entry : 0/0
   936 ;;		On exit  : 0/0
   937 ;;		Unchanged: 0/0
   938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   939 ;;      Params:         8       0       0       0       0
   940 ;;      Locals:         5       0       0       0       0
   941 ;;      Temps:          1       0       0       0       0
   942 ;;      Totals:        14       0       0       0       0
   943 ;;Total ram usage:       14 bytes
   944 ;; Hardware stack levels used: 1
   945 ;; This function calls:
   946 ;;		Nothing
   947 ;; This function is called by:
   948 ;;		_i2c_MasterInit
   949 ;; This function uses a non-reentrant model
   950 ;;
   951                           
   952                           
   953                           ;psect for function ___lldiv
   954  0792                     ___lldiv:
   955  0792                     l1037:	
   956                           ;incstack = 0
   957                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
   958                           
   959  0792  3000               	movlw	0
   960  0793  00FC               	movwf	___lldiv@quotient+3
   961  0794  3000               	movlw	0
   962  0795  00FB               	movwf	___lldiv@quotient+2
   963  0796  3000               	movlw	0
   964  0797  00FA               	movwf	___lldiv@quotient+1
   965  0798  3000               	movlw	0
   966  0799  00F9               	movwf	___lldiv@quotient
   967  079A  0873               	movf	___lldiv@divisor+3,w
   968  079B  0472               	iorwf	___lldiv@divisor+2,w
   969  079C  0471               	iorwf	___lldiv@divisor+1,w
   970  079D  0470               	iorwf	___lldiv@divisor,w
   971  079E  1903               	skipnz
   972  079F  2FA1               	goto	u161
   973  07A0  2FA2               	goto	u160
   974  07A1                     u161:
   975  07A1  2FEF               	goto	l1057
   976  07A2                     u160:
   977  07A2                     l1039:
   978  07A2  01FD               	clrf	___lldiv@counter
   979  07A3  0AFD               	incf	___lldiv@counter,f
   980  07A4  2FB2               	goto	l1043
   981  07A5                     l1041:
   982  07A5  3001               	movlw	1
   983  07A6  00F8               	movwf	??___lldiv
   984  07A7                     u175:
   985  07A7  1003               	clrc
   986  07A8  0DF0               	rlf	___lldiv@divisor,f
   987  07A9  0DF1               	rlf	___lldiv@divisor+1,f
   988  07AA  0DF2               	rlf	___lldiv@divisor+2,f
   989  07AB  0DF3               	rlf	___lldiv@divisor+3,f
   990  07AC  0BF8               	decfsz	??___lldiv,f
   991  07AD  2FA7               	goto	u175
   992  07AE  3001               	movlw	1
   993  07AF  00F8               	movwf	??___lldiv
   994  07B0  0878               	movf	??___lldiv,w
   995  07B1  07FD               	addwf	___lldiv@counter,f
   996  07B2                     l1043:
   997  07B2  1FF3               	btfss	___lldiv@divisor+3,7
   998  07B3  2FB5               	goto	u181
   999  07B4  2FB6               	goto	u180
  1000  07B5                     u181:
  1001  07B5  2FA5               	goto	l1041
  1002  07B6                     u180:
  1003  07B6                     l1045:
  1004  07B6  3001               	movlw	1
  1005  07B7  00F8               	movwf	??___lldiv
  1006  07B8                     u195:
  1007  07B8  1003               	clrc
  1008  07B9  0DF9               	rlf	___lldiv@quotient,f
  1009  07BA  0DFA               	rlf	___lldiv@quotient+1,f
  1010  07BB  0DFB               	rlf	___lldiv@quotient+2,f
  1011  07BC  0DFC               	rlf	___lldiv@quotient+3,f
  1012  07BD  0BF8               	decfsz	??___lldiv,f
  1013  07BE  2FB8               	goto	u195
  1014  07BF                     l1047:
  1015  07BF  0873               	movf	___lldiv@divisor+3,w
  1016  07C0  0277               	subwf	___lldiv@dividend+3,w
  1017  07C1  1D03               	skipz
  1018  07C2  2FCD               	goto	u205
  1019  07C3  0872               	movf	___lldiv@divisor+2,w
  1020  07C4  0276               	subwf	___lldiv@dividend+2,w
  1021  07C5  1D03               	skipz
  1022  07C6  2FCD               	goto	u205
  1023  07C7  0871               	movf	___lldiv@divisor+1,w
  1024  07C8  0275               	subwf	___lldiv@dividend+1,w
  1025  07C9  1D03               	skipz
  1026  07CA  2FCD               	goto	u205
  1027  07CB  0870               	movf	___lldiv@divisor,w
  1028  07CC  0274               	subwf	___lldiv@dividend,w
  1029  07CD                     u205:
  1030  07CD  1C03               	skipc
  1031  07CE  2FD0               	goto	u201
  1032  07CF  2FD1               	goto	u200
  1033  07D0                     u201:
  1034  07D0  2FE0               	goto	l1053
  1035  07D1                     u200:
  1036  07D1                     l1049:
  1037  07D1  0870               	movf	___lldiv@divisor,w
  1038  07D2  02F4               	subwf	___lldiv@dividend,f
  1039  07D3  0871               	movf	___lldiv@divisor+1,w
  1040  07D4  1C03               	skipc
  1041  07D5  0F71               	incfsz	___lldiv@divisor+1,w
  1042  07D6  02F5               	subwf	___lldiv@dividend+1,f
  1043  07D7  0872               	movf	___lldiv@divisor+2,w
  1044  07D8  1C03               	skipc
  1045  07D9  0F72               	incfsz	___lldiv@divisor+2,w
  1046  07DA  02F6               	subwf	___lldiv@dividend+2,f
  1047  07DB  0873               	movf	___lldiv@divisor+3,w
  1048  07DC  1C03               	skipc
  1049  07DD  0F73               	incfsz	___lldiv@divisor+3,w
  1050  07DE  02F7               	subwf	___lldiv@dividend+3,f
  1051  07DF                     l1051:
  1052  07DF  1479               	bsf	___lldiv@quotient,0
  1053  07E0                     l1053:
  1054  07E0  3001               	movlw	1
  1055  07E1                     u215:
  1056  07E1  1003               	clrc
  1057  07E2  0CF3               	rrf	___lldiv@divisor+3,f
  1058  07E3  0CF2               	rrf	___lldiv@divisor+2,f
  1059  07E4  0CF1               	rrf	___lldiv@divisor+1,f
  1060  07E5  0CF0               	rrf	___lldiv@divisor,f
  1061  07E6  3EFF               	addlw	-1
  1062  07E7  1D03               	skipz
  1063  07E8  2FE1               	goto	u215
  1064  07E9                     l1055:
  1065  07E9  3001               	movlw	1
  1066  07EA  02FD               	subwf	___lldiv@counter,f
  1067  07EB  1D03               	btfss	3,2
  1068  07EC  2FEE               	goto	u221
  1069  07ED  2FEF               	goto	u220
  1070  07EE                     u221:
  1071  07EE  2FB6               	goto	l1045
  1072  07EF                     u220:
  1073  07EF                     l1057:
  1074  07EF  087C               	movf	___lldiv@quotient+3,w
  1075  07F0  00F3               	movwf	?___lldiv+3
  1076  07F1  087B               	movf	___lldiv@quotient+2,w
  1077  07F2  00F2               	movwf	?___lldiv+2
  1078  07F3  087A               	movf	___lldiv@quotient+1,w
  1079  07F4  00F1               	movwf	?___lldiv+1
  1080  07F5  0879               	movf	___lldiv@quotient,w
  1081  07F6  00F0               	movwf	?___lldiv
  1082  07F7                     l281:
  1083  07F7  0008               	return
  1084  07F8                     __end_of___lldiv:
  1085                           
  1086                           	psect	text4
  1087  0666                     __ptext4:	
  1088 ;; *************** function _config_lcd *****************
  1089 ;; Defined at:
  1090 ;;		line 142 in file "C:/Users/nicou/OneDrive/Documents/2022/1er_semestre/Digital_2/MiniProy2/MP2-Maestro.X/main.c"
  1091 ;; Parameters:    Size  Location     Type
  1092 ;;		None
  1093 ;; Auto vars:     Size  Location     Type
  1094 ;;		None
  1095 ;; Return value:  Size  Location     Type
  1096 ;;                  1    wreg      void 
  1097 ;; Registers used:
  1098 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1099 ;; Tracked objects:
  1100 ;;		On entry : 0/0
  1101 ;;		On exit  : 0/0
  1102 ;;		Unchanged: 0/0
  1103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1104 ;;      Params:         0       0       0       0       0
  1105 ;;      Locals:         0       0       0       0       0
  1106 ;;      Temps:          1       0       0       0       0
  1107 ;;      Totals:         1       0       0       0       0
  1108 ;;Total ram usage:        1 bytes
  1109 ;; Hardware stack levels used: 1
  1110 ;; Hardware stack levels required when called: 3
  1111 ;; This function calls:
  1112 ;;		_LCD_START
  1113 ;;		_LCD_setCursor
  1114 ;;		_LCD_writeString
  1115 ;; This function is called by:
  1116 ;;		_setup
  1117 ;; This function uses a non-reentrant model
  1118 ;;
  1119                           
  1120                           
  1121                           ;psect for function _config_lcd
  1122  0666                     _config_lcd:
  1123  0666                     l1067:	
  1124                           ;incstack = 0
  1125                           ; Regs used in _config_lcd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1126                           
  1127                           
  1128                           ;main.c: 143: LCD_START();
  1129  0666  120A  118A  2743  120A  118A  	fcall	_LCD_START
  1130  066B                     l1069:
  1131                           
  1132                           ;main.c: 145: LCD_setCursor (1,1);
  1133  066B  01F3               	clrf	LCD_setCursor@columna
  1134  066C  0AF3               	incf	LCD_setCursor@columna,f
  1135  066D  3001               	movlw	1
  1136  066E  120A  118A  26AF  120A  118A  	fcall	_LCD_setCursor
  1137  0673                     l1071:
  1138                           
  1139                           ;main.c: 146: LCD_writeString ("Gesto");
  1140  0673  300A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1141  0674  120A  118A  268A  120A  118A  	fcall	_LCD_writeString
  1142  0679                     l1073:
  1143                           
  1144                           ;main.c: 148: LCD_setCursor (1,9);
  1145  0679  3009               	movlw	9
  1146  067A  00F6               	movwf	??_config_lcd
  1147  067B  0876               	movf	??_config_lcd,w
  1148  067C  00F3               	movwf	LCD_setCursor@columna
  1149  067D  3001               	movlw	1
  1150  067E  120A  118A  26AF  120A  118A  	fcall	_LCD_setCursor
  1151  0683                     l1075:
  1152                           
  1153                           ;main.c: 149: LCD_writeString ("Semaforo");
  1154  0683  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1155  0684  120A  118A  268A  120A  118A  	fcall	_LCD_writeString
  1156  0689                     l60:
  1157  0689  0008               	return
  1158  068A                     __end_of_config_lcd:
  1159                           
  1160                           	psect	text5
  1161  068A                     __ptext5:	
  1162 ;; *************** function _LCD_writeString *****************
  1163 ;; Defined at:
  1164 ;;		line 86 in file "lcd_8bitsA.c"
  1165 ;; Parameters:    Size  Location     Type
  1166 ;;  text            1    wreg     PTR unsigned char 
  1167 ;;		 -> STR_2(9), STR_1(6), 
  1168 ;; Auto vars:     Size  Location     Type
  1169 ;;  text            1    5[COMMON] PTR unsigned char 
  1170 ;;		 -> STR_2(9), STR_1(6), 
  1171 ;;  i               2    3[COMMON] int 
  1172 ;; Return value:  Size  Location     Type
  1173 ;;                  1    wreg      void 
  1174 ;; Registers used:
  1175 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1176 ;; Tracked objects:
  1177 ;;		On entry : 0/0
  1178 ;;		On exit  : 0/0
  1179 ;;		Unchanged: 0/0
  1180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1181 ;;      Params:         0       0       0       0       0
  1182 ;;      Locals:         3       0       0       0       0
  1183 ;;      Temps:          0       0       0       0       0
  1184 ;;      Totals:         3       0       0       0       0
  1185 ;;Total ram usage:        3 bytes
  1186 ;; Hardware stack levels used: 1
  1187 ;; Hardware stack levels required when called: 2
  1188 ;; This function calls:
  1189 ;;		_LCD_write
  1190 ;; This function is called by:
  1191 ;;		_config_lcd
  1192 ;; This function uses a non-reentrant model
  1193 ;;
  1194                           
  1195                           
  1196                           ;psect for function _LCD_writeString
  1197  068A                     _LCD_writeString:
  1198                           
  1199                           ;incstack = 0
  1200                           ; Regs used in _LCD_writeString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1201                           ;LCD_writeString@text stored from wreg
  1202  068A  00F5               	movwf	LCD_writeString@text
  1203  068B                     l1025:
  1204                           
  1205                           ;lcd_8bitsA.c: 87: int i;;lcd_8bitsA.c: 88: for (i = 0; text[i] != '\0'; i++){
  1206  068B  01F3               	clrf	LCD_writeString@i
  1207  068C  01F4               	clrf	LCD_writeString@i+1
  1208  068D  2EA1               	goto	l1031
  1209  068E                     l1027:
  1210                           
  1211                           ;lcd_8bitsA.c: 89: LCD_write(text[i]);
  1212  068E  0873               	movf	LCD_writeString@i,w
  1213  068F  0775               	addwf	LCD_writeString@text,w
  1214  0690  0084               	movwf	4
  1215  0691  120A  118A  2003  120A  118A  	fcall	stringdir
  1216  0696  120A  118A  2620  120A  118A  	fcall	_LCD_write
  1217  069B                     l1029:
  1218  069B  3001               	movlw	1
  1219  069C  07F3               	addwf	LCD_writeString@i,f
  1220  069D  1803               	skipnc
  1221  069E  0AF4               	incf	LCD_writeString@i+1,f
  1222  069F  3000               	movlw	0
  1223  06A0  07F4               	addwf	LCD_writeString@i+1,f
  1224  06A1                     l1031:
  1225  06A1  0873               	movf	LCD_writeString@i,w
  1226  06A2  0775               	addwf	LCD_writeString@text,w
  1227  06A3  0084               	movwf	4
  1228  06A4  120A  118A  2003  120A  118A  	fcall	stringdir
  1229  06A9  3A00               	xorlw	0
  1230  06AA  1D03               	skipz
  1231  06AB  2EAD               	goto	u131
  1232  06AC  2EAE               	goto	u130
  1233  06AD                     u131:
  1234  06AD  2E8E               	goto	l1027
  1235  06AE                     u130:
  1236  06AE                     l99:
  1237  06AE  0008               	return
  1238  06AF                     __end_of_LCD_writeString:
  1239                           
  1240                           	psect	text6
  1241  0620                     __ptext6:	
  1242 ;; *************** function _LCD_write *****************
  1243 ;; Defined at:
  1244 ;;		line 77 in file "lcd_8bitsA.c"
  1245 ;; Parameters:    Size  Location     Type
  1246 ;;  value           1    wreg     unsigned char 
  1247 ;; Auto vars:     Size  Location     Type
  1248 ;;  value           1    2[COMMON] unsigned char 
  1249 ;; Return value:  Size  Location     Type
  1250 ;;                  1    wreg      void 
  1251 ;; Registers used:
  1252 ;;		wreg, status,2, status,0, pclath, cstack
  1253 ;; Tracked objects:
  1254 ;;		On entry : 0/0
  1255 ;;		On exit  : 0/0
  1256 ;;		Unchanged: 0/0
  1257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1258 ;;      Params:         0       0       0       0       0
  1259 ;;      Locals:         1       0       0       0       0
  1260 ;;      Temps:          0       0       0       0       0
  1261 ;;      Totals:         1       0       0       0       0
  1262 ;;Total ram usage:        1 bytes
  1263 ;; Hardware stack levels used: 1
  1264 ;; Hardware stack levels required when called: 1
  1265 ;; This function calls:
  1266 ;;		_flip_EN
  1267 ;; This function is called by:
  1268 ;;		_LCD_writeString
  1269 ;; This function uses a non-reentrant model
  1270 ;;
  1271                           
  1272                           
  1273                           ;psect for function _LCD_write
  1274  0620                     _LCD_write:
  1275                           
  1276                           ;incstack = 0
  1277                           ; Regs used in _LCD_write: [wreg+status,2+status,0+pclath+cstack]
  1278                           ;LCD_write@value stored from wreg
  1279  0620  00F2               	movwf	LCD_write@value
  1280  0621                     l977:
  1281                           
  1282                           ;lcd_8bitsA.c: 78: RD7 = 1;
  1283  0621  1283               	bcf	3,5	;RP0=0, select bank0
  1284  0622  1303               	bcf	3,6	;RP1=0, select bank0
  1285  0623  1788               	bsf	8,7	;volatile
  1286  0624                     l979:
  1287                           
  1288                           ;lcd_8bitsA.c: 79: PORTB = value;
  1289  0624  0872               	movf	LCD_write@value,w
  1290  0625  0086               	movwf	6	;volatile
  1291  0626                     l981:
  1292                           
  1293                           ;lcd_8bitsA.c: 80: flip_EN();
  1294  0626  120A  118A  2611  120A  118A  	fcall	_flip_EN
  1295  062B                     l983:
  1296                           
  1297                           ;lcd_8bitsA.c: 81: RD7 = 0;
  1298  062B  1283               	bcf	3,5	;RP0=0, select bank0
  1299  062C  1303               	bcf	3,6	;RP1=0, select bank0
  1300  062D  1388               	bcf	8,7	;volatile
  1301  062E                     l93:
  1302  062E  0008               	return
  1303  062F                     __end_of_LCD_write:
  1304                           
  1305                           	psect	text7
  1306  06AF                     __ptext7:	
  1307 ;; *************** function _LCD_setCursor *****************
  1308 ;; Defined at:
  1309 ;;		line 58 in file "lcd_8bitsA.c"
  1310 ;; Parameters:    Size  Location     Type
  1311 ;;  fila            1    wreg     unsigned char 
  1312 ;;  columna         1    3[COMMON] unsigned char 
  1313 ;; Auto vars:     Size  Location     Type
  1314 ;;  fila            1    4[COMMON] unsigned char 
  1315 ;; Return value:  Size  Location     Type
  1316 ;;                  1    wreg      void 
  1317 ;; Registers used:
  1318 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1319 ;; Tracked objects:
  1320 ;;		On entry : 0/0
  1321 ;;		On exit  : 0/0
  1322 ;;		Unchanged: 0/0
  1323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1324 ;;      Params:         1       0       0       0       0
  1325 ;;      Locals:         1       0       0       0       0
  1326 ;;      Temps:          0       0       0       0       0
  1327 ;;      Totals:         2       0       0       0       0
  1328 ;;Total ram usage:        2 bytes
  1329 ;; Hardware stack levels used: 1
  1330 ;; Hardware stack levels required when called: 2
  1331 ;; This function calls:
  1332 ;;		_LCD_CMD
  1333 ;; This function is called by:
  1334 ;;		_config_lcd
  1335 ;; This function uses a non-reentrant model
  1336 ;;
  1337                           
  1338                           
  1339                           ;psect for function _LCD_setCursor
  1340  06AF                     _LCD_setCursor:
  1341                           
  1342                           ;incstack = 0
  1343                           ; Regs used in _LCD_setCursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1344                           ;LCD_setCursor@fila stored from wreg
  1345  06AF  00F4               	movwf	LCD_setCursor@fila
  1346  06B0                     l1013:
  1347                           
  1348                           ;lcd_8bitsA.c: 59: switch (fila){
  1349  06B0  2ECF               	goto	l1023
  1350  06B1                     l1015:
  1351                           
  1352                           ;lcd_8bitsA.c: 62: LCD_CMD(((columna & 0x0F)-1) | 0x80);
  1353  06B1  0873               	movf	LCD_setCursor@columna,w
  1354  06B2  390F               	andlw	15
  1355  06B3  3EFF               	addlw	255
  1356  06B4  3880               	iorlw	128
  1357  06B5  120A  118A  25E9  120A  118A  	fcall	_LCD_CMD
  1358                           
  1359                           ;lcd_8bitsA.c: 63: break;
  1360  06BA  2ED7               	goto	l90
  1361  06BB                     l1017:
  1362                           
  1363                           ;lcd_8bitsA.c: 67: LCD_CMD(((columna & 0x0F)-1) | 0xC0);
  1364  06BB  0873               	movf	LCD_setCursor@columna,w
  1365  06BC  390F               	andlw	15
  1366  06BD  3EFF               	addlw	255
  1367  06BE  38C0               	iorlw	192
  1368  06BF  120A  118A  25E9  120A  118A  	fcall	_LCD_CMD
  1369                           
  1370                           ;lcd_8bitsA.c: 68: break;
  1371  06C4  2ED7               	goto	l90
  1372  06C5                     l1019:
  1373                           
  1374                           ;lcd_8bitsA.c: 71: LCD_CMD(((columna & 0x0F)-1) | 0x80);
  1375  06C5  0873               	movf	LCD_setCursor@columna,w
  1376  06C6  390F               	andlw	15
  1377  06C7  3EFF               	addlw	255
  1378  06C8  3880               	iorlw	128
  1379  06C9  120A  118A  25E9  120A  118A  	fcall	_LCD_CMD
  1380                           
  1381                           ;lcd_8bitsA.c: 72: break;
  1382  06CE  2ED7               	goto	l90
  1383  06CF                     l1023:
  1384  06CF  0874               	movf	LCD_setCursor@fila,w
  1385                           
  1386                           ; Switch size 1, requested type "simple"
  1387                           ; Number of cases is 2, Range of values is 1 to 2
  1388                           ; switch strategies available:
  1389                           ; Name         Instructions Cycles
  1390                           ; simple_byte            7     4 (average)
  1391                           ; direct_byte           17    11 (fixed)
  1392                           ; jumptable            263     9 (fixed)
  1393                           ;	Chosen strategy is simple_byte
  1394  06D0  3A01               	xorlw	1	; case 1
  1395  06D1  1903               	skipnz
  1396  06D2  2EB1               	goto	l1015
  1397  06D3  3A03               	xorlw	3	; case 2
  1398  06D4  1903               	skipnz
  1399  06D5  2EBB               	goto	l1017
  1400  06D6  2EC5               	goto	l1019
  1401  06D7                     l90:
  1402  06D7  0008               	return
  1403  06D8                     __end_of_LCD_setCursor:
  1404                           
  1405                           	psect	text8
  1406  0743                     __ptext8:	
  1407 ;; *************** function _LCD_START *****************
  1408 ;; Defined at:
  1409 ;;		line 19 in file "lcd_8bitsA.c"
  1410 ;; Parameters:    Size  Location     Type
  1411 ;;		None
  1412 ;; Auto vars:     Size  Location     Type
  1413 ;;		None
  1414 ;; Return value:  Size  Location     Type
  1415 ;;                  1    wreg      void 
  1416 ;; Registers used:
  1417 ;;		wreg, status,2, status,0, pclath, cstack
  1418 ;; Tracked objects:
  1419 ;;		On entry : 0/0
  1420 ;;		On exit  : 0/0
  1421 ;;		Unchanged: 0/0
  1422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1423 ;;      Params:         0       0       0       0       0
  1424 ;;      Locals:         0       0       0       0       0
  1425 ;;      Temps:          2       0       0       0       0
  1426 ;;      Totals:         2       0       0       0       0
  1427 ;;Total ram usage:        2 bytes
  1428 ;; Hardware stack levels used: 1
  1429 ;; Hardware stack levels required when called: 2
  1430 ;; This function calls:
  1431 ;;		_LCD_CMD
  1432 ;; This function is called by:
  1433 ;;		_config_lcd
  1434 ;; This function uses a non-reentrant model
  1435 ;;
  1436                           
  1437                           
  1438                           ;psect for function _LCD_START
  1439  0743                     _LCD_START:
  1440  0743                     l987:	
  1441                           ;incstack = 0
  1442                           ; Regs used in _LCD_START: [wreg+status,2+status,0+pclath+cstack]
  1443                           
  1444                           
  1445                           ;lcd_8bitsA.c: 20: RD6 = 0;
  1446  0743  1283               	bcf	3,5	;RP0=0, select bank0
  1447  0744  1303               	bcf	3,6	;RP1=0, select bank0
  1448  0745  1308               	bcf	8,6	;volatile
  1449                           
  1450                           ;lcd_8bitsA.c: 21: RD7 = 0;
  1451  0746  1388               	bcf	8,7	;volatile
  1452  0747                     l989:
  1453                           
  1454                           ;lcd_8bitsA.c: 22: PORTB = 0;
  1455  0747  0186               	clrf	6	;volatile
  1456                           
  1457                           ;lcd_8bitsA.c: 23: TRISB = 0;
  1458  0748  1683               	bsf	3,5	;RP0=1, select bank1
  1459  0749  1303               	bcf	3,6	;RP1=0, select bank1
  1460  074A  0186               	clrf	6	;volatile
  1461  074B                     l991:
  1462                           
  1463                           ;lcd_8bitsA.c: 26: _delay((unsigned long)((20)*(4000000/4000.0)));
  1464  074B  301A               	movlw	26
  1465  074C  00F4               	movwf	??_LCD_START+1
  1466  074D  30F8               	movlw	248
  1467  074E  00F3               	movwf	??_LCD_START
  1468  074F                     u267:
  1469  074F  0BF3               	decfsz	??_LCD_START,f
  1470  0750  2F4F               	goto	u267
  1471  0751  0BF4               	decfsz	??_LCD_START+1,f
  1472  0752  2F4F               	goto	u267
  1473  0753  0000               	nop
  1474  0754                     l993:
  1475                           
  1476                           ;lcd_8bitsA.c: 27: LCD_CMD (0x30);
  1477  0754  3030               	movlw	48
  1478  0755  120A  118A  25E9  120A  118A  	fcall	_LCD_CMD
  1479  075A                     l995:
  1480                           
  1481                           ;lcd_8bitsA.c: 29: _delay((unsigned long)((5)*(4000000/4000.0)));
  1482  075A  3007               	movlw	7
  1483  075B  00F4               	movwf	??_LCD_START+1
  1484  075C  307D               	movlw	125
  1485  075D  00F3               	movwf	??_LCD_START
  1486  075E                     u277:
  1487  075E  0BF3               	decfsz	??_LCD_START,f
  1488  075F  2F5E               	goto	u277
  1489  0760  0BF4               	decfsz	??_LCD_START+1,f
  1490  0761  2F5E               	goto	u277
  1491  0762                     l997:
  1492                           
  1493                           ;lcd_8bitsA.c: 30: LCD_CMD (0x30);
  1494  0762  3030               	movlw	48
  1495  0763  120A  118A  25E9  120A  118A  	fcall	_LCD_CMD
  1496  0768                     l999:
  1497                           
  1498                           ;lcd_8bitsA.c: 32: _delay((unsigned long)((200)*(4000000/4000000.0)));
  1499  0768  3042               	movlw	66
  1500  0769  00F3               	movwf	??_LCD_START
  1501  076A                     u287:
  1502  076A  0BF3               	decfsz	??_LCD_START,f
  1503  076B  2F6A               	goto	u287
  1504  076C  0000               	nop
  1505  076D                     l1001:
  1506                           
  1507                           ;lcd_8bitsA.c: 33: LCD_CMD (0x30);
  1508  076D  3030               	movlw	48
  1509  076E  120A  118A  25E9  120A  118A  	fcall	_LCD_CMD
  1510  0773                     l1003:
  1511                           
  1512                           ;lcd_8bitsA.c: 37: LCD_CMD (0x3C);
  1513  0773  303C               	movlw	60
  1514  0774  120A  118A  25E9  120A  118A  	fcall	_LCD_CMD
  1515  0779                     l1005:
  1516                           
  1517                           ;lcd_8bitsA.c: 40: LCD_CMD (0x0C);
  1518  0779  300C               	movlw	12
  1519  077A  120A  118A  25E9  120A  118A  	fcall	_LCD_CMD
  1520  077F                     l1007:
  1521                           
  1522                           ;lcd_8bitsA.c: 43: LCD_CMD (0x10);
  1523  077F  3010               	movlw	16
  1524  0780  120A  118A  25E9  120A  118A  	fcall	_LCD_CMD
  1525  0785                     l1009:
  1526                           
  1527                           ;lcd_8bitsA.c: 46: LCD_CMD (0x01);
  1528  0785  3001               	movlw	1
  1529  0786  120A  118A  25E9  120A  118A  	fcall	_LCD_CMD
  1530  078B                     l1011:
  1531                           
  1532                           ;lcd_8bitsA.c: 49: LCD_CMD (0x06);
  1533  078B  3006               	movlw	6
  1534  078C  120A  118A  25E9  120A  118A  	fcall	_LCD_CMD
  1535  0791                     l79:
  1536  0791  0008               	return
  1537  0792                     __end_of_LCD_START:
  1538                           
  1539                           	psect	text9
  1540  05E9                     __ptext9:	
  1541 ;; *************** function _LCD_CMD *****************
  1542 ;; Defined at:
  1543 ;;		line 12 in file "lcd_8bitsA.c"
  1544 ;; Parameters:    Size  Location     Type
  1545 ;;  cmd             1    wreg     unsigned char 
  1546 ;; Auto vars:     Size  Location     Type
  1547 ;;  cmd             1    2[COMMON] unsigned char 
  1548 ;; Return value:  Size  Location     Type
  1549 ;;                  1    wreg      void 
  1550 ;; Registers used:
  1551 ;;		wreg, status,2, status,0, pclath, cstack
  1552 ;; Tracked objects:
  1553 ;;		On entry : 0/0
  1554 ;;		On exit  : 0/0
  1555 ;;		Unchanged: 0/0
  1556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1557 ;;      Params:         0       0       0       0       0
  1558 ;;      Locals:         1       0       0       0       0
  1559 ;;      Temps:          0       0       0       0       0
  1560 ;;      Totals:         1       0       0       0       0
  1561 ;;Total ram usage:        1 bytes
  1562 ;; Hardware stack levels used: 1
  1563 ;; Hardware stack levels required when called: 1
  1564 ;; This function calls:
  1565 ;;		_flip_EN
  1566 ;; This function is called by:
  1567 ;;		_LCD_START
  1568 ;;		_LCD_setCursor
  1569 ;;		_LCD_CLR
  1570 ;;		_LCD_shiftR
  1571 ;;		_LCD_shiftL
  1572 ;; This function uses a non-reentrant model
  1573 ;;
  1574                           
  1575                           
  1576                           ;psect for function _LCD_CMD
  1577  05E9                     _LCD_CMD:
  1578                           
  1579                           ;incstack = 0
  1580                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  1581                           ;LCD_CMD@cmd stored from wreg
  1582  05E9  00F2               	movwf	LCD_CMD@cmd
  1583  05EA                     l969:
  1584                           
  1585                           ;lcd_8bitsA.c: 13: RD7 = 0;
  1586  05EA  1283               	bcf	3,5	;RP0=0, select bank0
  1587  05EB  1303               	bcf	3,6	;RP1=0, select bank0
  1588  05EC  1388               	bcf	8,7	;volatile
  1589  05ED                     l971:
  1590                           
  1591                           ;lcd_8bitsA.c: 14: PORTB = cmd;
  1592  05ED  0872               	movf	LCD_CMD@cmd,w
  1593  05EE  0086               	movwf	6	;volatile
  1594  05EF                     l973:
  1595                           
  1596                           ;lcd_8bitsA.c: 15: flip_EN ();
  1597  05EF  120A  118A  2611  120A  118A  	fcall	_flip_EN
  1598  05F4                     l76:
  1599  05F4  0008               	return
  1600  05F5                     __end_of_LCD_CMD:
  1601                           
  1602                           	psect	text10
  1603  0611                     __ptext10:	
  1604 ;; *************** function _flip_EN *****************
  1605 ;; Defined at:
  1606 ;;		line 5 in file "lcd_8bitsA.c"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;		None
  1609 ;; Auto vars:     Size  Location     Type
  1610 ;;		None
  1611 ;; Return value:  Size  Location     Type
  1612 ;;                  1    wreg      void 
  1613 ;; Registers used:
  1614 ;;		wreg
  1615 ;; Tracked objects:
  1616 ;;		On entry : 0/0
  1617 ;;		On exit  : 0/0
  1618 ;;		Unchanged: 0/0
  1619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1620 ;;      Params:         0       0       0       0       0
  1621 ;;      Locals:         0       0       0       0       0
  1622 ;;      Temps:          2       0       0       0       0
  1623 ;;      Totals:         2       0       0       0       0
  1624 ;;Total ram usage:        2 bytes
  1625 ;; Hardware stack levels used: 1
  1626 ;; This function calls:
  1627 ;;		Nothing
  1628 ;; This function is called by:
  1629 ;;		_LCD_CMD
  1630 ;;		_LCD_write
  1631 ;; This function uses a non-reentrant model
  1632 ;;
  1633                           
  1634                           
  1635                           ;psect for function _flip_EN
  1636  0611                     _flip_EN:
  1637  0611                     l963:	
  1638                           ;incstack = 0
  1639                           ; Regs used in _flip_EN: [wreg]
  1640                           
  1641                           
  1642                           ;lcd_8bitsA.c: 6: RD6 = 1;
  1643  0611  1283               	bcf	3,5	;RP0=0, select bank0
  1644  0612  1303               	bcf	3,6	;RP1=0, select bank0
  1645  0613  1708               	bsf	8,6	;volatile
  1646  0614                     l965:
  1647                           
  1648                           ;lcd_8bitsA.c: 7: _delay((unsigned long)((5)*(4000000/4000.0)));
  1649  0614  3007               	movlw	7
  1650  0615  00F1               	movwf	??_flip_EN+1
  1651  0616  307D               	movlw	125
  1652  0617  00F0               	movwf	??_flip_EN
  1653  0618                     u297:
  1654  0618  0BF0               	decfsz	??_flip_EN,f
  1655  0619  2E18               	goto	u297
  1656  061A  0BF1               	decfsz	??_flip_EN+1,f
  1657  061B  2E18               	goto	u297
  1658  061C                     l967:
  1659                           
  1660                           ;lcd_8bitsA.c: 8: RD6 = 0;
  1661  061C  1283               	bcf	3,5	;RP0=0, select bank0
  1662  061D  1303               	bcf	3,6	;RP1=0, select bank0
  1663  061E  1308               	bcf	8,6	;volatile
  1664  061F                     l73:
  1665  061F  0008               	return
  1666  0620                     __end_of_flip_EN:
  1667                           
  1668                           	psect	text11
  1669  0602                     __ptext11:	
  1670 ;; *************** function _config_io *****************
  1671 ;; Defined at:
  1672 ;;		line 121 in file "C:/Users/nicou/OneDrive/Documents/2022/1er_semestre/Digital_2/MiniProy2/MP2-Maestro.X/main.c"
  1673 ;; Parameters:    Size  Location     Type
  1674 ;;		None
  1675 ;; Auto vars:     Size  Location     Type
  1676 ;;		None
  1677 ;; Return value:  Size  Location     Type
  1678 ;;                  1    wreg      void 
  1679 ;; Registers used:
  1680 ;;		status,2
  1681 ;; Tracked objects:
  1682 ;;		On entry : 0/0
  1683 ;;		On exit  : 0/0
  1684 ;;		Unchanged: 0/0
  1685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1686 ;;      Params:         0       0       0       0       0
  1687 ;;      Locals:         0       0       0       0       0
  1688 ;;      Temps:          0       0       0       0       0
  1689 ;;      Totals:         0       0       0       0       0
  1690 ;;Total ram usage:        0 bytes
  1691 ;; Hardware stack levels used: 1
  1692 ;; This function calls:
  1693 ;;		Nothing
  1694 ;; This function is called by:
  1695 ;;		_setup
  1696 ;; This function uses a non-reentrant model
  1697 ;;
  1698                           
  1699                           
  1700                           ;psect for function _config_io
  1701  0602                     _config_io:
  1702  0602                     l1061:	
  1703                           ;incstack = 0
  1704                           ; Regs used in _config_io: [status,2]
  1705                           
  1706                           
  1707                           ;main.c: 122: ANSEL = 0;
  1708  0602  1683               	bsf	3,5	;RP0=1, select bank3
  1709  0603  1703               	bsf	3,6	;RP1=1, select bank3
  1710  0604  0188               	clrf	8	;volatile
  1711                           
  1712                           ;main.c: 123: ANSELH = 0;
  1713  0605  0189               	clrf	9	;volatile
  1714                           
  1715                           ;main.c: 125: TRISA = 0;
  1716  0606  1683               	bsf	3,5	;RP0=1, select bank1
  1717  0607  1303               	bcf	3,6	;RP1=0, select bank1
  1718  0608  0185               	clrf	5	;volatile
  1719                           
  1720                           ;main.c: 126: TRISB = 0;
  1721  0609  0186               	clrf	6	;volatile
  1722                           
  1723                           ;main.c: 127: TRISD = 0;
  1724  060A  0188               	clrf	8	;volatile
  1725                           
  1726                           ;main.c: 129: PORTA = 0;
  1727  060B  1283               	bcf	3,5	;RP0=0, select bank0
  1728  060C  1303               	bcf	3,6	;RP1=0, select bank0
  1729  060D  0185               	clrf	5	;volatile
  1730                           
  1731                           ;main.c: 130: PORTB = 0;
  1732  060E  0186               	clrf	6	;volatile
  1733                           
  1734                           ;main.c: 131: PORTD = 0;
  1735  060F  0188               	clrf	8	;volatile
  1736  0610                     l54:
  1737  0610  0008               	return
  1738  0611                     __end_of_config_io:
  1739                           
  1740                           	psect	text12
  1741  05B9                     __ptext12:	
  1742 ;; *************** function _config_clock *****************
  1743 ;; Defined at:
  1744 ;;		line 136 in file "C:/Users/nicou/OneDrive/Documents/2022/1er_semestre/Digital_2/MiniProy2/MP2-Maestro.X/main.c"
  1745 ;; Parameters:    Size  Location     Type
  1746 ;;		None
  1747 ;; Auto vars:     Size  Location     Type
  1748 ;;		None
  1749 ;; Return value:  Size  Location     Type
  1750 ;;                  1    wreg      void 
  1751 ;; Registers used:
  1752 ;;		wreg, status,2, status,0
  1753 ;; Tracked objects:
  1754 ;;		On entry : 0/0
  1755 ;;		On exit  : 0/0
  1756 ;;		Unchanged: 0/0
  1757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1758 ;;      Params:         0       0       0       0       0
  1759 ;;      Locals:         0       0       0       0       0
  1760 ;;      Temps:          0       0       0       0       0
  1761 ;;      Totals:         0       0       0       0       0
  1762 ;;Total ram usage:        0 bytes
  1763 ;; Hardware stack levels used: 1
  1764 ;; This function calls:
  1765 ;;		Nothing
  1766 ;; This function is called by:
  1767 ;;		_setup
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771                           
  1772                           ;psect for function _config_clock
  1773  05B9                     _config_clock:
  1774  05B9                     l1063:	
  1775                           ;incstack = 0
  1776                           ; Regs used in _config_clock: [wreg+status,2+status,0]
  1777                           
  1778                           
  1779                           ;main.c: 137: OSCCONbits.IRCF = 0b110;
  1780  05B9  1683               	bsf	3,5	;RP0=1, select bank1
  1781  05BA  1303               	bcf	3,6	;RP1=0, select bank1
  1782  05BB  080F               	movf	15,w	;volatile
  1783  05BC  398F               	andlw	-113
  1784  05BD  3860               	iorlw	96
  1785  05BE  008F               	movwf	15	;volatile
  1786  05BF                     l1065:
  1787                           
  1788                           ;main.c: 138: OSCCONbits.SCS = 1;
  1789  05BF  140F               	bsf	15,0	;volatile
  1790  05C0                     l57:
  1791  05C0  0008               	return
  1792  05C1                     __end_of_config_clock:
  1793                           
  1794                           	psect	text13
  1795  062F                     __ptext13:	
  1796 ;; *************** function _i2c_MW *****************
  1797 ;; Defined at:
  1798 ;;		line 76 in file "C:/Users/nicou/OneDrive/Documents/2022/1er_semestre/Digital_2/MiniProy2/MP2-Maestro.X/i2c.c"
  1799 ;; Parameters:    Size  Location     Type
  1800 ;;  address         1    wreg     unsigned char 
  1801 ;;  messege         1    1[COMMON] unsigned char 
  1802 ;; Auto vars:     Size  Location     Type
  1803 ;;  address         1    2[COMMON] unsigned char 
  1804 ;; Return value:  Size  Location     Type
  1805 ;;                  1    wreg      void 
  1806 ;; Registers used:
  1807 ;;		wreg, status,2, status,0, pclath, cstack
  1808 ;; Tracked objects:
  1809 ;;		On entry : 0/0
  1810 ;;		On exit  : 0/0
  1811 ;;		Unchanged: 0/0
  1812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1813 ;;      Params:         1       0       0       0       0
  1814 ;;      Locals:         1       0       0       0       0
  1815 ;;      Temps:          0       0       0       0       0
  1816 ;;      Totals:         2       0       0       0       0
  1817 ;;Total ram usage:        2 bytes
  1818 ;; Hardware stack levels used: 1
  1819 ;; Hardware stack levels required when called: 2
  1820 ;; This function calls:
  1821 ;;		_i2c_MasterSS
  1822 ;;		_i2c_MasterStart
  1823 ;;		_i2c_MasterStop
  1824 ;;		_i2c_MasterWrite
  1825 ;; This function is called by:
  1826 ;;		_main
  1827 ;; This function uses a non-reentrant model
  1828 ;;
  1829                           
  1830                           
  1831                           ;psect for function _i2c_MW
  1832  062F                     _i2c_MW:
  1833                           
  1834                           ;incstack = 0
  1835                           ; Regs used in _i2c_MW: [wreg+status,2+status,0+pclath+cstack]
  1836                           ;i2c_MW@address stored from wreg
  1837  062F  00F2               	movwf	i2c_MW@address
  1838  0630                     l1115:
  1839                           
  1840                           ;i2c.c: 77: i2c_MasterStart();
  1841  0630  120A  118A  25C1  120A  118A  	fcall	_i2c_MasterStart
  1842                           
  1843                           ;i2c.c: 78: i2c_MasterSS(address);
  1844  0635  0872               	movf	i2c_MW@address,w
  1845  0636  120A  118A  25D3  120A  118A  	fcall	_i2c_MasterSS
  1846                           
  1847                           ;i2c.c: 79: i2c_MasterWrite(messege);
  1848  063B  0871               	movf	i2c_MW@messege,w
  1849  063C  120A  118A  25DE  120A  118A  	fcall	_i2c_MasterWrite
  1850                           
  1851                           ;i2c.c: 80: i2c_MasterStop();
  1852  0641  120A  118A  25CA  120A  118A  	fcall	_i2c_MasterStop
  1853  0646                     l153:
  1854  0646  0008               	return
  1855  0647                     __end_of_i2c_MW:
  1856                           
  1857                           	psect	text14
  1858  05DE                     __ptext14:	
  1859 ;; *************** function _i2c_MasterWrite *****************
  1860 ;; Defined at:
  1861 ;;		line 48 in file "C:/Users/nicou/OneDrive/Documents/2022/1er_semestre/Digital_2/MiniProy2/MP2-Maestro.X/i2c.c"
  1862 ;; Parameters:    Size  Location     Type
  1863 ;;  dato            1    wreg     unsigned char 
  1864 ;; Auto vars:     Size  Location     Type
  1865 ;;  dato            1    0[COMMON] unsigned char 
  1866 ;; Return value:  Size  Location     Type
  1867 ;;                  1    wreg      void 
  1868 ;; Registers used:
  1869 ;;		wreg, status,2, status,0, pclath, cstack
  1870 ;; Tracked objects:
  1871 ;;		On entry : 0/0
  1872 ;;		On exit  : 0/0
  1873 ;;		Unchanged: 0/0
  1874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1875 ;;      Params:         0       0       0       0       0
  1876 ;;      Locals:         1       0       0       0       0
  1877 ;;      Temps:          0       0       0       0       0
  1878 ;;      Totals:         1       0       0       0       0
  1879 ;;Total ram usage:        1 bytes
  1880 ;; Hardware stack levels used: 1
  1881 ;; Hardware stack levels required when called: 1
  1882 ;; This function calls:
  1883 ;;		_i2c_MasterWait
  1884 ;; This function is called by:
  1885 ;;		_i2c_MW
  1886 ;; This function uses a non-reentrant model
  1887 ;;
  1888                           
  1889                           
  1890                           ;psect for function _i2c_MasterWrite
  1891  05DE                     _i2c_MasterWrite:
  1892                           
  1893                           ;incstack = 0
  1894                           ; Regs used in _i2c_MasterWrite: [wreg+status,2+status,0+pclath+cstack]
  1895                           ;i2c_MasterWrite@dato stored from wreg
  1896  05DE  00F0               	movwf	i2c_MasterWrite@dato
  1897  05DF                     l1103:
  1898                           
  1899                           ;i2c.c: 49: i2c_MasterWait();
  1900  05DF  120A  118A  25F5  120A  118A  	fcall	_i2c_MasterWait
  1901  05E4                     l1105:
  1902                           
  1903                           ;i2c.c: 50: SSPBUF = dato;
  1904  05E4  0870               	movf	i2c_MasterWrite@dato,w
  1905  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  1906  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  1907  05E7  0093               	movwf	19	;volatile
  1908  05E8                     l145:
  1909  05E8  0008               	return
  1910  05E9                     __end_of_i2c_MasterWrite:
  1911                           
  1912                           	psect	text15
  1913  05CA                     __ptext15:	
  1914 ;; *************** function _i2c_MasterStop *****************
  1915 ;; Defined at:
  1916 ;;		line 38 in file "C:/Users/nicou/OneDrive/Documents/2022/1er_semestre/Digital_2/MiniProy2/MP2-Maestro.X/i2c.c"
  1917 ;; Parameters:    Size  Location     Type
  1918 ;;		None
  1919 ;; Auto vars:     Size  Location     Type
  1920 ;;		None
  1921 ;; Return value:  Size  Location     Type
  1922 ;;                  1    wreg      void 
  1923 ;; Registers used:
  1924 ;;		wreg, status,2, status,0, pclath, cstack
  1925 ;; Tracked objects:
  1926 ;;		On entry : 0/0
  1927 ;;		On exit  : 0/0
  1928 ;;		Unchanged: 0/0
  1929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1930 ;;      Params:         0       0       0       0       0
  1931 ;;      Locals:         0       0       0       0       0
  1932 ;;      Temps:          0       0       0       0       0
  1933 ;;      Totals:         0       0       0       0       0
  1934 ;;Total ram usage:        0 bytes
  1935 ;; Hardware stack levels used: 1
  1936 ;; Hardware stack levels required when called: 1
  1937 ;; This function calls:
  1938 ;;		_i2c_MasterWait
  1939 ;; This function is called by:
  1940 ;;		_i2c_MW
  1941 ;;		_i2c_MR
  1942 ;; This function uses a non-reentrant model
  1943 ;;
  1944                           
  1945                           
  1946                           ;psect for function _i2c_MasterStop
  1947  05CA                     _i2c_MasterStop:
  1948  05CA                     l1095:	
  1949                           ;incstack = 0
  1950                           ; Regs used in _i2c_MasterStop: [wreg+status,2+status,0+pclath+cstack]
  1951                           
  1952                           
  1953                           ;i2c.c: 39: i2c_MasterWait();
  1954  05CA  120A  118A  25F5  120A  118A  	fcall	_i2c_MasterWait
  1955  05CF                     l1097:
  1956                           
  1957                           ;i2c.c: 40: SSPCON2bits.PEN = 1;
  1958  05CF  1683               	bsf	3,5	;RP0=1, select bank1
  1959  05D0  1303               	bcf	3,6	;RP1=0, select bank1
  1960  05D1  1511               	bsf	17,2	;volatile
  1961  05D2                     l139:
  1962  05D2  0008               	return
  1963  05D3                     __end_of_i2c_MasterStop:
  1964                           
  1965                           	psect	text16
  1966  05C1                     __ptext16:	
  1967 ;; *************** function _i2c_MasterStart *****************
  1968 ;; Defined at:
  1969 ;;		line 28 in file "C:/Users/nicou/OneDrive/Documents/2022/1er_semestre/Digital_2/MiniProy2/MP2-Maestro.X/i2c.c"
  1970 ;; Parameters:    Size  Location     Type
  1971 ;;		None
  1972 ;; Auto vars:     Size  Location     Type
  1973 ;;		None
  1974 ;; Return value:  Size  Location     Type
  1975 ;;                  1    wreg      void 
  1976 ;; Registers used:
  1977 ;;		wreg, status,2, status,0, pclath, cstack
  1978 ;; Tracked objects:
  1979 ;;		On entry : 0/0
  1980 ;;		On exit  : 0/0
  1981 ;;		Unchanged: 0/0
  1982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1983 ;;      Params:         0       0       0       0       0
  1984 ;;      Locals:         0       0       0       0       0
  1985 ;;      Temps:          0       0       0       0       0
  1986 ;;      Totals:         0       0       0       0       0
  1987 ;;Total ram usage:        0 bytes
  1988 ;; Hardware stack levels used: 1
  1989 ;; Hardware stack levels required when called: 1
  1990 ;; This function calls:
  1991 ;;		_i2c_MasterWait
  1992 ;; This function is called by:
  1993 ;;		_i2c_MW
  1994 ;;		_i2c_MR
  1995 ;; This function uses a non-reentrant model
  1996 ;;
  1997                           
  1998                           
  1999                           ;psect for function _i2c_MasterStart
  2000  05C1                     _i2c_MasterStart:
  2001  05C1                     l1091:	
  2002                           ;incstack = 0
  2003                           ; Regs used in _i2c_MasterStart: [wreg+status,2+status,0+pclath+cstack]
  2004                           
  2005                           
  2006                           ;i2c.c: 29: i2c_MasterWait();
  2007  05C1  120A  118A  25F5  120A  118A  	fcall	_i2c_MasterWait
  2008  05C6                     l1093:
  2009                           
  2010                           ;i2c.c: 30: SSPCON2bits.SEN = 1;
  2011  05C6  1683               	bsf	3,5	;RP0=1, select bank1
  2012  05C7  1303               	bcf	3,6	;RP1=0, select bank1
  2013  05C8  1411               	bsf	17,0	;volatile
  2014  05C9                     l133:
  2015  05C9  0008               	return
  2016  05CA                     __end_of_i2c_MasterStart:
  2017                           
  2018                           	psect	text17
  2019  05D3                     __ptext17:	
  2020 ;; *************** function _i2c_MasterSS *****************
  2021 ;; Defined at:
  2022 ;;		line 43 in file "C:/Users/nicou/OneDrive/Documents/2022/1er_semestre/Digital_2/MiniProy2/MP2-Maestro.X/i2c.c"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;  address         1    wreg     unsigned char 
  2025 ;; Auto vars:     Size  Location     Type
  2026 ;;  address         1    0[COMMON] unsigned char 
  2027 ;; Return value:  Size  Location     Type
  2028 ;;                  1    wreg      void 
  2029 ;; Registers used:
  2030 ;;		wreg, status,2, status,0, pclath, cstack
  2031 ;; Tracked objects:
  2032 ;;		On entry : 0/0
  2033 ;;		On exit  : 0/0
  2034 ;;		Unchanged: 0/0
  2035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2036 ;;      Params:         0       0       0       0       0
  2037 ;;      Locals:         1       0       0       0       0
  2038 ;;      Temps:          0       0       0       0       0
  2039 ;;      Totals:         1       0       0       0       0
  2040 ;;Total ram usage:        1 bytes
  2041 ;; Hardware stack levels used: 1
  2042 ;; Hardware stack levels required when called: 1
  2043 ;; This function calls:
  2044 ;;		_i2c_MasterWait
  2045 ;; This function is called by:
  2046 ;;		_i2c_MW
  2047 ;;		_i2c_MR
  2048 ;; This function uses a non-reentrant model
  2049 ;;
  2050                           
  2051                           
  2052                           ;psect for function _i2c_MasterSS
  2053  05D3                     _i2c_MasterSS:
  2054                           
  2055                           ;incstack = 0
  2056                           ; Regs used in _i2c_MasterSS: [wreg+status,2+status,0+pclath+cstack]
  2057                           ;i2c_MasterSS@address stored from wreg
  2058  05D3  00F0               	movwf	i2c_MasterSS@address
  2059  05D4                     l1099:
  2060                           
  2061                           ;i2c.c: 44: i2c_MasterWait();
  2062  05D4  120A  118A  25F5  120A  118A  	fcall	_i2c_MasterWait
  2063  05D9                     l1101:
  2064                           
  2065                           ;i2c.c: 45: SSPBUF = address;
  2066  05D9  0870               	movf	i2c_MasterSS@address,w
  2067  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  2068  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  2069  05DC  0093               	movwf	19	;volatile
  2070  05DD                     l142:
  2071  05DD  0008               	return
  2072  05DE                     __end_of_i2c_MasterSS:
  2073                           
  2074                           	psect	text18
  2075  05F5                     __ptext18:	
  2076 ;; *************** function _i2c_MasterWait *****************
  2077 ;; Defined at:
  2078 ;;		line 24 in file "C:/Users/nicou/OneDrive/Documents/2022/1er_semestre/Digital_2/MiniProy2/MP2-Maestro.X/i2c.c"
  2079 ;; Parameters:    Size  Location     Type
  2080 ;;		None
  2081 ;; Auto vars:     Size  Location     Type
  2082 ;;		None
  2083 ;; Return value:  Size  Location     Type
  2084 ;;                  1    wreg      void 
  2085 ;; Registers used:
  2086 ;;		wreg, status,2
  2087 ;; Tracked objects:
  2088 ;;		On entry : 0/0
  2089 ;;		On exit  : 0/0
  2090 ;;		Unchanged: 0/0
  2091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2092 ;;      Params:         0       0       0       0       0
  2093 ;;      Locals:         0       0       0       0       0
  2094 ;;      Temps:          0       0       0       0       0
  2095 ;;      Totals:         0       0       0       0       0
  2096 ;;Total ram usage:        0 bytes
  2097 ;; Hardware stack levels used: 1
  2098 ;; This function calls:
  2099 ;;		Nothing
  2100 ;; This function is called by:
  2101 ;;		_i2c_MasterStart
  2102 ;;		_i2c_MasterStop
  2103 ;;		_i2c_MasterSS
  2104 ;;		_i2c_MasterWrite
  2105 ;;		_i2c_Master_RepeatStart
  2106 ;;		_i2c_MasterRead
  2107 ;; This function uses a non-reentrant model
  2108 ;;
  2109                           
  2110                           
  2111                           ;psect for function _i2c_MasterWait
  2112  05F5                     _i2c_MasterWait:
  2113  05F5                     l1033:	
  2114                           ;incstack = 0
  2115                           ; Regs used in _i2c_MasterWait: [wreg+status,2]
  2116                           
  2117  05F5                     l127:	
  2118                           ;i2c.c: 25: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2119                           
  2120  05F5  1683               	bsf	3,5	;RP0=1, select bank1
  2121  05F6  1303               	bcf	3,6	;RP1=0, select bank1
  2122  05F7  1914               	btfsc	20,2	;volatile
  2123  05F8  2DFA               	goto	u141
  2124  05F9  2DFB               	goto	u140
  2125  05FA                     u141:
  2126  05FA  2DF5               	goto	l127
  2127  05FB                     u140:
  2128  05FB                     l1035:
  2129  05FB  0811               	movf	17,w	;volatile
  2130  05FC  391F               	andlw	31
  2131  05FD  1D03               	btfss	3,2
  2132  05FE  2E00               	goto	u151
  2133  05FF  2E01               	goto	u150
  2134  0600                     u151:
  2135  0600  2DF5               	goto	l127
  2136  0601                     u150:
  2137  0601                     l130:
  2138  0601  0008               	return
  2139  0602                     __end_of_i2c_MasterWait:
  2140  007E                     btemp	set	126	;btemp
  2141  007E                     wtemp0	set	126
  2142                           
  2143                           	psect	config
  2144                           
  2145                           ;Config register CONFIG1 @ 0x2007
  2146                           ;	Oscillator Selection bits
  2147                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2148                           ;	Watchdog Timer Enable bit
  2149                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2150                           ;	Power-up Timer Enable bit
  2151                           ;	PWRTE = OFF, PWRT disabled
  2152                           ;	RE3/MCLR pin function select bit
  2153                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2154                           ;	Code Protection bit
  2155                           ;	CP = OFF, Program memory code protection is disabled
  2156                           ;	Data Code Protection bit
  2157                           ;	CPD = OFF, Data memory code protection is disabled
  2158                           ;	Brown Out Reset Selection bits
  2159                           ;	BOREN = OFF, BOR disabled
  2160                           ;	Internal External Switchover bit
  2161                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2162                           ;	Fail-Safe Clock Monitor Enabled bit
  2163                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2164                           ;	Low Voltage Programming Enable bit
  2165                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2166                           ;	In-Circuit Debugger Mode bit
  2167                           ;	DEBUG = 0x1, unprogrammed default
  2168  2007                     	org	8199
  2169  2007  20D4               	dw	8404
  2170                           
  2171                           ;Config register CONFIG2 @ 0x2008
  2172                           ;	Brown-out Reset Selection bit
  2173                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2174                           ;	Flash Program Memory Self Write Enable bits
  2175                           ;	WRT = OFF, Write protection off
  2176  2008                     	org	8200
  2177  2008  3FFF               	dw	16383

Data Sizes:
    Strings     15
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     11      13
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_writeString@text	PTR unsigned char  size(1) Largest target is 9
		 -> STR_2(CODE[9]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _i2c_MasterInit->___lldiv
    _config_lcd->_LCD_writeString
    _LCD_writeString->_LCD_write
    _LCD_write->_flip_EN
    _LCD_setCursor->_LCD_CMD
    _LCD_START->_LCD_CMD
    _LCD_CMD->_flip_EN
    _i2c_MW->_i2c_MasterSS
    _i2c_MW->_i2c_MasterWrite

Critical Paths under _main in BANK0

    _setup->_i2c_MasterInit

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1038
                                              8 BANK0      3     3      0
                             _i2c_MW
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     874
                       _config_clock
                          _config_io
                         _config_lcd
                     _i2c_MasterInit
 ---------------------------------------------------------------------------------
 (2) _i2c_MasterInit                                       8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) _config_lcd                                           1     1      0     462
                                              6 COMMON     1     1      0
                          _LCD_START
                      _LCD_setCursor
                    _LCD_writeString
 ---------------------------------------------------------------------------------
 (3) _LCD_writeString                                      3     3      0     178
                                              3 COMMON     3     3      0
                          _LCD_write
 ---------------------------------------------------------------------------------
 (4) _LCD_write                                            1     1      0      22
                                              2 COMMON     1     1      0
                            _flip_EN
 ---------------------------------------------------------------------------------
 (3) _LCD_setCursor                                        2     1      1     262
                                              3 COMMON     2     1      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _LCD_START                                            2     2      0      22
                                              3 COMMON     2     2      0
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (4) _LCD_CMD                                              1     1      0      22
                                              2 COMMON     1     1      0
                            _flip_EN
 ---------------------------------------------------------------------------------
 (5) _flip_EN                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _config_io                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_clock                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_MW                                               2     1      1     164
                                              1 COMMON     2     1      1
                       _i2c_MasterSS
                    _i2c_MasterStart
                     _i2c_MasterStop
                    _i2c_MasterWrite
 ---------------------------------------------------------------------------------
 (2) _i2c_MasterWrite                                      1     1      0      22
                                              0 COMMON     1     1      0
                     _i2c_MasterWait
 ---------------------------------------------------------------------------------
 (2) _i2c_MasterStop                                       0     0      0       0
                     _i2c_MasterWait
 ---------------------------------------------------------------------------------
 (2) _i2c_MasterStart                                      0     0      0       0
                     _i2c_MasterWait
 ---------------------------------------------------------------------------------
 (2) _i2c_MasterSS                                         1     1      0      22
                                              0 COMMON     1     1      0
                     _i2c_MasterWait
 ---------------------------------------------------------------------------------
 (3) _i2c_MasterWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _i2c_MW
     _i2c_MasterSS
       _i2c_MasterWait
     _i2c_MasterStart
       _i2c_MasterWait
     _i2c_MasterStop
       _i2c_MasterWait
     _i2c_MasterWrite
       _i2c_MasterWait
   _setup
     _config_clock
     _config_io
     _config_lcd
       _LCD_START
         _LCD_CMD
           _flip_EN
       _LCD_setCursor
         _LCD_CMD
       _LCD_writeString
         _LCD_write
           _flip_EN
     _i2c_MasterInit
       ___lldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      B       D       5       16.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1B      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Mar 06 18:30:58 2022

                       pc 0002                        l51 0665                        l60 0689  
                      l54 0610                        l57 05C0                        l73 061F  
                      l90 06D7                        l76 05F4                        l93 062E  
                      l79 0791                        l99 06AE                        fsr 0004  
                     l130 0601                       l124 0742                       l133 05C9  
                     l142 05DD                       l127 05F5                       l145 05E8  
                     l153 0646                       l139 05D2                       l281 07F7  
                     l963 0611                       l971 05ED                       l965 0614  
                     l973 05EF                       l981 0626                       l967 061C  
                     l991 074B                       l983 062B                       l969 05EA  
                     l993 0754                       l977 0621                       l995 075A  
                     l987 0743                       l979 0624                       l997 0762  
                     l989 0747                       l999 0768                       _RD6 0046  
                     _RD7 0047                       u200 07D1                       u201 07D0  
                     u130 06AE                       u131 06AD                       u140 05FB  
                     u220 07EF                       u141 05FA                       u221 07EE  
                     u205 07CD                       u150 0601                       u230 0723  
                     u151 0600                       u215 07E1                       u160 07A2  
                     u161 07A1                       u235 071E                       u180 07B6  
                     u181 07B5                       u175 07A7                       u257 06F5  
                     u267 074F                       u195 07B8                       u277 075E  
                     u287 076A                       u297 0618                       fsr0 0004  
         __end_of_LCD_CMD 05F5                      l1001 076D                      l1011 078B  
                    l1003 0773                      l1101 05D9                      l1005 0779  
                    l1013 06B0                      l1103 05DF                      l1007 077F  
                    l1015 06B1                      l1023 06CF                      l1031 06A1  
                    l1111 0651                      l1033 05F5                      l1105 05E4  
                    l1009 0785                      l1017 06BB                      l1025 068B  
                    l1041 07A5                      l1113 0656                      l1035 05FB  
                    l1115 0630                      l1019 06C5                      l1027 068E  
                    l1051 07DF                      l1043 07B2                      l1107 0647  
                    l1061 0602                      l1029 069B                      l1053 07E0  
                    l1045 07B6                      l1037 0792                      l1109 064C  
                    l1141 06FB                      l1133 06D8                      l1063 05B9  
                    l1071 0673                      l1055 07E9                      l1047 07BF  
                    l1039 07A2                      l1135 06DD                      l1065 05BF  
                    l1073 0679                      l1049 07D1                      l1057 07EF  
                    l1081 070C                      l1137 06E3                      l1091 05C1  
                    l1075 0683                      l1067 0666                      l1083 0710  
                    l1139 06ED                      l1093 05C6                      l1069 066B  
                    l1085 0713                      l1077 0705                      l1095 05CA  
                    l1087 0740                      l1079 0709                      l1097 05CF  
                    l1089 0741                      l1099 05D4                      STR_1 0012  
                    STR_2 0009        __size_of_LCD_START 004F            ??_i2c_MasterSS 0070  
                    _data 002B                      _main 06D8                      btemp 007E  
  __size_of_LCD_setCursor 0029            ??_config_clock 0070                      start 0000  
        ?_LCD_writeString 0070        __size_of_LCD_write 000F                     ?_main 0070  
                   _ANSEL 0188           __end_of___lldiv 07F8                     _PORTA 0005  
                   _PORTB 0006                     _PORTD 0008                     _TRISA 0085  
                   _TRISB 0086                     _TRISD 0088           __end_of_flip_EN 0620  
                   _setup 0647                     pclath 000A                     status 0003  
                   wtemp0 007E           __initialization 07F8              __end_of_main 0705  
                  ??_main 0028         __end_of_LCD_START 0792             _LCD_setCursor 06AF  
               ??_LCD_CMD 0072         __end_of_LCD_write 062F                    ?_setup 0070  
                  _ANSELH 0189                    _SSPADD 0093                    _SSPBUF 0013  
                  _SSPCON 0014                    _i2c_MW 062F        i2c_MasterInit@freq 0020  
               ??___lldiv 0078          ??_i2c_MasterInit 0024          ??_i2c_MasterWait 0070  
        ??_i2c_MasterStop 0070            ?_LCD_setCursor 0073                 ??_flip_EN 0070  
    __end_of_i2c_MasterSS 05DE      __end_of_config_clock 05C1         LCD_setCursor@fila 0074  
 __end_of__initialization 07FC  __size_of_i2c_MasterStart 0009            __pcstackCOMMON 0070  
__size_of_i2c_MasterWrite 000B             __end_of_setup 0666       i2c_MasterSS@address 0070  
      __size_of_config_io 000F                   ??_setup 007E                __pbssBANK0 002B  
                 ?_i2c_MW 0071                __pmaintext 06D8           ??_LCD_setCursor 0074  
          LCD_write@value 0072                   _LCD_CMD 05E9                _config_lcd 0666  
                 _SSPCON2 0091                   _SSPSTAT 0094                __stringtab 0003  
         __size_of_i2c_MW 0018         __end_of_config_io 0611     __size_of_i2c_MasterSS 000B  
                 ___lldiv 0792     __size_of_config_clock 0008                   __ptext1 0647  
                 __ptext2 0705                   __ptext3 0792                   __ptext4 0666  
                 __ptext5 068A                   __ptext6 0620                   __ptext7 06AF  
                 __ptext8 0743                   __ptext9 05E9         ??_i2c_MasterStart 0070  
                 _flip_EN 0611         ??_i2c_MasterWrite 0070  __size_of_LCD_writeString 0025  
     LCD_writeString@text 0075          LCD_writeString@i 0073                 _LCD_START 0743  
    end_of_initialization 07FC                 _LCD_write 0620              _i2c_MasterSS 05D3  
         ___lldiv@divisor 0070              _config_clock 05B9           ___lldiv@counter 007D  
              LCD_CMD@cmd 0072               ?_config_lcd 0070                ?_LCD_START 0070  
               _TRISCbits 0087                ?_LCD_write 0070            __end_of_i2c_MW 0647  
     i2c_MasterWrite@dato 0070       start_initialization 07F8         ??_LCD_writeString 0073  
                ??_i2c_MW 0072       __size_of_config_lcd 0024                  ?_LCD_CMD 0070  
               ___latbits 0002             __pcstackBANK0 0020               ??_LCD_START 0073  
 __size_of_i2c_MasterInit 003E   __size_of_i2c_MasterWait 000D   __size_of_i2c_MasterStop 0009  
             ??_LCD_write 0072           _i2c_MasterStart 05C1           _i2c_MasterWrite 05DE  
                ?___lldiv 0070                 _config_io 0602     __end_of_LCD_setCursor 06D8  
               __pstrings 0003                  ?_flip_EN 0070            __size_of_setup 001F  
              ?_config_io 0070               __stringbase 0008          __size_of_LCD_CMD 000C  
            ??_config_lcd 0076   __end_of_i2c_MasterStart 05CA   __end_of_i2c_MasterWrite 05E9  
      __end_of_config_lcd 068A          __size_of___lldiv 0066           _LCD_writeString 068A  
      __end_of__stringtab 0009          __size_of_flip_EN 000F            _i2c_MasterInit 0705  
          _i2c_MasterWait 05F5            _i2c_MasterStop 05CA                  __ptext10 0611  
                __ptext11 0602                  __ptext12 05B9                  __ptext13 062F  
                __ptext14 05DE                  __ptext15 05CA                  __ptext16 05C1  
                __ptext17 05D3                  __ptext18 05F5             __size_of_main 002D  
    LCD_setCursor@columna 0073               ??_config_io 0070    __end_of_i2c_MasterInit 0743  
  __end_of_i2c_MasterWait 0602    __end_of_i2c_MasterStop 05D3          ?_i2c_MasterStart 0070  
        ?_i2c_MasterWrite 0070          ___lldiv@dividend 0074                 stringcode 0003  
              _OSCCONbits 008F             i2c_MW@address 0072   __end_of_LCD_writeString 06AF  
           i2c_MW@messege 0071           ?_i2c_MasterInit 0020           ?_i2c_MasterWait 0070  
         ?_i2c_MasterStop 0070          ___lldiv@quotient 0079                  stringdir 0003  
                stringtab 0003               _SSPCON2bits 0091             ?_i2c_MasterSS 0070  
              _SSPCONbits 0014             ?_config_clock 0070  
