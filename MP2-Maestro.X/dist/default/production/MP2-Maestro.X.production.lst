

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Mar 07 11:42:23 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F887 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  008F                     	;# 
   110  0090                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  0105                     	;# 
   129  0107                     	;# 
   130  0108                     	;# 
   131  0109                     	;# 
   132  010C                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  0185                     	;# 
   138  0187                     	;# 
   139  0188                     	;# 
   140  0189                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0015                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001B                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  0081                     	;# 
   179  0085                     	;# 
   180  0086                     	;# 
   181  0087                     	;# 
   182  0088                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  008F                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0094                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0097                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009A                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  009F                     	;# 
   206  0105                     	;# 
   207  0107                     	;# 
   208  0108                     	;# 
   209  0109                     	;# 
   210  010C                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010E                     	;# 
   214  010F                     	;# 
   215  0185                     	;# 
   216  0187                     	;# 
   217  0188                     	;# 
   218  0189                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000D                     	;# 
   235  000E                     	;# 
   236  000E                     	;# 
   237  000F                     	;# 
   238  0010                     	;# 
   239  0011                     	;# 
   240  0012                     	;# 
   241  0013                     	;# 
   242  0014                     	;# 
   243  0015                     	;# 
   244  0015                     	;# 
   245  0016                     	;# 
   246  0017                     	;# 
   247  0018                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001B                     	;# 
   252  001C                     	;# 
   253  001D                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  0081                     	;# 
   257  0085                     	;# 
   258  0086                     	;# 
   259  0087                     	;# 
   260  0088                     	;# 
   261  0089                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  008F                     	;# 
   266  0090                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0094                     	;# 
   273  0095                     	;# 
   274  0096                     	;# 
   275  0097                     	;# 
   276  0098                     	;# 
   277  0099                     	;# 
   278  009A                     	;# 
   279  009B                     	;# 
   280  009C                     	;# 
   281  009D                     	;# 
   282  009E                     	;# 
   283  009F                     	;# 
   284  0105                     	;# 
   285  0107                     	;# 
   286  0108                     	;# 
   287  0109                     	;# 
   288  010C                     	;# 
   289  010C                     	;# 
   290  010D                     	;# 
   291  010E                     	;# 
   292  010F                     	;# 
   293  0185                     	;# 
   294  0187                     	;# 
   295  0188                     	;# 
   296  0189                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0006                     	;# 
   306  0007                     	;# 
   307  0008                     	;# 
   308  0009                     	;# 
   309  000A                     	;# 
   310  000B                     	;# 
   311  000C                     	;# 
   312  000D                     	;# 
   313  000E                     	;# 
   314  000E                     	;# 
   315  000F                     	;# 
   316  0010                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0013                     	;# 
   320  0014                     	;# 
   321  0015                     	;# 
   322  0015                     	;# 
   323  0016                     	;# 
   324  0017                     	;# 
   325  0018                     	;# 
   326  0019                     	;# 
   327  001A                     	;# 
   328  001B                     	;# 
   329  001B                     	;# 
   330  001C                     	;# 
   331  001D                     	;# 
   332  001E                     	;# 
   333  001F                     	;# 
   334  0081                     	;# 
   335  0085                     	;# 
   336  0086                     	;# 
   337  0087                     	;# 
   338  0088                     	;# 
   339  0089                     	;# 
   340  008C                     	;# 
   341  008D                     	;# 
   342  008E                     	;# 
   343  008F                     	;# 
   344  0090                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0094                     	;# 
   351  0095                     	;# 
   352  0096                     	;# 
   353  0097                     	;# 
   354  0098                     	;# 
   355  0099                     	;# 
   356  009A                     	;# 
   357  009B                     	;# 
   358  009C                     	;# 
   359  009D                     	;# 
   360  009E                     	;# 
   361  009F                     	;# 
   362  0105                     	;# 
   363  0107                     	;# 
   364  0108                     	;# 
   365  0109                     	;# 
   366  010C                     	;# 
   367  010C                     	;# 
   368  010D                     	;# 
   369  010E                     	;# 
   370  010F                     	;# 
   371  0185                     	;# 
   372  0187                     	;# 
   373  0188                     	;# 
   374  0189                     	;# 
   375  018C                     	;# 
   376  018D                     	;# 
   377  0014                     _SSPCONbits	set	20
   378  0013                     _SSPBUF	set	19
   379  0014                     _SSPCON	set	20
   380  0008                     _PORTD	set	8
   381  0006                     _PORTB	set	6
   382  0005                     _PORTA	set	5
   383  0046                     _RD6	set	70
   384  0047                     _RD7	set	71
   385  0091                     _SSPCON2bits	set	145
   386  0093                     _SSPADD	set	147
   387  0091                     _SSPCON2	set	145
   388  0094                     _SSPSTATbits	set	148
   389  0094                     _SSPSTAT	set	148
   390  0087                     _TRISCbits	set	135
   391  008F                     _OSCCONbits	set	143
   392  0088                     _TRISD	set	136
   393  0086                     _TRISB	set	134
   394  0085                     _TRISA	set	133
   395  0189                     _ANSELH	set	393
   396  0188                     _ANSEL	set	392
   397                           
   398                           	psect	strings
   399  0003                     __pstrings:
   400  0003                     stringtab:
   401  0003                     __stringtab:
   402  0003                     stringcode:	
   403                           ;	String table - string pointers are 1 byte each
   404                           
   405  0003                     stringdir:
   406  0003  3000               	movlw	high stringdir
   407  0004  008A               	movwf	10
   408  0005  0804               	movf	4,w
   409  0006  0A84               	incf	4,f
   410  0007  0782               	addwf	2,f
   411  0008                     __stringbase:
   412  0008  3400               	retlw	0
   413  0009                     __end_of__stringtab:
   414  0009                     STR_6:
   415  0009  3453               	retlw	83	;'S'
   416  000A  3465               	retlw	101	;'e'
   417  000B  346D               	retlw	109	;'m'
   418  000C  3461               	retlw	97	;'a'
   419  000D  3466               	retlw	102	;'f'
   420  000E  346F               	retlw	111	;'o'
   421  000F  3472               	retlw	114	;'r'
   422  0010  346F               	retlw	111	;'o'
   423  0011  3400               	retlw	0
   424  0012                     STR_3:
   425  0012  3452               	retlw	82	;'R'
   426  0013  346F               	retlw	111	;'o'
   427  0014  346A               	retlw	106	;'j'
   428  0015  346F               	retlw	111	;'o'
   429  0016  3420               	retlw	32	;' '
   430  0017  3420               	retlw	32	;' '
   431  0018  3420               	retlw	32	;' '
   432  0019  3400               	retlw	0
   433  001A                     STR_1:
   434  001A  3456               	retlw	86	;'V'
   435  001B  3465               	retlw	101	;'e'
   436  001C  3472               	retlw	114	;'r'
   437  001D  3464               	retlw	100	;'d'
   438  001E  3465               	retlw	101	;'e'
   439  001F  3420               	retlw	32	;' '
   440  0020  3400               	retlw	0
   441  0021                     STR_4:
   442  0021  3445               	retlw	69	;'E'
   443  0022  3472               	retlw	114	;'r'
   444  0023  3472               	retlw	114	;'r'
   445  0024  346F               	retlw	111	;'o'
   446  0025  3472               	retlw	114	;'r'
   447  0026  3420               	retlw	32	;' '
   448  0027  3400               	retlw	0
   449  0028                     STR_2:
   450  0028  3459               	retlw	89	;'Y'
   451  0029  3465               	retlw	101	;'e'
   452  002A  346C               	retlw	108	;'l'
   453  002B  346C               	retlw	108	;'l'
   454  002C  346F               	retlw	111	;'o'
   455  002D  3477               	retlw	119	;'w'
   456  002E  3400               	retlw	0
   457  002F                     STR_5:
   458  002F  3447               	retlw	71	;'G'
   459  0030  3465               	retlw	101	;'e'
   460  0031  3473               	retlw	115	;'s'
   461  0032  3474               	retlw	116	;'t'
   462  0033  346F               	retlw	111	;'o'
   463  0034  3400               	retlw	0
   464                           
   465                           	psect	cinit
   466  07F7                     start_initialization:	
   467                           ; #config settings
   468                           
   469  07F7                     __initialization:
   470                           
   471                           ; Clear objects allocated to BANK0
   472  07F7  1283               	bcf	3,5	;RP0=0, select bank0
   473  07F8  1303               	bcf	3,6	;RP1=0, select bank0
   474  07F9  01AB               	clrf	__pbssBANK0& (0+127)
   475  07FA  01AC               	clrf	(__pbssBANK0+1)& (0+127)
   476  07FB  01AD               	clrf	(__pbssBANK0+2)& (0+127)
   477  07FC                     end_of_initialization:	
   478                           ;End of C runtime variable initialization code
   479                           
   480  07FC                     __end_of__initialization:
   481  07FC  0183               	clrf	3
   482  07FD  120A  118A  2F2D   	ljmp	_main	;jump to C main() function
   483                           
   484                           	psect	bssBANK0
   485  002B                     __pbssBANK0:
   486  002B                     _data:
   487  002B                     	ds	2
   488  002D                     _semaforo:
   489  002D                     	ds	1
   490                           
   491                           	psect	cstackCOMMON
   492  0070                     __pcstackCOMMON:
   493  0070                     ?_setup:
   494  0070                     ?_LCD_writeString:	
   495                           ; 1 bytes @ 0x0
   496                           
   497  0070                     ?_i2c_MasterStart:	
   498                           ; 1 bytes @ 0x0
   499                           
   500  0070                     ?_i2c_MasterStop:	
   501                           ; 1 bytes @ 0x0
   502                           
   503  0070                     ?_config_io:	
   504                           ; 1 bytes @ 0x0
   505                           
   506  0070                     ??_config_io:	
   507                           ; 1 bytes @ 0x0
   508                           
   509  0070                     ?_config_clock:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  0070                     ??_config_clock:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0070                     ?_config_lcd:	
   516                           ; 1 bytes @ 0x0
   517                           
   518  0070                     ?_LCD_START:	
   519                           ; 1 bytes @ 0x0
   520                           
   521  0070                     ?_main:	
   522                           ; 1 bytes @ 0x0
   523                           
   524  0070                     ?_flip_EN:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  0070                     ??_flip_EN:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0070                     ?_LCD_CMD:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0070                     ?_LCD_write:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0070                     ?_i2c_MasterWait:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0070                     ??_i2c_MasterWait:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0070                     ?___lldiv:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0070                     ___lldiv@divisor:	
   546                           ; 4 bytes @ 0x0
   547                           
   548                           
   549                           ; 4 bytes @ 0x0
   550  0070                     	ds	2
   551  0072                     ??_i2c_MasterStart:
   552  0072                     ?_i2c_MasterSS:	
   553                           ; 1 bytes @ 0x2
   554                           
   555  0072                     ?_i2c_MasterWrite:	
   556                           ; 1 bytes @ 0x2
   557                           
   558  0072                     ??_i2c_MasterStop:	
   559                           ; 1 bytes @ 0x2
   560                           
   561  0072                     ??_LCD_CMD:	
   562                           ; 1 bytes @ 0x2
   563                           
   564  0072                     ??_LCD_write:	
   565                           ; 1 bytes @ 0x2
   566                           
   567  0072                     LCD_CMD@cmd:	
   568                           ; 1 bytes @ 0x2
   569                           
   570  0072                     LCD_write@value:	
   571                           ; 1 bytes @ 0x2
   572                           
   573  0072                     i2c_MasterSS@address:	
   574                           ; 1 bytes @ 0x2
   575                           
   576  0072                     i2c_MasterWrite@dato:	
   577                           ; 2 bytes @ 0x2
   578                           
   579                           
   580                           ; 2 bytes @ 0x2
   581  0072                     	ds	1
   582  0073                     ?_LCD_setCursor:
   583  0073                     ??_LCD_writeString:	
   584                           ; 1 bytes @ 0x3
   585                           
   586  0073                     ??_LCD_START:	
   587                           ; 1 bytes @ 0x3
   588                           
   589  0073                     LCD_setCursor@columna:	
   590                           ; 1 bytes @ 0x3
   591                           
   592  0073                     LCD_writeString@i:	
   593                           ; 1 bytes @ 0x3
   594                           
   595                           
   596                           ; 2 bytes @ 0x3
   597  0073                     	ds	1
   598  0074                     ??_LCD_setCursor:
   599  0074                     ?_i2c_MW:	
   600                           ; 1 bytes @ 0x4
   601                           
   602  0074                     ??_i2c_MasterSS:	
   603                           ; 1 bytes @ 0x4
   604                           
   605  0074                     ??_i2c_MasterWrite:	
   606                           ; 1 bytes @ 0x4
   607                           
   608  0074                     LCD_setCursor@fila:	
   609                           ; 1 bytes @ 0x4
   610                           
   611  0074                     i2c_MW@messege:	
   612                           ; 1 bytes @ 0x4
   613                           
   614  0074                     ___lldiv@dividend:	
   615                           ; 1 bytes @ 0x4
   616                           
   617                           
   618                           ; 4 bytes @ 0x4
   619  0074                     	ds	1
   620  0075                     ??_i2c_MW:
   621  0075                     LCD_writeString@text:	
   622                           ; 1 bytes @ 0x5
   623                           
   624                           
   625                           ; 1 bytes @ 0x5
   626  0075                     	ds	1
   627  0076                     ??_config_lcd:
   628                           
   629                           ; 1 bytes @ 0x6
   630  0076                     	ds	1
   631  0077                     i2c_MW@address:
   632                           
   633                           ; 1 bytes @ 0x7
   634  0077                     	ds	1
   635  0078                     ??___lldiv:
   636                           
   637                           ; 1 bytes @ 0x8
   638  0078                     	ds	1
   639  0079                     ___lldiv@quotient:
   640                           
   641                           ; 4 bytes @ 0x9
   642  0079                     	ds	4
   643  007D                     ___lldiv@counter:
   644                           
   645                           ; 1 bytes @ 0xD
   646  007D                     	ds	1
   647  007E                     ??_setup:
   648                           
   649                           	psect	cstackBANK0
   650  0020                     __pcstackBANK0:	
   651                           ; 1 bytes @ 0xE
   652                           
   653  0020                     ?_i2c_MasterInit:
   654  0020                     i2c_MasterInit@freq:	
   655                           ; 1 bytes @ 0x0
   656                           
   657                           
   658                           ; 4 bytes @ 0x0
   659  0020                     	ds	4
   660  0024                     ??_i2c_MasterInit:
   661                           
   662                           ; 1 bytes @ 0x4
   663  0024                     	ds	4
   664  0028                     ??_main:
   665                           
   666                           ; 1 bytes @ 0x8
   667  0028                     	ds	3
   668                           
   669                           	psect	maintext
   670  072D                     __pmaintext:	
   671 ;;
   672 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   673 ;;
   674 ;; *************** function _main *****************
   675 ;; Defined at:
   676 ;;		line 94 in file "C:/Users/nicou/OneDrive/Documents/2022/1er_semestre/Digital_2/MiniProy2/MP2-Maestro.X/main.c"
   677 ;; Parameters:    Size  Location     Type
   678 ;;		None
   679 ;; Auto vars:     Size  Location     Type
   680 ;;		None
   681 ;; Return value:  Size  Location     Type
   682 ;;                  1    wreg      void 
   683 ;; Registers used:
   684 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   685 ;; Tracked objects:
   686 ;;		On entry : B00/0
   687 ;;		On exit  : 0/0
   688 ;;		Unchanged: 0/0
   689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   690 ;;      Params:         0       0       0       0       0
   691 ;;      Locals:         0       0       0       0       0
   692 ;;      Temps:          0       3       0       0       0
   693 ;;      Totals:         0       3       0       0       0
   694 ;;Total ram usage:        3 bytes
   695 ;; Hardware stack levels required when called: 5
   696 ;; This function calls:
   697 ;;		_LCD_setCursor
   698 ;;		_LCD_writeString
   699 ;;		_i2c_MW
   700 ;;		_i2c_MasterSS
   701 ;;		_i2c_MasterStart
   702 ;;		_i2c_MasterStop
   703 ;;		_i2c_MasterWrite
   704 ;;		_setup
   705 ;; This function is called by:
   706 ;;		Startup code after reset
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710                           
   711                           ;psect for function _main
   712  072D                     _main:
   713  072D                     l1207:	
   714                           ;incstack = 0
   715                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   716                           
   717                           
   718                           ;main.c: 95: setup();
   719  072D  120A  118A  2588  120A  118A  	fcall	_setup
   720  0732  2FD7               	goto	l1251
   721  0733                     l57:	
   722                           ;main.c: 100: case 0:
   723                           
   724                           
   725                           ;main.c: 101: data.send = 0b001;
   726  0733  01AB               	clrf	_data
   727  0734  0AAB               	incf	_data,f
   728  0735                     l1209:
   729                           
   730                           ;main.c: 102: LCD_setCursor (2,9);
   731  0735  3009               	movlw	9
   732  0736  00A8               	movwf	??_main
   733  0737  0828               	movf	??_main,w
   734  0738  00F3               	movwf	LCD_setCursor@columna
   735  0739  3002               	movlw	2
   736  073A  120A  118A  2614  120A  118A  	fcall	_LCD_setCursor
   737                           
   738                           ;main.c: 103: LCD_writeString ("Verde ");
   739  073F  3012               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   740  0740  120A  118A  25EF  120A  118A  	fcall	_LCD_writeString
   741  0745                     l1211:
   742                           
   743                           ;main.c: 104: i2c_MW(0x50, data.send);
   744  0745  1283               	bcf	3,5	;RP0=0, select bank0
   745  0746  1303               	bcf	3,6	;RP1=0, select bank0
   746  0747  082B               	movf	_data,w
   747  0748  00A8               	movwf	??_main
   748  0749  0828               	movf	??_main,w
   749  074A  00F4               	movwf	i2c_MW@messege
   750  074B  3050               	movlw	80
   751  074C  120A  118A  25A7  120A  118A  	fcall	_i2c_MW
   752  0751                     l1213:
   753                           
   754                           ;main.c: 106: semaforo = 1;
   755  0751  1283               	bcf	3,5	;RP0=0, select bank0
   756  0752  1303               	bcf	3,6	;RP1=0, select bank0
   757  0753  01AD               	clrf	_semaforo
   758  0754  0AAD               	incf	_semaforo,f
   759                           
   760                           ;main.c: 107: break;
   761  0755  2FE4               	goto	l1253
   762  0756                     l1215:
   763                           
   764                           ;main.c: 110: data.send = 0b010;
   765  0756  3002               	movlw	2
   766  0757  00A8               	movwf	??_main
   767  0758  0828               	movf	??_main,w
   768  0759  00AB               	movwf	_data
   769  075A                     l1217:
   770                           
   771                           ;main.c: 111: LCD_setCursor (2,9);
   772  075A  3009               	movlw	9
   773  075B  00A8               	movwf	??_main
   774  075C  0828               	movf	??_main,w
   775  075D  00F3               	movwf	LCD_setCursor@columna
   776  075E  3002               	movlw	2
   777  075F  120A  118A  2614  120A  118A  	fcall	_LCD_setCursor
   778  0764                     l1219:
   779                           
   780                           ;main.c: 112: LCD_writeString ("Yellow");
   781  0764  3020               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   782  0765  120A  118A  25EF  120A  118A  	fcall	_LCD_writeString
   783  076A                     l1221:
   784                           
   785                           ;main.c: 115: i2c_MasterStart();
   786  076A  120A  118A  250A  120A  118A  	fcall	_i2c_MasterStart
   787  076F                     l1223:
   788                           
   789                           ;main.c: 116: i2c_MasterSS(0x50);
   790  076F  3050               	movlw	80
   791  0770  00F2               	movwf	i2c_MasterSS@address
   792  0771  3000               	movlw	0
   793  0772  00F3               	movwf	i2c_MasterSS@address+1
   794  0773  120A  118A  251C  120A  118A  	fcall	_i2c_MasterSS
   795  0778                     l1225:
   796                           
   797                           ;main.c: 117: i2c_MasterWrite(data.send);
   798  0778  1283               	bcf	3,5	;RP0=0, select bank0
   799  0779  1303               	bcf	3,6	;RP1=0, select bank0
   800  077A  082B               	movf	_data,w
   801  077B  00A8               	movwf	??_main
   802  077C  01A9               	clrf	??_main+1
   803  077D  0828               	movf	??_main,w
   804  077E  00F2               	movwf	i2c_MasterWrite@dato
   805  077F  0829               	movf	??_main+1,w
   806  0780  00F3               	movwf	i2c_MasterWrite@dato+1
   807  0781  120A  118A  2526  120A  118A  	fcall	_i2c_MasterWrite
   808  0786                     l1227:
   809                           
   810                           ;main.c: 118: i2c_MasterStop();
   811  0786  120A  118A  2513  120A  118A  	fcall	_i2c_MasterStop
   812                           
   813                           ;main.c: 120: semaforo = 2;
   814  078B  3002               	movlw	2
   815  078C  1283               	bcf	3,5	;RP0=0, select bank0
   816  078D  1303               	bcf	3,6	;RP1=0, select bank0
   817  078E  00A8               	movwf	??_main
   818  078F  0828               	movf	??_main,w
   819  0790  00AD               	movwf	_semaforo
   820                           
   821                           ;main.c: 121: break;
   822  0791  2FE4               	goto	l1253
   823  0792                     l1229:
   824                           
   825                           ;main.c: 124: data.send = 0b100;
   826  0792  3004               	movlw	4
   827  0793  00A8               	movwf	??_main
   828  0794  0828               	movf	??_main,w
   829  0795  00AB               	movwf	_data
   830  0796                     l1231:
   831                           
   832                           ;main.c: 125: LCD_setCursor (2,9);
   833  0796  3009               	movlw	9
   834  0797  00A8               	movwf	??_main
   835  0798  0828               	movf	??_main,w
   836  0799  00F3               	movwf	LCD_setCursor@columna
   837  079A  3002               	movlw	2
   838  079B  120A  118A  2614  120A  118A  	fcall	_LCD_setCursor
   839  07A0                     l1233:
   840                           
   841                           ;main.c: 126: LCD_writeString ("Rojo   ");
   842  07A0  300A               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   843  07A1  120A  118A  25EF  120A  118A  	fcall	_LCD_writeString
   844  07A6                     l1235:
   845                           
   846                           ;main.c: 128: i2c_MW(0x50, data.send);
   847  07A6  1283               	bcf	3,5	;RP0=0, select bank0
   848  07A7  1303               	bcf	3,6	;RP1=0, select bank0
   849  07A8  082B               	movf	_data,w
   850  07A9  00A8               	movwf	??_main
   851  07AA  0828               	movf	??_main,w
   852  07AB  00F4               	movwf	i2c_MW@messege
   853  07AC  3050               	movlw	80
   854  07AD  120A  118A  25A7  120A  118A  	fcall	_i2c_MW
   855  07B2                     l1237:
   856                           
   857                           ;main.c: 130: semaforo = 0;
   858  07B2  1283               	bcf	3,5	;RP0=0, select bank0
   859  07B3  1303               	bcf	3,6	;RP1=0, select bank0
   860  07B4  01AD               	clrf	_semaforo
   861                           
   862                           ;main.c: 131: break;
   863  07B5  2FE4               	goto	l1253
   864  07B6                     l1239:
   865                           
   866                           ;main.c: 134: data.send = 0b111;
   867  07B6  3007               	movlw	7
   868  07B7  00A8               	movwf	??_main
   869  07B8  0828               	movf	??_main,w
   870  07B9  00AB               	movwf	_data
   871  07BA                     l1241:
   872                           
   873                           ;main.c: 135: LCD_setCursor (2,9);
   874  07BA  3009               	movlw	9
   875  07BB  00A8               	movwf	??_main
   876  07BC  0828               	movf	??_main,w
   877  07BD  00F3               	movwf	LCD_setCursor@columna
   878  07BE  3002               	movlw	2
   879  07BF  120A  118A  2614  120A  118A  	fcall	_LCD_setCursor
   880  07C4                     l1243:
   881                           
   882                           ;main.c: 136: LCD_writeString ("Error ");
   883  07C4  3019               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   884  07C5  120A  118A  25EF  120A  118A  	fcall	_LCD_writeString
   885  07CA                     l1245:
   886                           
   887                           ;main.c: 138: i2c_MW(0x50, data.send);
   888  07CA  1283               	bcf	3,5	;RP0=0, select bank0
   889  07CB  1303               	bcf	3,6	;RP1=0, select bank0
   890  07CC  082B               	movf	_data,w
   891  07CD  00A8               	movwf	??_main
   892  07CE  0828               	movf	??_main,w
   893  07CF  00F4               	movwf	i2c_MW@messege
   894  07D0  3050               	movlw	80
   895  07D1  120A  118A  25A7  120A  118A  	fcall	_i2c_MW
   896  07D6  2F51               	goto	l1213
   897  07D7                     l1251:
   898  07D7  1283               	bcf	3,5	;RP0=0, select bank0
   899  07D8  1303               	bcf	3,6	;RP1=0, select bank0
   900  07D9  082D               	movf	_semaforo,w
   901                           
   902                           ; Switch size 1, requested type "simple"
   903                           ; Number of cases is 3, Range of values is 0 to 2
   904                           ; switch strategies available:
   905                           ; Name         Instructions Cycles
   906                           ; simple_byte           10     6 (average)
   907                           ; direct_byte           17     8 (fixed)
   908                           ; jumptable            260     6 (fixed)
   909                           ;	Chosen strategy is simple_byte
   910  07DA  3A00               	xorlw	0	; case 0
   911  07DB  1903               	skipnz
   912  07DC  2F33               	goto	l57
   913  07DD  3A01               	xorlw	1	; case 1
   914  07DE  1903               	skipnz
   915  07DF  2F56               	goto	l1215
   916  07E0  3A03               	xorlw	3	; case 2
   917  07E1  1903               	skipnz
   918  07E2  2F92               	goto	l1229
   919  07E3  2FB6               	goto	l1239
   920  07E4                     l1253:
   921                           
   922                           ;main.c: 146: _delay((unsigned long)((200)*(4000000/4000.0)));
   923  07E4  3002               	movlw	2
   924  07E5  1283               	bcf	3,5	;RP0=0, select bank0
   925  07E6  1303               	bcf	3,6	;RP1=0, select bank0
   926  07E7  00AA               	movwf	??_main+2
   927  07E8  3004               	movlw	4
   928  07E9  00A9               	movwf	??_main+1
   929  07EA  30B9               	movlw	185
   930  07EB  00A8               	movwf	??_main
   931  07EC                     u277:
   932  07EC  0BA8               	decfsz	??_main,f
   933  07ED  2FEC               	goto	u277
   934  07EE  0BA9               	decfsz	??_main+1,f
   935  07EF  2FEC               	goto	u277
   936  07F0  0BAA               	decfsz	??_main+2,f
   937  07F1  2FEC               	goto	u277
   938  07F2  2FF3               	nop2
   939  07F3  2FD7               	goto	l1251
   940  07F4  120A  118A  2800   	ljmp	start
   941  07F7                     __end_of_main:
   942                           
   943                           	psect	text1
   944  0588                     __ptext1:	
   945 ;; *************** function _setup *****************
   946 ;; Defined at:
   947 ;;		line 164 in file "C:/Users/nicou/OneDrive/Documents/2022/1er_semestre/Digital_2/MiniProy2/MP2-Maestro.X/main.c"
   948 ;; Parameters:    Size  Location     Type
   949 ;;		None
   950 ;; Auto vars:     Size  Location     Type
   951 ;;		None
   952 ;; Return value:  Size  Location     Type
   953 ;;                  1    wreg      void 
   954 ;; Registers used:
   955 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   956 ;; Tracked objects:
   957 ;;		On entry : 0/0
   958 ;;		On exit  : 0/0
   959 ;;		Unchanged: 0/0
   960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   961 ;;      Params:         0       0       0       0       0
   962 ;;      Locals:         0       0       0       0       0
   963 ;;      Temps:          0       0       0       0       0
   964 ;;      Totals:         0       0       0       0       0
   965 ;;Total ram usage:        0 bytes
   966 ;; Hardware stack levels used: 1
   967 ;; Hardware stack levels required when called: 4
   968 ;; This function calls:
   969 ;;		_config_clock
   970 ;;		_config_io
   971 ;;		_config_lcd
   972 ;;		_i2c_MasterInit
   973 ;; This function is called by:
   974 ;;		_main
   975 ;; This function uses a non-reentrant model
   976 ;;
   977                           
   978                           
   979                           ;psect for function _setup
   980  0588                     _setup:
   981  0588                     l1179:	
   982                           ;incstack = 0
   983                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   984                           
   985                           
   986                           ;main.c: 165: config_io();
   987  0588  120A  118A  253C  120A  118A  	fcall	_config_io
   988  058D                     l1181:
   989                           
   990                           ;main.c: 166: config_clock();
   991  058D  120A  118A  2502  120A  118A  	fcall	_config_clock
   992  0592                     l1183:
   993                           
   994                           ;main.c: 167: config_lcd();
   995  0592  120A  118A  25CB  120A  118A  	fcall	_config_lcd
   996  0597                     l1185:
   997                           
   998                           ;main.c: 170: i2c_MasterInit(400000);
   999  0597  3000               	movlw	0
  1000  0598  1283               	bcf	3,5	;RP0=0, select bank0
  1001  0599  1303               	bcf	3,6	;RP1=0, select bank0
  1002  059A  00A3               	movwf	i2c_MasterInit@freq+3
  1003  059B  3006               	movlw	6
  1004  059C  00A2               	movwf	i2c_MasterInit@freq+2
  1005  059D  301A               	movlw	26
  1006  059E  00A1               	movwf	i2c_MasterInit@freq+1
  1007  059F  3080               	movlw	128
  1008  05A0  00A0               	movwf	i2c_MasterInit@freq
  1009  05A1  120A  118A  263D  120A  118A  	fcall	_i2c_MasterInit
  1010  05A6                     l67:
  1011  05A6  0008               	return
  1012  05A7                     __end_of_setup:
  1013                           
  1014                           	psect	text2
  1015  063D                     __ptext2:	
  1016 ;; *************** function _i2c_MasterInit *****************
  1017 ;; Defined at:
  1018 ;;		line 10 in file "C:/Users/nicou/OneDrive/Documents/2022/1er_semestre/Digital_2/MiniProy2/MP2-Maestro.X/i2c.c"
  1019 ;; Parameters:    Size  Location     Type
  1020 ;;  freq            4    0[BANK0 ] unsigned long 
  1021 ;; Auto vars:     Size  Location     Type
  1022 ;;		None
  1023 ;; Return value:  Size  Location     Type
  1024 ;;                  1    wreg      void 
  1025 ;; Registers used:
  1026 ;;		wreg, status,2, status,0, pclath, cstack
  1027 ;; Tracked objects:
  1028 ;;		On entry : 0/0
  1029 ;;		On exit  : 0/0
  1030 ;;		Unchanged: 0/0
  1031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1032 ;;      Params:         0       4       0       0       0
  1033 ;;      Locals:         0       0       0       0       0
  1034 ;;      Temps:          0       4       0       0       0
  1035 ;;      Totals:         0       8       0       0       0
  1036 ;;Total ram usage:        8 bytes
  1037 ;; Hardware stack levels used: 1
  1038 ;; Hardware stack levels required when called: 1
  1039 ;; This function calls:
  1040 ;;		___lldiv
  1041 ;; This function is called by:
  1042 ;;		_setup
  1043 ;; This function uses a non-reentrant model
  1044 ;;
  1045                           
  1046                           
  1047                           ;psect for function _i2c_MasterInit
  1048  063D                     _i2c_MasterInit:
  1049  063D                     l1167:	
  1050                           ;incstack = 0
  1051                           ; Regs used in _i2c_MasterInit: [wreg+status,2+status,0+pclath+cstack]
  1052                           
  1053                           
  1054                           ;i2c.c: 12: TRISCbits.TRISC3 = 1;
  1055  063D  1683               	bsf	3,5	;RP0=1, select bank1
  1056  063E  1303               	bcf	3,6	;RP1=0, select bank1
  1057  063F  1587               	bsf	7,3	;volatile
  1058                           
  1059                           ;i2c.c: 13: TRISCbits.TRISC4 = 1;
  1060  0640  1607               	bsf	7,4	;volatile
  1061  0641                     l1169:
  1062                           
  1063                           ;i2c.c: 15: SSPSTAT = 0;
  1064  0641  0194               	clrf	20	;volatile
  1065  0642                     l1171:
  1066                           
  1067                           ;i2c.c: 16: SSPSTATbits.SMP = 0;
  1068  0642  1394               	bcf	20,7	;volatile
  1069  0643                     l1173:
  1070                           
  1071                           ;i2c.c: 18: SSPCON = 0x28;
  1072  0643  3028               	movlw	40
  1073  0644  1283               	bcf	3,5	;RP0=0, select bank0
  1074  0645  1303               	bcf	3,6	;RP1=0, select bank0
  1075  0646  0094               	movwf	20	;volatile
  1076  0647                     l1175:
  1077                           
  1078                           ;i2c.c: 20: SSPCON2 = 0;
  1079  0647  1683               	bsf	3,5	;RP0=1, select bank1
  1080  0648  1303               	bcf	3,6	;RP1=0, select bank1
  1081  0649  0191               	clrf	17	;volatile
  1082  064A                     l1177:
  1083                           
  1084                           ;i2c.c: 22: SSPADD = (4000000/(4*freq))-1;
  1085  064A  1283               	bcf	3,5	;RP0=0, select bank0
  1086  064B  1303               	bcf	3,6	;RP1=0, select bank0
  1087  064C  0820               	movf	i2c_MasterInit@freq,w
  1088  064D  00A4               	movwf	??_i2c_MasterInit
  1089  064E  0821               	movf	i2c_MasterInit@freq+1,w
  1090  064F  00A5               	movwf	??_i2c_MasterInit+1
  1091  0650  0822               	movf	i2c_MasterInit@freq+2,w
  1092  0651  00A6               	movwf	??_i2c_MasterInit+2
  1093  0652  0823               	movf	i2c_MasterInit@freq+3,w
  1094  0653  00A7               	movwf	??_i2c_MasterInit+3
  1095  0654  3002               	movlw	2
  1096  0655                     u255:
  1097  0655  1003               	clrc
  1098  0656  0DA4               	rlf	??_i2c_MasterInit,f
  1099  0657  0DA5               	rlf	??_i2c_MasterInit+1,f
  1100  0658  0DA6               	rlf	??_i2c_MasterInit+2,f
  1101  0659  0DA7               	rlf	??_i2c_MasterInit+3,f
  1102  065A                     u250:
  1103  065A  3EFF               	addlw	-1
  1104  065B  1D03               	skipz
  1105  065C  2E55               	goto	u255
  1106  065D  0827               	movf	??_i2c_MasterInit+3,w
  1107  065E  00F3               	movwf	___lldiv@divisor+3
  1108  065F  0826               	movf	??_i2c_MasterInit+2,w
  1109  0660  00F2               	movwf	___lldiv@divisor+2
  1110  0661  0825               	movf	??_i2c_MasterInit+1,w
  1111  0662  00F1               	movwf	___lldiv@divisor+1
  1112  0663  0824               	movf	??_i2c_MasterInit,w
  1113  0664  00F0               	movwf	___lldiv@divisor
  1114  0665  3000               	movlw	0
  1115  0666  00F7               	movwf	___lldiv@dividend+3
  1116  0667  303D               	movlw	61
  1117  0668  00F6               	movwf	___lldiv@dividend+2
  1118  0669  3009               	movlw	9
  1119  066A  00F5               	movwf	___lldiv@dividend+1
  1120  066B  3000               	movlw	0
  1121  066C  00F4               	movwf	___lldiv@dividend
  1122  066D  120A  118A  26C7  120A  118A  	fcall	___lldiv
  1123  0672  0870               	movf	?___lldiv,w
  1124  0673  3EFF               	addlw	255
  1125  0674  1683               	bsf	3,5	;RP0=1, select bank1
  1126  0675  1303               	bcf	3,6	;RP1=0, select bank1
  1127  0676  0093               	movwf	19	;volatile
  1128  0677                     l144:
  1129  0677  0008               	return
  1130  0678                     __end_of_i2c_MasterInit:
  1131                           
  1132                           	psect	text3
  1133  06C7                     __ptext3:	
  1134 ;; *************** function ___lldiv *****************
  1135 ;; Defined at:
  1136 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  1137 ;; Parameters:    Size  Location     Type
  1138 ;;  divisor         4    0[COMMON] unsigned long 
  1139 ;;  dividend        4    4[COMMON] unsigned long 
  1140 ;; Auto vars:     Size  Location     Type
  1141 ;;  quotient        4    9[COMMON] unsigned long 
  1142 ;;  counter         1   13[COMMON] unsigned char 
  1143 ;; Return value:  Size  Location     Type
  1144 ;;                  4    0[COMMON] unsigned long 
  1145 ;; Registers used:
  1146 ;;		wreg, status,2, status,0
  1147 ;; Tracked objects:
  1148 ;;		On entry : 0/0
  1149 ;;		On exit  : 0/0
  1150 ;;		Unchanged: 0/0
  1151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1152 ;;      Params:         8       0       0       0       0
  1153 ;;      Locals:         5       0       0       0       0
  1154 ;;      Temps:          1       0       0       0       0
  1155 ;;      Totals:        14       0       0       0       0
  1156 ;;Total ram usage:       14 bytes
  1157 ;; Hardware stack levels used: 1
  1158 ;; This function calls:
  1159 ;;		Nothing
  1160 ;; This function is called by:
  1161 ;;		_i2c_MasterInit
  1162 ;; This function uses a non-reentrant model
  1163 ;;
  1164                           
  1165                           
  1166                           ;psect for function ___lldiv
  1167  06C7                     ___lldiv:
  1168  06C7                     l1111:	
  1169                           ;incstack = 0
  1170                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1171                           
  1172  06C7  3000               	movlw	0
  1173  06C8  00FC               	movwf	___lldiv@quotient+3
  1174  06C9  3000               	movlw	0
  1175  06CA  00FB               	movwf	___lldiv@quotient+2
  1176  06CB  3000               	movlw	0
  1177  06CC  00FA               	movwf	___lldiv@quotient+1
  1178  06CD  3000               	movlw	0
  1179  06CE  00F9               	movwf	___lldiv@quotient
  1180  06CF  0873               	movf	___lldiv@divisor+3,w
  1181  06D0  0472               	iorwf	___lldiv@divisor+2,w
  1182  06D1  0471               	iorwf	___lldiv@divisor+1,w
  1183  06D2  0470               	iorwf	___lldiv@divisor,w
  1184  06D3  1903               	skipnz
  1185  06D4  2ED6               	goto	u181
  1186  06D5  2ED7               	goto	u180
  1187  06D6                     u181:
  1188  06D6  2F24               	goto	l1131
  1189  06D7                     u180:
  1190  06D7                     l1113:
  1191  06D7  01FD               	clrf	___lldiv@counter
  1192  06D8  0AFD               	incf	___lldiv@counter,f
  1193  06D9  2EE7               	goto	l1117
  1194  06DA                     l1115:
  1195  06DA  3001               	movlw	1
  1196  06DB  00F8               	movwf	??___lldiv
  1197  06DC                     u195:
  1198  06DC  1003               	clrc
  1199  06DD  0DF0               	rlf	___lldiv@divisor,f
  1200  06DE  0DF1               	rlf	___lldiv@divisor+1,f
  1201  06DF  0DF2               	rlf	___lldiv@divisor+2,f
  1202  06E0  0DF3               	rlf	___lldiv@divisor+3,f
  1203  06E1  0BF8               	decfsz	??___lldiv,f
  1204  06E2  2EDC               	goto	u195
  1205  06E3  3001               	movlw	1
  1206  06E4  00F8               	movwf	??___lldiv
  1207  06E5  0878               	movf	??___lldiv,w
  1208  06E6  07FD               	addwf	___lldiv@counter,f
  1209  06E7                     l1117:
  1210  06E7  1FF3               	btfss	___lldiv@divisor+3,7
  1211  06E8  2EEA               	goto	u201
  1212  06E9  2EEB               	goto	u200
  1213  06EA                     u201:
  1214  06EA  2EDA               	goto	l1115
  1215  06EB                     u200:
  1216  06EB                     l1119:
  1217  06EB  3001               	movlw	1
  1218  06EC  00F8               	movwf	??___lldiv
  1219  06ED                     u215:
  1220  06ED  1003               	clrc
  1221  06EE  0DF9               	rlf	___lldiv@quotient,f
  1222  06EF  0DFA               	rlf	___lldiv@quotient+1,f
  1223  06F0  0DFB               	rlf	___lldiv@quotient+2,f
  1224  06F1  0DFC               	rlf	___lldiv@quotient+3,f
  1225  06F2  0BF8               	decfsz	??___lldiv,f
  1226  06F3  2EED               	goto	u215
  1227  06F4                     l1121:
  1228  06F4  0873               	movf	___lldiv@divisor+3,w
  1229  06F5  0277               	subwf	___lldiv@dividend+3,w
  1230  06F6  1D03               	skipz
  1231  06F7  2F02               	goto	u225
  1232  06F8  0872               	movf	___lldiv@divisor+2,w
  1233  06F9  0276               	subwf	___lldiv@dividend+2,w
  1234  06FA  1D03               	skipz
  1235  06FB  2F02               	goto	u225
  1236  06FC  0871               	movf	___lldiv@divisor+1,w
  1237  06FD  0275               	subwf	___lldiv@dividend+1,w
  1238  06FE  1D03               	skipz
  1239  06FF  2F02               	goto	u225
  1240  0700  0870               	movf	___lldiv@divisor,w
  1241  0701  0274               	subwf	___lldiv@dividend,w
  1242  0702                     u225:
  1243  0702  1C03               	skipc
  1244  0703  2F05               	goto	u221
  1245  0704  2F06               	goto	u220
  1246  0705                     u221:
  1247  0705  2F15               	goto	l1127
  1248  0706                     u220:
  1249  0706                     l1123:
  1250  0706  0870               	movf	___lldiv@divisor,w
  1251  0707  02F4               	subwf	___lldiv@dividend,f
  1252  0708  0871               	movf	___lldiv@divisor+1,w
  1253  0709  1C03               	skipc
  1254  070A  0F71               	incfsz	___lldiv@divisor+1,w
  1255  070B  02F5               	subwf	___lldiv@dividend+1,f
  1256  070C  0872               	movf	___lldiv@divisor+2,w
  1257  070D  1C03               	skipc
  1258  070E  0F72               	incfsz	___lldiv@divisor+2,w
  1259  070F  02F6               	subwf	___lldiv@dividend+2,f
  1260  0710  0873               	movf	___lldiv@divisor+3,w
  1261  0711  1C03               	skipc
  1262  0712  0F73               	incfsz	___lldiv@divisor+3,w
  1263  0713  02F7               	subwf	___lldiv@dividend+3,f
  1264  0714                     l1125:
  1265  0714  1479               	bsf	___lldiv@quotient,0
  1266  0715                     l1127:
  1267  0715  3001               	movlw	1
  1268  0716                     u235:
  1269  0716  1003               	clrc
  1270  0717  0CF3               	rrf	___lldiv@divisor+3,f
  1271  0718  0CF2               	rrf	___lldiv@divisor+2,f
  1272  0719  0CF1               	rrf	___lldiv@divisor+1,f
  1273  071A  0CF0               	rrf	___lldiv@divisor,f
  1274  071B  3EFF               	addlw	-1
  1275  071C  1D03               	skipz
  1276  071D  2F16               	goto	u235
  1277  071E                     l1129:
  1278  071E  3001               	movlw	1
  1279  071F  02FD               	subwf	___lldiv@counter,f
  1280  0720  1D03               	btfss	3,2
  1281  0721  2F23               	goto	u241
  1282  0722  2F24               	goto	u240
  1283  0723                     u241:
  1284  0723  2EEB               	goto	l1119
  1285  0724                     u240:
  1286  0724                     l1131:
  1287  0724  087C               	movf	___lldiv@quotient+3,w
  1288  0725  00F3               	movwf	?___lldiv+3
  1289  0726  087B               	movf	___lldiv@quotient+2,w
  1290  0727  00F2               	movwf	?___lldiv+2
  1291  0728  087A               	movf	___lldiv@quotient+1,w
  1292  0729  00F1               	movwf	?___lldiv+1
  1293  072A  0879               	movf	___lldiv@quotient,w
  1294  072B  00F0               	movwf	?___lldiv
  1295  072C                     l301:
  1296  072C  0008               	return
  1297  072D                     __end_of___lldiv:
  1298                           
  1299                           	psect	text4
  1300  05CB                     __ptext4:	
  1301 ;; *************** function _config_lcd *****************
  1302 ;; Defined at:
  1303 ;;		line 195 in file "C:/Users/nicou/OneDrive/Documents/2022/1er_semestre/Digital_2/MiniProy2/MP2-Maestro.X/main.c"
  1304 ;; Parameters:    Size  Location     Type
  1305 ;;		None
  1306 ;; Auto vars:     Size  Location     Type
  1307 ;;		None
  1308 ;; Return value:  Size  Location     Type
  1309 ;;                  1    wreg      void 
  1310 ;; Registers used:
  1311 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1312 ;; Tracked objects:
  1313 ;;		On entry : 0/0
  1314 ;;		On exit  : 0/0
  1315 ;;		Unchanged: 0/0
  1316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1317 ;;      Params:         0       0       0       0       0
  1318 ;;      Locals:         0       0       0       0       0
  1319 ;;      Temps:          1       0       0       0       0
  1320 ;;      Totals:         1       0       0       0       0
  1321 ;;Total ram usage:        1 bytes
  1322 ;; Hardware stack levels used: 1
  1323 ;; Hardware stack levels required when called: 3
  1324 ;; This function calls:
  1325 ;;		_LCD_START
  1326 ;;		_LCD_setCursor
  1327 ;;		_LCD_writeString
  1328 ;; This function is called by:
  1329 ;;		_setup
  1330 ;; This function uses a non-reentrant model
  1331 ;;
  1332                           
  1333                           
  1334                           ;psect for function _config_lcd
  1335  05CB                     _config_lcd:
  1336  05CB                     l1157:	
  1337                           ;incstack = 0
  1338                           ; Regs used in _config_lcd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1339                           
  1340                           
  1341                           ;main.c: 196: LCD_START();
  1342  05CB  120A  118A  2678  120A  118A  	fcall	_LCD_START
  1343  05D0                     l1159:
  1344                           
  1345                           ;main.c: 198: LCD_setCursor (1,1);
  1346  05D0  01F3               	clrf	LCD_setCursor@columna
  1347  05D1  0AF3               	incf	LCD_setCursor@columna,f
  1348  05D2  3001               	movlw	1
  1349  05D3  120A  118A  2614  120A  118A  	fcall	_LCD_setCursor
  1350  05D8                     l1161:
  1351                           
  1352                           ;main.c: 199: LCD_writeString ("Gesto");
  1353  05D8  3027               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1354  05D9  120A  118A  25EF  120A  118A  	fcall	_LCD_writeString
  1355  05DE                     l1163:
  1356                           
  1357                           ;main.c: 201: LCD_setCursor (1,9);
  1358  05DE  3009               	movlw	9
  1359  05DF  00F6               	movwf	??_config_lcd
  1360  05E0  0876               	movf	??_config_lcd,w
  1361  05E1  00F3               	movwf	LCD_setCursor@columna
  1362  05E2  3001               	movlw	1
  1363  05E3  120A  118A  2614  120A  118A  	fcall	_LCD_setCursor
  1364  05E8                     l1165:
  1365                           
  1366                           ;main.c: 202: LCD_writeString ("Semaforo");
  1367  05E8  3001               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1368  05E9  120A  118A  25EF  120A  118A  	fcall	_LCD_writeString
  1369  05EE                     l76:
  1370  05EE  0008               	return
  1371  05EF                     __end_of_config_lcd:
  1372                           
  1373                           	psect	text5
  1374  05EF                     __ptext5:	
  1375 ;; *************** function _LCD_writeString *****************
  1376 ;; Defined at:
  1377 ;;		line 86 in file "lcd_8bitsA.c"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;  text            1    wreg     PTR unsigned char 
  1380 ;;		 -> STR_6(9), STR_5(6), STR_4(7), STR_3(8), 
  1381 ;;		 -> STR_2(7), STR_1(7), 
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;  text            1    5[COMMON] PTR unsigned char 
  1384 ;;		 -> STR_6(9), STR_5(6), STR_4(7), STR_3(8), 
  1385 ;;		 -> STR_2(7), STR_1(7), 
  1386 ;;  i               2    3[COMMON] int 
  1387 ;; Return value:  Size  Location     Type
  1388 ;;                  1    wreg      void 
  1389 ;; Registers used:
  1390 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1391 ;; Tracked objects:
  1392 ;;		On entry : 0/0
  1393 ;;		On exit  : 0/0
  1394 ;;		Unchanged: 0/0
  1395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1396 ;;      Params:         0       0       0       0       0
  1397 ;;      Locals:         3       0       0       0       0
  1398 ;;      Temps:          0       0       0       0       0
  1399 ;;      Totals:         3       0       0       0       0
  1400 ;;Total ram usage:        3 bytes
  1401 ;; Hardware stack levels used: 1
  1402 ;; Hardware stack levels required when called: 2
  1403 ;; This function calls:
  1404 ;;		_LCD_write
  1405 ;; This function is called by:
  1406 ;;		_main
  1407 ;;		_config_lcd
  1408 ;; This function uses a non-reentrant model
  1409 ;;
  1410                           
  1411                           
  1412                           ;psect for function _LCD_writeString
  1413  05EF                     _LCD_writeString:
  1414                           
  1415                           ;incstack = 0
  1416                           ; Regs used in _LCD_writeString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1417                           ;LCD_writeString@text stored from wreg
  1418  05EF  00F5               	movwf	LCD_writeString@text
  1419  05F0                     l1069:
  1420                           
  1421                           ;lcd_8bitsA.c: 87: int i;;lcd_8bitsA.c: 88: for (i = 0; text[i] != '\0'; i++){
  1422  05F0  01F3               	clrf	LCD_writeString@i
  1423  05F1  01F4               	clrf	LCD_writeString@i+1
  1424  05F2  2E06               	goto	l1075
  1425  05F3                     l1071:
  1426                           
  1427                           ;lcd_8bitsA.c: 89: LCD_write(text[i]);
  1428  05F3  0873               	movf	LCD_writeString@i,w
  1429  05F4  0775               	addwf	LCD_writeString@text,w
  1430  05F5  0084               	movwf	4
  1431  05F6  120A  118A  2003  120A  118A  	fcall	stringdir
  1432  05FB  120A  118A  255A  120A  118A  	fcall	_LCD_write
  1433  0600                     l1073:
  1434  0600  3001               	movlw	1
  1435  0601  07F3               	addwf	LCD_writeString@i,f
  1436  0602  1803               	skipnc
  1437  0603  0AF4               	incf	LCD_writeString@i+1,f
  1438  0604  3000               	movlw	0
  1439  0605  07F4               	addwf	LCD_writeString@i+1,f
  1440  0606                     l1075:
  1441  0606  0873               	movf	LCD_writeString@i,w
  1442  0607  0775               	addwf	LCD_writeString@text,w
  1443  0608  0084               	movwf	4
  1444  0609  120A  118A  2003  120A  118A  	fcall	stringdir
  1445  060E  3A00               	xorlw	0
  1446  060F  1D03               	skipz
  1447  0610  2E12               	goto	u141
  1448  0611  2E13               	goto	u140
  1449  0612                     u141:
  1450  0612  2DF3               	goto	l1071
  1451  0613                     u140:
  1452  0613                     l115:
  1453  0613  0008               	return
  1454  0614                     __end_of_LCD_writeString:
  1455                           
  1456                           	psect	text6
  1457  055A                     __ptext6:	
  1458 ;; *************** function _LCD_write *****************
  1459 ;; Defined at:
  1460 ;;		line 77 in file "lcd_8bitsA.c"
  1461 ;; Parameters:    Size  Location     Type
  1462 ;;  value           1    wreg     unsigned char 
  1463 ;; Auto vars:     Size  Location     Type
  1464 ;;  value           1    2[COMMON] unsigned char 
  1465 ;; Return value:  Size  Location     Type
  1466 ;;                  1    wreg      void 
  1467 ;; Registers used:
  1468 ;;		wreg, status,2, status,0, pclath, cstack
  1469 ;; Tracked objects:
  1470 ;;		On entry : 0/0
  1471 ;;		On exit  : 0/0
  1472 ;;		Unchanged: 0/0
  1473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1474 ;;      Params:         0       0       0       0       0
  1475 ;;      Locals:         1       0       0       0       0
  1476 ;;      Temps:          0       0       0       0       0
  1477 ;;      Totals:         1       0       0       0       0
  1478 ;;Total ram usage:        1 bytes
  1479 ;; Hardware stack levels used: 1
  1480 ;; Hardware stack levels required when called: 1
  1481 ;; This function calls:
  1482 ;;		_flip_EN
  1483 ;; This function is called by:
  1484 ;;		_LCD_writeString
  1485 ;; This function uses a non-reentrant model
  1486 ;;
  1487                           
  1488                           
  1489                           ;psect for function _LCD_write
  1490  055A                     _LCD_write:
  1491                           
  1492                           ;incstack = 0
  1493                           ; Regs used in _LCD_write: [wreg+status,2+status,0+pclath+cstack]
  1494                           ;LCD_write@value stored from wreg
  1495  055A  00F2               	movwf	LCD_write@value
  1496  055B                     l1047:
  1497                           
  1498                           ;lcd_8bitsA.c: 78: RD6 = 1;
  1499  055B  1283               	bcf	3,5	;RP0=0, select bank0
  1500  055C  1303               	bcf	3,6	;RP1=0, select bank0
  1501  055D  1708               	bsf	8,6	;volatile
  1502  055E                     l1049:
  1503                           
  1504                           ;lcd_8bitsA.c: 79: PORTB = value;
  1505  055E  0872               	movf	LCD_write@value,w
  1506  055F  0086               	movwf	6	;volatile
  1507  0560                     l1051:
  1508                           
  1509                           ;lcd_8bitsA.c: 80: flip_EN();
  1510  0560  120A  118A  254B  120A  118A  	fcall	_flip_EN
  1511  0565                     l1053:
  1512                           
  1513                           ;lcd_8bitsA.c: 81: RD6 = 0;
  1514  0565  1283               	bcf	3,5	;RP0=0, select bank0
  1515  0566  1303               	bcf	3,6	;RP1=0, select bank0
  1516  0567  1308               	bcf	8,6	;volatile
  1517  0568                     l109:
  1518  0568  0008               	return
  1519  0569                     __end_of_LCD_write:
  1520                           
  1521                           	psect	text7
  1522  0614                     __ptext7:	
  1523 ;; *************** function _LCD_setCursor *****************
  1524 ;; Defined at:
  1525 ;;		line 58 in file "lcd_8bitsA.c"
  1526 ;; Parameters:    Size  Location     Type
  1527 ;;  fila            1    wreg     unsigned char 
  1528 ;;  columna         1    3[COMMON] unsigned char 
  1529 ;; Auto vars:     Size  Location     Type
  1530 ;;  fila            1    4[COMMON] unsigned char 
  1531 ;; Return value:  Size  Location     Type
  1532 ;;                  1    wreg      void 
  1533 ;; Registers used:
  1534 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1535 ;; Tracked objects:
  1536 ;;		On entry : 0/0
  1537 ;;		On exit  : 0/0
  1538 ;;		Unchanged: 0/0
  1539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1540 ;;      Params:         1       0       0       0       0
  1541 ;;      Locals:         1       0       0       0       0
  1542 ;;      Temps:          0       0       0       0       0
  1543 ;;      Totals:         2       0       0       0       0
  1544 ;;Total ram usage:        2 bytes
  1545 ;; Hardware stack levels used: 1
  1546 ;; Hardware stack levels required when called: 2
  1547 ;; This function calls:
  1548 ;;		_LCD_CMD
  1549 ;; This function is called by:
  1550 ;;		_main
  1551 ;;		_config_lcd
  1552 ;; This function uses a non-reentrant model
  1553 ;;
  1554                           
  1555                           
  1556                           ;psect for function _LCD_setCursor
  1557  0614                     _LCD_setCursor:
  1558                           
  1559                           ;incstack = 0
  1560                           ; Regs used in _LCD_setCursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1561                           ;LCD_setCursor@fila stored from wreg
  1562  0614  00F4               	movwf	LCD_setCursor@fila
  1563  0615                     l1057:
  1564                           
  1565                           ;lcd_8bitsA.c: 59: switch (fila){
  1566  0615  2E34               	goto	l1067
  1567  0616                     l1059:
  1568                           
  1569                           ;lcd_8bitsA.c: 62: LCD_CMD(((columna & 0x0F)-1) | 0x80);
  1570  0616  0873               	movf	LCD_setCursor@columna,w
  1571  0617  390F               	andlw	15
  1572  0618  3EFF               	addlw	255
  1573  0619  3880               	iorlw	128
  1574  061A  120A  118A  2530  120A  118A  	fcall	_LCD_CMD
  1575                           
  1576                           ;lcd_8bitsA.c: 63: break;
  1577  061F  2E3C               	goto	l106
  1578  0620                     l1061:
  1579                           
  1580                           ;lcd_8bitsA.c: 67: LCD_CMD(((columna & 0x0F)-1) | 0xC0);
  1581  0620  0873               	movf	LCD_setCursor@columna,w
  1582  0621  390F               	andlw	15
  1583  0622  3EFF               	addlw	255
  1584  0623  38C0               	iorlw	192
  1585  0624  120A  118A  2530  120A  118A  	fcall	_LCD_CMD
  1586                           
  1587                           ;lcd_8bitsA.c: 68: break;
  1588  0629  2E3C               	goto	l106
  1589  062A                     l1063:
  1590                           
  1591                           ;lcd_8bitsA.c: 71: LCD_CMD(((columna & 0x0F)-1) | 0x80);
  1592  062A  0873               	movf	LCD_setCursor@columna,w
  1593  062B  390F               	andlw	15
  1594  062C  3EFF               	addlw	255
  1595  062D  3880               	iorlw	128
  1596  062E  120A  118A  2530  120A  118A  	fcall	_LCD_CMD
  1597                           
  1598                           ;lcd_8bitsA.c: 72: break;
  1599  0633  2E3C               	goto	l106
  1600  0634                     l1067:
  1601  0634  0874               	movf	LCD_setCursor@fila,w
  1602                           
  1603                           ; Switch size 1, requested type "simple"
  1604                           ; Number of cases is 2, Range of values is 1 to 2
  1605                           ; switch strategies available:
  1606                           ; Name         Instructions Cycles
  1607                           ; simple_byte            7     4 (average)
  1608                           ; direct_byte           17    11 (fixed)
  1609                           ; jumptable            263     9 (fixed)
  1610                           ;	Chosen strategy is simple_byte
  1611  0635  3A01               	xorlw	1	; case 1
  1612  0636  1903               	skipnz
  1613  0637  2E16               	goto	l1059
  1614  0638  3A03               	xorlw	3	; case 2
  1615  0639  1903               	skipnz
  1616  063A  2E20               	goto	l1061
  1617  063B  2E2A               	goto	l1063
  1618  063C                     l106:
  1619  063C  0008               	return
  1620  063D                     __end_of_LCD_setCursor:
  1621                           
  1622                           	psect	text8
  1623  0678                     __ptext8:	
  1624 ;; *************** function _LCD_START *****************
  1625 ;; Defined at:
  1626 ;;		line 19 in file "lcd_8bitsA.c"
  1627 ;; Parameters:    Size  Location     Type
  1628 ;;		None
  1629 ;; Auto vars:     Size  Location     Type
  1630 ;;		None
  1631 ;; Return value:  Size  Location     Type
  1632 ;;                  1    wreg      void 
  1633 ;; Registers used:
  1634 ;;		wreg, status,2, status,0, pclath, cstack
  1635 ;; Tracked objects:
  1636 ;;		On entry : 0/0
  1637 ;;		On exit  : 0/0
  1638 ;;		Unchanged: 0/0
  1639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1640 ;;      Params:         0       0       0       0       0
  1641 ;;      Locals:         0       0       0       0       0
  1642 ;;      Temps:          2       0       0       0       0
  1643 ;;      Totals:         2       0       0       0       0
  1644 ;;Total ram usage:        2 bytes
  1645 ;; Hardware stack levels used: 1
  1646 ;; Hardware stack levels required when called: 2
  1647 ;; This function calls:
  1648 ;;		_LCD_CMD
  1649 ;; This function is called by:
  1650 ;;		_config_lcd
  1651 ;; This function uses a non-reentrant model
  1652 ;;
  1653                           
  1654                           
  1655                           ;psect for function _LCD_START
  1656  0678                     _LCD_START:
  1657  0678                     l1077:	
  1658                           ;incstack = 0
  1659                           ; Regs used in _LCD_START: [wreg+status,2+status,0+pclath+cstack]
  1660                           
  1661                           
  1662                           ;lcd_8bitsA.c: 20: RD7 = 0;
  1663  0678  1283               	bcf	3,5	;RP0=0, select bank0
  1664  0679  1303               	bcf	3,6	;RP1=0, select bank0
  1665  067A  1388               	bcf	8,7	;volatile
  1666                           
  1667                           ;lcd_8bitsA.c: 21: RD6 = 0;
  1668  067B  1308               	bcf	8,6	;volatile
  1669  067C                     l1079:
  1670                           
  1671                           ;lcd_8bitsA.c: 22: PORTB = 0;
  1672  067C  0186               	clrf	6	;volatile
  1673                           
  1674                           ;lcd_8bitsA.c: 23: TRISB = 0;
  1675  067D  1683               	bsf	3,5	;RP0=1, select bank1
  1676  067E  1303               	bcf	3,6	;RP1=0, select bank1
  1677  067F  0186               	clrf	6	;volatile
  1678  0680                     l1081:
  1679                           
  1680                           ;lcd_8bitsA.c: 26: _delay((unsigned long)((20)*(4000000/4000.0)));
  1681  0680  301A               	movlw	26
  1682  0681  00F4               	movwf	??_LCD_START+1
  1683  0682  30F8               	movlw	248
  1684  0683  00F3               	movwf	??_LCD_START
  1685  0684                     u287:
  1686  0684  0BF3               	decfsz	??_LCD_START,f
  1687  0685  2E84               	goto	u287
  1688  0686  0BF4               	decfsz	??_LCD_START+1,f
  1689  0687  2E84               	goto	u287
  1690  0688  0000               	nop
  1691  0689                     l1083:
  1692                           
  1693                           ;lcd_8bitsA.c: 27: LCD_CMD (0x30);
  1694  0689  3030               	movlw	48
  1695  068A  120A  118A  2530  120A  118A  	fcall	_LCD_CMD
  1696  068F                     l1085:
  1697                           
  1698                           ;lcd_8bitsA.c: 29: _delay((unsigned long)((5)*(4000000/4000.0)));
  1699  068F  3007               	movlw	7
  1700  0690  00F4               	movwf	??_LCD_START+1
  1701  0691  307D               	movlw	125
  1702  0692  00F3               	movwf	??_LCD_START
  1703  0693                     u297:
  1704  0693  0BF3               	decfsz	??_LCD_START,f
  1705  0694  2E93               	goto	u297
  1706  0695  0BF4               	decfsz	??_LCD_START+1,f
  1707  0696  2E93               	goto	u297
  1708  0697                     l1087:
  1709                           
  1710                           ;lcd_8bitsA.c: 30: LCD_CMD (0x30);
  1711  0697  3030               	movlw	48
  1712  0698  120A  118A  2530  120A  118A  	fcall	_LCD_CMD
  1713  069D                     l1089:
  1714                           
  1715                           ;lcd_8bitsA.c: 32: _delay((unsigned long)((200)*(4000000/4000000.0)));
  1716  069D  3042               	movlw	66
  1717  069E  00F3               	movwf	??_LCD_START
  1718  069F                     u307:
  1719  069F  0BF3               	decfsz	??_LCD_START,f
  1720  06A0  2E9F               	goto	u307
  1721  06A1  0000               	nop
  1722  06A2                     l1091:
  1723                           
  1724                           ;lcd_8bitsA.c: 33: LCD_CMD (0x30);
  1725  06A2  3030               	movlw	48
  1726  06A3  120A  118A  2530  120A  118A  	fcall	_LCD_CMD
  1727  06A8                     l1093:
  1728                           
  1729                           ;lcd_8bitsA.c: 37: LCD_CMD (0x3C);
  1730  06A8  303C               	movlw	60
  1731  06A9  120A  118A  2530  120A  118A  	fcall	_LCD_CMD
  1732  06AE                     l1095:
  1733                           
  1734                           ;lcd_8bitsA.c: 40: LCD_CMD (0x0C);
  1735  06AE  300C               	movlw	12
  1736  06AF  120A  118A  2530  120A  118A  	fcall	_LCD_CMD
  1737  06B4                     l1097:
  1738                           
  1739                           ;lcd_8bitsA.c: 43: LCD_CMD (0x10);
  1740  06B4  3010               	movlw	16
  1741  06B5  120A  118A  2530  120A  118A  	fcall	_LCD_CMD
  1742  06BA                     l1099:
  1743                           
  1744                           ;lcd_8bitsA.c: 46: LCD_CMD (0x01);
  1745  06BA  3001               	movlw	1
  1746  06BB  120A  118A  2530  120A  118A  	fcall	_LCD_CMD
  1747  06C0                     l1101:
  1748                           
  1749                           ;lcd_8bitsA.c: 49: LCD_CMD (0x06);
  1750  06C0  3006               	movlw	6
  1751  06C1  120A  118A  2530  120A  118A  	fcall	_LCD_CMD
  1752  06C6                     l95:
  1753  06C6  0008               	return
  1754  06C7                     __end_of_LCD_START:
  1755                           
  1756                           	psect	text9
  1757  0530                     __ptext9:	
  1758 ;; *************** function _LCD_CMD *****************
  1759 ;; Defined at:
  1760 ;;		line 12 in file "lcd_8bitsA.c"
  1761 ;; Parameters:    Size  Location     Type
  1762 ;;  cmd             1    wreg     unsigned char 
  1763 ;; Auto vars:     Size  Location     Type
  1764 ;;  cmd             1    2[COMMON] unsigned char 
  1765 ;; Return value:  Size  Location     Type
  1766 ;;                  1    wreg      void 
  1767 ;; Registers used:
  1768 ;;		wreg, status,2, status,0, pclath, cstack
  1769 ;; Tracked objects:
  1770 ;;		On entry : 0/0
  1771 ;;		On exit  : 0/0
  1772 ;;		Unchanged: 0/0
  1773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1774 ;;      Params:         0       0       0       0       0
  1775 ;;      Locals:         1       0       0       0       0
  1776 ;;      Temps:          0       0       0       0       0
  1777 ;;      Totals:         1       0       0       0       0
  1778 ;;Total ram usage:        1 bytes
  1779 ;; Hardware stack levels used: 1
  1780 ;; Hardware stack levels required when called: 1
  1781 ;; This function calls:
  1782 ;;		_flip_EN
  1783 ;; This function is called by:
  1784 ;;		_LCD_START
  1785 ;;		_LCD_setCursor
  1786 ;;		_LCD_CLR
  1787 ;;		_LCD_shiftR
  1788 ;;		_LCD_shiftL
  1789 ;; This function uses a non-reentrant model
  1790 ;;
  1791                           
  1792                           
  1793                           ;psect for function _LCD_CMD
  1794  0530                     _LCD_CMD:
  1795                           
  1796                           ;incstack = 0
  1797                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  1798                           ;LCD_CMD@cmd stored from wreg
  1799  0530  00F2               	movwf	LCD_CMD@cmd
  1800  0531                     l1039:
  1801                           
  1802                           ;lcd_8bitsA.c: 13: RD6 = 0;
  1803  0531  1283               	bcf	3,5	;RP0=0, select bank0
  1804  0532  1303               	bcf	3,6	;RP1=0, select bank0
  1805  0533  1308               	bcf	8,6	;volatile
  1806  0534                     l1041:
  1807                           
  1808                           ;lcd_8bitsA.c: 14: PORTB = cmd;
  1809  0534  0872               	movf	LCD_CMD@cmd,w
  1810  0535  0086               	movwf	6	;volatile
  1811  0536                     l1043:
  1812                           
  1813                           ;lcd_8bitsA.c: 15: flip_EN ();
  1814  0536  120A  118A  254B  120A  118A  	fcall	_flip_EN
  1815  053B                     l92:
  1816  053B  0008               	return
  1817  053C                     __end_of_LCD_CMD:
  1818                           
  1819                           	psect	text10
  1820  054B                     __ptext10:	
  1821 ;; *************** function _flip_EN *****************
  1822 ;; Defined at:
  1823 ;;		line 5 in file "lcd_8bitsA.c"
  1824 ;; Parameters:    Size  Location     Type
  1825 ;;		None
  1826 ;; Auto vars:     Size  Location     Type
  1827 ;;		None
  1828 ;; Return value:  Size  Location     Type
  1829 ;;                  1    wreg      void 
  1830 ;; Registers used:
  1831 ;;		wreg
  1832 ;; Tracked objects:
  1833 ;;		On entry : 0/0
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1837 ;;      Params:         0       0       0       0       0
  1838 ;;      Locals:         0       0       0       0       0
  1839 ;;      Temps:          2       0       0       0       0
  1840 ;;      Totals:         2       0       0       0       0
  1841 ;;Total ram usage:        2 bytes
  1842 ;; Hardware stack levels used: 1
  1843 ;; This function calls:
  1844 ;;		Nothing
  1845 ;; This function is called by:
  1846 ;;		_LCD_CMD
  1847 ;;		_LCD_write
  1848 ;; This function uses a non-reentrant model
  1849 ;;
  1850                           
  1851                           
  1852                           ;psect for function _flip_EN
  1853  054B                     _flip_EN:
  1854  054B                     l1033:	
  1855                           ;incstack = 0
  1856                           ; Regs used in _flip_EN: [wreg]
  1857                           
  1858                           
  1859                           ;lcd_8bitsA.c: 6: RD7 = 1;
  1860  054B  1283               	bcf	3,5	;RP0=0, select bank0
  1861  054C  1303               	bcf	3,6	;RP1=0, select bank0
  1862  054D  1788               	bsf	8,7	;volatile
  1863  054E                     l1035:
  1864                           
  1865                           ;lcd_8bitsA.c: 7: _delay((unsigned long)((5)*(4000000/4000.0)));
  1866  054E  3007               	movlw	7
  1867  054F  00F1               	movwf	??_flip_EN+1
  1868  0550  307D               	movlw	125
  1869  0551  00F0               	movwf	??_flip_EN
  1870  0552                     u317:
  1871  0552  0BF0               	decfsz	??_flip_EN,f
  1872  0553  2D52               	goto	u317
  1873  0554  0BF1               	decfsz	??_flip_EN+1,f
  1874  0555  2D52               	goto	u317
  1875  0556                     l1037:
  1876                           
  1877                           ;lcd_8bitsA.c: 8: RD7 = 0;
  1878  0556  1283               	bcf	3,5	;RP0=0, select bank0
  1879  0557  1303               	bcf	3,6	;RP1=0, select bank0
  1880  0558  1388               	bcf	8,7	;volatile
  1881  0559                     l89:
  1882  0559  0008               	return
  1883  055A                     __end_of_flip_EN:
  1884                           
  1885                           	psect	text11
  1886  053C                     __ptext11:	
  1887 ;; *************** function _config_io *****************
  1888 ;; Defined at:
  1889 ;;		line 174 in file "C:/Users/nicou/OneDrive/Documents/2022/1er_semestre/Digital_2/MiniProy2/MP2-Maestro.X/main.c"
  1890 ;; Parameters:    Size  Location     Type
  1891 ;;		None
  1892 ;; Auto vars:     Size  Location     Type
  1893 ;;		None
  1894 ;; Return value:  Size  Location     Type
  1895 ;;                  1    wreg      void 
  1896 ;; Registers used:
  1897 ;;		status,2
  1898 ;; Tracked objects:
  1899 ;;		On entry : 0/0
  1900 ;;		On exit  : 0/0
  1901 ;;		Unchanged: 0/0
  1902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1903 ;;      Params:         0       0       0       0       0
  1904 ;;      Locals:         0       0       0       0       0
  1905 ;;      Temps:          0       0       0       0       0
  1906 ;;      Totals:         0       0       0       0       0
  1907 ;;Total ram usage:        0 bytes
  1908 ;; Hardware stack levels used: 1
  1909 ;; This function calls:
  1910 ;;		Nothing
  1911 ;; This function is called by:
  1912 ;;		_setup
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916                           
  1917                           ;psect for function _config_io
  1918  053C                     _config_io:
  1919  053C                     l1151:	
  1920                           ;incstack = 0
  1921                           ; Regs used in _config_io: [status,2]
  1922                           
  1923                           
  1924                           ;main.c: 175: ANSEL = 0;
  1925  053C  1683               	bsf	3,5	;RP0=1, select bank3
  1926  053D  1703               	bsf	3,6	;RP1=1, select bank3
  1927  053E  0188               	clrf	8	;volatile
  1928                           
  1929                           ;main.c: 176: ANSELH = 0;
  1930  053F  0189               	clrf	9	;volatile
  1931                           
  1932                           ;main.c: 178: TRISA = 0;
  1933  0540  1683               	bsf	3,5	;RP0=1, select bank1
  1934  0541  1303               	bcf	3,6	;RP1=0, select bank1
  1935  0542  0185               	clrf	5	;volatile
  1936                           
  1937                           ;main.c: 179: TRISB = 0;
  1938  0543  0186               	clrf	6	;volatile
  1939                           
  1940                           ;main.c: 180: TRISD = 0;
  1941  0544  0188               	clrf	8	;volatile
  1942                           
  1943                           ;main.c: 182: PORTA = 0;
  1944  0545  1283               	bcf	3,5	;RP0=0, select bank0
  1945  0546  1303               	bcf	3,6	;RP1=0, select bank0
  1946  0547  0185               	clrf	5	;volatile
  1947                           
  1948                           ;main.c: 183: PORTB = 0;
  1949  0548  0186               	clrf	6	;volatile
  1950                           
  1951                           ;main.c: 184: PORTD = 0;
  1952  0549  0188               	clrf	8	;volatile
  1953  054A                     l70:
  1954  054A  0008               	return
  1955  054B                     __end_of_config_io:
  1956                           
  1957                           	psect	text12
  1958  0502                     __ptext12:	
  1959 ;; *************** function _config_clock *****************
  1960 ;; Defined at:
  1961 ;;		line 189 in file "C:/Users/nicou/OneDrive/Documents/2022/1er_semestre/Digital_2/MiniProy2/MP2-Maestro.X/main.c"
  1962 ;; Parameters:    Size  Location     Type
  1963 ;;		None
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;		None
  1966 ;; Return value:  Size  Location     Type
  1967 ;;                  1    wreg      void 
  1968 ;; Registers used:
  1969 ;;		wreg, status,2, status,0
  1970 ;; Tracked objects:
  1971 ;;		On entry : 0/0
  1972 ;;		On exit  : 0/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1975 ;;      Params:         0       0       0       0       0
  1976 ;;      Locals:         0       0       0       0       0
  1977 ;;      Temps:          0       0       0       0       0
  1978 ;;      Totals:         0       0       0       0       0
  1979 ;;Total ram usage:        0 bytes
  1980 ;; Hardware stack levels used: 1
  1981 ;; This function calls:
  1982 ;;		Nothing
  1983 ;; This function is called by:
  1984 ;;		_setup
  1985 ;; This function uses a non-reentrant model
  1986 ;;
  1987                           
  1988                           
  1989                           ;psect for function _config_clock
  1990  0502                     _config_clock:
  1991  0502                     l1153:	
  1992                           ;incstack = 0
  1993                           ; Regs used in _config_clock: [wreg+status,2+status,0]
  1994                           
  1995                           
  1996                           ;main.c: 190: OSCCONbits.IRCF = 0b110;
  1997  0502  1683               	bsf	3,5	;RP0=1, select bank1
  1998  0503  1303               	bcf	3,6	;RP1=0, select bank1
  1999  0504  080F               	movf	15,w	;volatile
  2000  0505  398F               	andlw	-113
  2001  0506  3860               	iorlw	96
  2002  0507  008F               	movwf	15	;volatile
  2003  0508                     l1155:
  2004                           
  2005                           ;main.c: 191: OSCCONbits.SCS = 1;
  2006  0508  140F               	bsf	15,0	;volatile
  2007  0509                     l73:
  2008  0509  0008               	return
  2009  050A                     __end_of_config_clock:
  2010                           
  2011                           	psect	text13
  2012  05A7                     __ptext13:	
  2013 ;; *************** function _i2c_MW *****************
  2014 ;; Defined at:
  2015 ;;		line 99 in file "C:/Users/nicou/OneDrive/Documents/2022/1er_semestre/Digital_2/MiniProy2/MP2-Maestro.X/i2c.c"
  2016 ;; Parameters:    Size  Location     Type
  2017 ;;  address         1    wreg     unsigned char 
  2018 ;;  messege         1    4[COMMON] unsigned char 
  2019 ;; Auto vars:     Size  Location     Type
  2020 ;;  address         1    7[COMMON] unsigned char 
  2021 ;; Return value:  Size  Location     Type
  2022 ;;                  1    wreg      void 
  2023 ;; Registers used:
  2024 ;;		wreg, status,2, status,0, pclath, cstack
  2025 ;; Tracked objects:
  2026 ;;		On entry : 0/0
  2027 ;;		On exit  : 0/0
  2028 ;;		Unchanged: 0/0
  2029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2030 ;;      Params:         1       0       0       0       0
  2031 ;;      Locals:         1       0       0       0       0
  2032 ;;      Temps:          2       0       0       0       0
  2033 ;;      Totals:         4       0       0       0       0
  2034 ;;Total ram usage:        4 bytes
  2035 ;; Hardware stack levels used: 1
  2036 ;; Hardware stack levels required when called: 2
  2037 ;; This function calls:
  2038 ;;		_i2c_MasterSS
  2039 ;;		_i2c_MasterStart
  2040 ;;		_i2c_MasterStop
  2041 ;;		_i2c_MasterWrite
  2042 ;; This function is called by:
  2043 ;;		_main
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047                           
  2048                           ;psect for function _i2c_MW
  2049  05A7                     _i2c_MW:
  2050                           
  2051                           ;incstack = 0
  2052                           ; Regs used in _i2c_MW: [wreg+status,2+status,0+pclath+cstack]
  2053                           ;i2c_MW@address stored from wreg
  2054  05A7  00F7               	movwf	i2c_MW@address
  2055  05A8                     l1189:
  2056                           
  2057                           ;i2c.c: 100: i2c_MasterStart();
  2058  05A8  120A  118A  250A  120A  118A  	fcall	_i2c_MasterStart
  2059                           
  2060                           ;i2c.c: 101: i2c_MasterSS(address);
  2061  05AD  0877               	movf	i2c_MW@address,w
  2062  05AE  00F5               	movwf	??_i2c_MW
  2063  05AF  01F6               	clrf	??_i2c_MW+1
  2064  05B0  0875               	movf	??_i2c_MW,w
  2065  05B1  00F2               	movwf	i2c_MasterSS@address
  2066  05B2  0876               	movf	??_i2c_MW+1,w
  2067  05B3  00F3               	movwf	i2c_MasterSS@address+1
  2068  05B4  120A  118A  251C  120A  118A  	fcall	_i2c_MasterSS
  2069                           
  2070                           ;i2c.c: 102: i2c_MasterWrite(messege);
  2071  05B9  0874               	movf	i2c_MW@messege,w
  2072  05BA  00F5               	movwf	??_i2c_MW
  2073  05BB  01F6               	clrf	??_i2c_MW+1
  2074  05BC  0875               	movf	??_i2c_MW,w
  2075  05BD  00F2               	movwf	i2c_MasterWrite@dato
  2076  05BE  0876               	movf	??_i2c_MW+1,w
  2077  05BF  00F3               	movwf	i2c_MasterWrite@dato+1
  2078  05C0  120A  118A  2526  120A  118A  	fcall	_i2c_MasterWrite
  2079                           
  2080                           ;i2c.c: 103: i2c_MasterStop();
  2081  05C5  120A  118A  2513  120A  118A  	fcall	_i2c_MasterStop
  2082  05CA                     l173:
  2083  05CA  0008               	return
  2084  05CB                     __end_of_i2c_MW:
  2085                           
  2086                           	psect	text14
  2087  0526                     __ptext14:	
  2088 ;; *************** function _i2c_MasterWrite *****************
  2089 ;; Defined at:
  2090 ;;		line 71 in file "C:/Users/nicou/OneDrive/Documents/2022/1er_semestre/Digital_2/MiniProy2/MP2-Maestro.X/i2c.c"
  2091 ;; Parameters:    Size  Location     Type
  2092 ;;  dato            2    2[COMMON] unsigned int 
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;		None
  2095 ;; Return value:  Size  Location     Type
  2096 ;;                  1    wreg      void 
  2097 ;; Registers used:
  2098 ;;		wreg, status,2, status,0, pclath, cstack
  2099 ;; Tracked objects:
  2100 ;;		On entry : 0/0
  2101 ;;		On exit  : 0/0
  2102 ;;		Unchanged: 0/0
  2103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2104 ;;      Params:         2       0       0       0       0
  2105 ;;      Locals:         0       0       0       0       0
  2106 ;;      Temps:          0       0       0       0       0
  2107 ;;      Totals:         2       0       0       0       0
  2108 ;;Total ram usage:        2 bytes
  2109 ;; Hardware stack levels used: 1
  2110 ;; Hardware stack levels required when called: 1
  2111 ;; This function calls:
  2112 ;;		_i2c_MasterWait
  2113 ;; This function is called by:
  2114 ;;		_main
  2115 ;;		_i2c_MW
  2116 ;; This function uses a non-reentrant model
  2117 ;;
  2118                           
  2119                           
  2120                           ;psect for function _i2c_MasterWrite
  2121  0526                     _i2c_MasterWrite:
  2122  0526                     l1143:	
  2123                           ;incstack = 0
  2124                           ; Regs used in _i2c_MasterWrite: [wreg+status,2+status,0+pclath+cstack]
  2125                           
  2126                           
  2127                           ;i2c.c: 72: i2c_MasterWait();
  2128  0526  120A  118A  2569  120A  118A  	fcall	_i2c_MasterWait
  2129  052B                     l1145:
  2130                           
  2131                           ;i2c.c: 73: SSPBUF = dato;
  2132  052B  0872               	movf	i2c_MasterWrite@dato,w
  2133  052C  1283               	bcf	3,5	;RP0=0, select bank0
  2134  052D  1303               	bcf	3,6	;RP1=0, select bank0
  2135  052E  0093               	movwf	19	;volatile
  2136  052F                     l165:
  2137  052F  0008               	return
  2138  0530                     __end_of_i2c_MasterWrite:
  2139                           
  2140                           	psect	text15
  2141  0513                     __ptext15:	
  2142 ;; *************** function _i2c_MasterStop *****************
  2143 ;; Defined at:
  2144 ;;		line 61 in file "C:/Users/nicou/OneDrive/Documents/2022/1er_semestre/Digital_2/MiniProy2/MP2-Maestro.X/i2c.c"
  2145 ;; Parameters:    Size  Location     Type
  2146 ;;		None
  2147 ;; Auto vars:     Size  Location     Type
  2148 ;;		None
  2149 ;; Return value:  Size  Location     Type
  2150 ;;                  1    wreg      void 
  2151 ;; Registers used:
  2152 ;;		wreg, status,2, status,0, pclath, cstack
  2153 ;; Tracked objects:
  2154 ;;		On entry : 0/0
  2155 ;;		On exit  : 0/0
  2156 ;;		Unchanged: 0/0
  2157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2158 ;;      Params:         0       0       0       0       0
  2159 ;;      Locals:         0       0       0       0       0
  2160 ;;      Temps:          0       0       0       0       0
  2161 ;;      Totals:         0       0       0       0       0
  2162 ;;Total ram usage:        0 bytes
  2163 ;; Hardware stack levels used: 1
  2164 ;; Hardware stack levels required when called: 1
  2165 ;; This function calls:
  2166 ;;		_i2c_MasterWait
  2167 ;; This function is called by:
  2168 ;;		_main
  2169 ;;		_i2c_MW
  2170 ;;		_i2c_MR
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174                           
  2175                           ;psect for function _i2c_MasterStop
  2176  0513                     _i2c_MasterStop:
  2177  0513                     l1147:	
  2178                           ;incstack = 0
  2179                           ; Regs used in _i2c_MasterStop: [wreg+status,2+status,0+pclath+cstack]
  2180                           
  2181                           
  2182                           ;i2c.c: 62: i2c_MasterWait();
  2183  0513  120A  118A  2569  120A  118A  	fcall	_i2c_MasterWait
  2184  0518                     l1149:
  2185                           
  2186                           ;i2c.c: 63: SSPCON2bits.PEN = 1;
  2187  0518  1683               	bsf	3,5	;RP0=1, select bank1
  2188  0519  1303               	bcf	3,6	;RP1=0, select bank1
  2189  051A  1511               	bsf	17,2	;volatile
  2190  051B                     l159:
  2191  051B  0008               	return
  2192  051C                     __end_of_i2c_MasterStop:
  2193                           
  2194                           	psect	text16
  2195  050A                     __ptext16:	
  2196 ;; *************** function _i2c_MasterStart *****************
  2197 ;; Defined at:
  2198 ;;		line 51 in file "C:/Users/nicou/OneDrive/Documents/2022/1er_semestre/Digital_2/MiniProy2/MP2-Maestro.X/i2c.c"
  2199 ;; Parameters:    Size  Location     Type
  2200 ;;		None
  2201 ;; Auto vars:     Size  Location     Type
  2202 ;;		None
  2203 ;; Return value:  Size  Location     Type
  2204 ;;                  1    wreg      void 
  2205 ;; Registers used:
  2206 ;;		wreg, status,2, status,0, pclath, cstack
  2207 ;; Tracked objects:
  2208 ;;		On entry : 0/0
  2209 ;;		On exit  : 0/0
  2210 ;;		Unchanged: 0/0
  2211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2212 ;;      Params:         0       0       0       0       0
  2213 ;;      Locals:         0       0       0       0       0
  2214 ;;      Temps:          0       0       0       0       0
  2215 ;;      Totals:         0       0       0       0       0
  2216 ;;Total ram usage:        0 bytes
  2217 ;; Hardware stack levels used: 1
  2218 ;; Hardware stack levels required when called: 1
  2219 ;; This function calls:
  2220 ;;		_i2c_MasterWait
  2221 ;; This function is called by:
  2222 ;;		_main
  2223 ;;		_i2c_MW
  2224 ;;		_i2c_MR
  2225 ;; This function uses a non-reentrant model
  2226 ;;
  2227                           
  2228                           
  2229                           ;psect for function _i2c_MasterStart
  2230  050A                     _i2c_MasterStart:
  2231  050A                     l1135:	
  2232                           ;incstack = 0
  2233                           ; Regs used in _i2c_MasterStart: [wreg+status,2+status,0+pclath+cstack]
  2234                           
  2235                           
  2236                           ;i2c.c: 52: i2c_MasterWait();
  2237  050A  120A  118A  2569  120A  118A  	fcall	_i2c_MasterWait
  2238  050F                     l1137:
  2239                           
  2240                           ;i2c.c: 53: SSPCON2bits.SEN = 1;
  2241  050F  1683               	bsf	3,5	;RP0=1, select bank1
  2242  0510  1303               	bcf	3,6	;RP1=0, select bank1
  2243  0511  1411               	bsf	17,0	;volatile
  2244  0512                     l153:
  2245  0512  0008               	return
  2246  0513                     __end_of_i2c_MasterStart:
  2247                           
  2248                           	psect	text17
  2249  051C                     __ptext17:	
  2250 ;; *************** function _i2c_MasterSS *****************
  2251 ;; Defined at:
  2252 ;;		line 66 in file "C:/Users/nicou/OneDrive/Documents/2022/1er_semestre/Digital_2/MiniProy2/MP2-Maestro.X/i2c.c"
  2253 ;; Parameters:    Size  Location     Type
  2254 ;;  address         2    2[COMMON] unsigned int 
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;		None
  2257 ;; Return value:  Size  Location     Type
  2258 ;;                  1    wreg      void 
  2259 ;; Registers used:
  2260 ;;		wreg, status,2, status,0, pclath, cstack
  2261 ;; Tracked objects:
  2262 ;;		On entry : 0/0
  2263 ;;		On exit  : 0/0
  2264 ;;		Unchanged: 0/0
  2265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2266 ;;      Params:         2       0       0       0       0
  2267 ;;      Locals:         0       0       0       0       0
  2268 ;;      Temps:          0       0       0       0       0
  2269 ;;      Totals:         2       0       0       0       0
  2270 ;;Total ram usage:        2 bytes
  2271 ;; Hardware stack levels used: 1
  2272 ;; Hardware stack levels required when called: 1
  2273 ;; This function calls:
  2274 ;;		_i2c_MasterWait
  2275 ;; This function is called by:
  2276 ;;		_main
  2277 ;;		_i2c_MW
  2278 ;;		_i2c_MR
  2279 ;; This function uses a non-reentrant model
  2280 ;;
  2281                           
  2282                           
  2283                           ;psect for function _i2c_MasterSS
  2284  051C                     _i2c_MasterSS:
  2285  051C                     l1139:	
  2286                           ;incstack = 0
  2287                           ; Regs used in _i2c_MasterSS: [wreg+status,2+status,0+pclath+cstack]
  2288                           
  2289                           
  2290                           ;i2c.c: 67: i2c_MasterWait();
  2291  051C  120A  118A  2569  120A  118A  	fcall	_i2c_MasterWait
  2292  0521                     l1141:
  2293                           
  2294                           ;i2c.c: 68: SSPBUF = address;
  2295  0521  0872               	movf	i2c_MasterSS@address,w
  2296  0522  1283               	bcf	3,5	;RP0=0, select bank0
  2297  0523  1303               	bcf	3,6	;RP1=0, select bank0
  2298  0524  0093               	movwf	19	;volatile
  2299  0525                     l162:
  2300  0525  0008               	return
  2301  0526                     __end_of_i2c_MasterSS:
  2302                           
  2303                           	psect	text18
  2304  0569                     __ptext18:	
  2305 ;; *************** function _i2c_MasterWait *****************
  2306 ;; Defined at:
  2307 ;;		line 40 in file "C:/Users/nicou/OneDrive/Documents/2022/1er_semestre/Digital_2/MiniProy2/MP2-Maestro.X/i2c.c"
  2308 ;; Parameters:    Size  Location     Type
  2309 ;;		None
  2310 ;; Auto vars:     Size  Location     Type
  2311 ;;		None
  2312 ;; Return value:  Size  Location     Type
  2313 ;;                  1    wreg      void 
  2314 ;; Registers used:
  2315 ;;		wreg, status,2, status,0
  2316 ;; Tracked objects:
  2317 ;;		On entry : 0/0
  2318 ;;		On exit  : 0/0
  2319 ;;		Unchanged: 0/0
  2320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2321 ;;      Params:         0       0       0       0       0
  2322 ;;      Locals:         0       0       0       0       0
  2323 ;;      Temps:          2       0       0       0       0
  2324 ;;      Totals:         2       0       0       0       0
  2325 ;;Total ram usage:        2 bytes
  2326 ;; Hardware stack levels used: 1
  2327 ;; This function calls:
  2328 ;;		Nothing
  2329 ;; This function is called by:
  2330 ;;		_i2c_MasterStart
  2331 ;;		_i2c_MasterStop
  2332 ;;		_i2c_MasterSS
  2333 ;;		_i2c_MasterWrite
  2334 ;;		_i2c_Master_RepeatStart
  2335 ;;		_i2c_MasterRead
  2336 ;; This function uses a non-reentrant model
  2337 ;;
  2338                           
  2339                           
  2340                           ;psect for function _i2c_MasterWait
  2341  0569                     _i2c_MasterWait:
  2342  0569                     l1103:	
  2343                           ;incstack = 0
  2344                           ; Regs used in _i2c_MasterWait: [wreg+status,2+status,0]
  2345                           
  2346                           
  2347                           ;i2c.c: 43: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F)){
  2348  0569  2D7B               	goto	l1107
  2349  056A                     l1105:
  2350                           
  2351                           ;i2c.c: 44: PORTA = (SSPCON2 & 0x1F) + (SSPSTATbits.R_nW<<6);
  2352  056A  0C14               	rrf	20,w	;volatile
  2353  056B  00F0               	movwf	??_i2c_MasterWait
  2354  056C  0C70               	rrf	??_i2c_MasterWait,w
  2355  056D  3901               	andlw	1
  2356  056E  00F1               	movwf	??_i2c_MasterWait+1
  2357  056F  3006               	movlw	6
  2358  0570                     u155:
  2359  0570  1003               	clrc
  2360  0571  0DF1               	rlf	??_i2c_MasterWait+1,f
  2361  0572  3EFF               	addlw	-1
  2362  0573  1D03               	skipz
  2363  0574  2D70               	goto	u155
  2364  0575  0811               	movf	17,w	;volatile
  2365  0576  391F               	andlw	31
  2366  0577  0771               	addwf	??_i2c_MasterWait+1,w
  2367  0578  1283               	bcf	3,5	;RP0=0, select bank0
  2368  0579  1303               	bcf	3,6	;RP1=0, select bank0
  2369  057A  0085               	movwf	5	;volatile
  2370  057B                     l1107:
  2371  057B  1683               	bsf	3,5	;RP0=1, select bank1
  2372  057C  1303               	bcf	3,6	;RP1=0, select bank1
  2373  057D  1914               	btfsc	20,2	;volatile
  2374  057E  2D80               	goto	u161
  2375  057F  2D81               	goto	u160
  2376  0580                     u161:
  2377  0580  2D6A               	goto	l1105
  2378  0581                     u160:
  2379  0581                     l1109:
  2380  0581  0811               	movf	17,w	;volatile
  2381  0582  391F               	andlw	31
  2382  0583  1D03               	btfss	3,2
  2383  0584  2D86               	goto	u171
  2384  0585  2D87               	goto	u170
  2385  0586                     u171:
  2386  0586  2D6A               	goto	l1105
  2387  0587                     u170:
  2388  0587                     l150:
  2389  0587  0008               	return
  2390  0588                     __end_of_i2c_MasterWait:
  2391  007E                     btemp	set	126	;btemp
  2392  007E                     wtemp0	set	126
  2393                           
  2394                           	psect	config
  2395                           
  2396                           ;Config register CONFIG1 @ 0x2007
  2397                           ;	Oscillator Selection bits
  2398                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2399                           ;	Watchdog Timer Enable bit
  2400                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2401                           ;	Power-up Timer Enable bit
  2402                           ;	PWRTE = OFF, PWRT disabled
  2403                           ;	RE3/MCLR pin function select bit
  2404                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2405                           ;	Code Protection bit
  2406                           ;	CP = OFF, Program memory code protection is disabled
  2407                           ;	Data Code Protection bit
  2408                           ;	CPD = OFF, Data memory code protection is disabled
  2409                           ;	Brown Out Reset Selection bits
  2410                           ;	BOREN = OFF, BOR disabled
  2411                           ;	Internal External Switchover bit
  2412                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2413                           ;	Fail-Safe Clock Monitor Enabled bit
  2414                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2415                           ;	Low Voltage Programming Enable bit
  2416                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2417                           ;	In-Circuit Debugger Mode bit
  2418                           ;	DEBUG = 0x1, unprogrammed default
  2419  2007                     	org	8199
  2420  2007  20D4               	dw	8404
  2421                           
  2422                           ;Config register CONFIG2 @ 0x2008
  2423                           ;	Brown-out Reset Selection bit
  2424                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2425                           ;	Flash Program Memory Self Write Enable bits
  2426                           ;	WRT = OFF, Write protection off
  2427  2008                     	org	8200
  2428  2008  3FFF               	dw	16383

Data Sizes:
    Strings     44
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     11      14
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_writeString@text	PTR unsigned char  size(1) Largest target is 9
		 -> STR_6(CODE[9]), STR_5(CODE[6]), STR_4(CODE[7]), STR_3(CODE[8]), 
		 -> STR_2(CODE[7]), STR_1(CODE[7]), 


Critical Paths under _main in COMMON

    _i2c_MasterInit->___lldiv
    _config_lcd->_LCD_writeString
    _LCD_writeString->_LCD_write
    _LCD_write->_flip_EN
    _LCD_setCursor->_LCD_CMD
    _LCD_START->_LCD_CMD
    _LCD_CMD->_flip_EN
    _i2c_MW->_i2c_MasterSS
    _i2c_MW->_i2c_MasterWrite
    _i2c_MasterWrite->_i2c_MasterWait
    _i2c_MasterStop->_i2c_MasterWait
    _i2c_MasterStart->_i2c_MasterWait
    _i2c_MasterSS->_i2c_MasterWait

Critical Paths under _main in BANK0

    _setup->_i2c_MasterInit

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3306
                                              8 BANK0      3     3      0
                      _LCD_setCursor
                    _LCD_writeString
                             _i2c_MW
                       _i2c_MasterSS
                    _i2c_MasterStart
                     _i2c_MasterStop
                    _i2c_MasterWrite
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    1310
                       _config_clock
                          _config_io
                         _config_lcd
                     _i2c_MasterInit
 ---------------------------------------------------------------------------------
 (2) _i2c_MasterInit                                       8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) _config_lcd                                           1     1      0     898
                                              6 COMMON     1     1      0
                          _LCD_START
                      _LCD_setCursor
                    _LCD_writeString
 ---------------------------------------------------------------------------------
 (3) _LCD_writeString                                      3     3      0     310
                                              3 COMMON     3     3      0
                          _LCD_write
 ---------------------------------------------------------------------------------
 (4) _LCD_write                                            1     1      0      22
                                              2 COMMON     1     1      0
                            _flip_EN
 ---------------------------------------------------------------------------------
 (3) _LCD_setCursor                                        2     1      1     566
                                              3 COMMON     2     1      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _LCD_START                                            2     2      0      22
                                              3 COMMON     2     2      0
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (4) _LCD_CMD                                              1     1      0      22
                                              2 COMMON     1     1      0
                            _flip_EN
 ---------------------------------------------------------------------------------
 (5) _flip_EN                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _config_io                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_clock                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_MW                                               4     3      1     696
                                              4 COMMON     4     3      1
                       _i2c_MasterSS
                    _i2c_MasterStart
                     _i2c_MasterStop
                    _i2c_MasterWrite
 ---------------------------------------------------------------------------------
 (1) _i2c_MasterWrite                                      2     0      2     174
                                              2 COMMON     2     0      2
                     _i2c_MasterWait
 ---------------------------------------------------------------------------------
 (1) _i2c_MasterStop                                       0     0      0       0
                     _i2c_MasterWait
 ---------------------------------------------------------------------------------
 (1) _i2c_MasterStart                                      0     0      0       0
                     _i2c_MasterWait
 ---------------------------------------------------------------------------------
 (1) _i2c_MasterSS                                         2     0      2     250
                                              2 COMMON     2     0      2
                     _i2c_MasterWait
 ---------------------------------------------------------------------------------
 (2) _i2c_MasterWait                                       2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_setCursor
     _LCD_CMD
       _flip_EN
   _LCD_writeString
     _LCD_write
       _flip_EN
   _i2c_MW
     _i2c_MasterSS
       _i2c_MasterWait
     _i2c_MasterStart
       _i2c_MasterWait
     _i2c_MasterStop
       _i2c_MasterWait
     _i2c_MasterWrite
       _i2c_MasterWait
   _i2c_MasterSS
   _i2c_MasterStart
   _i2c_MasterStop
   _i2c_MasterWrite
   _setup
     _config_clock
     _config_io
     _config_lcd
       _LCD_START
         _LCD_CMD
       _LCD_setCursor
       _LCD_writeString
     _i2c_MasterInit
       ___lldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      B       E       5       17.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1C      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Mar 07 11:42:23 2022

                       pc 0002               _SSPSTATbits 0094                        l70 054A  
                      l73 0509                        l57 0733                        l67 05A6  
                      l92 053B                        l76 05EE                        l95 06C6  
                      l89 0559                        fsr 0004                       l106 063C  
                     l115 0613                       l109 0568                       l301 072C  
                     l150 0587                       l144 0677                       l153 0512  
                     l162 0525                       l165 052F                       l173 05CA  
                     l159 051B                       _RD6 0046                       _RD7 0047  
                     u200 06EB                       u201 06EA                       u140 0613  
                     u220 0706                       u141 0612                       u221 0705  
                     u215 06ED                       u160 0581                       u240 0724  
                     u161 0580                       u241 0723                       u225 0702  
                     u170 0587                       u250 065A                       u171 0586  
                     u155 0570                       u307 069F                       u235 0716  
                     u180 06D7                       u317 0552                       u181 06D6  
                     u255 0655                       u195 06DC                       u277 07EC  
                     u287 0684                       u297 0693                       fsr0 0004  
         __end_of_LCD_CMD 053C                      l1101 06C0                      l1103 0569  
                    l1111 06C7                      l1105 056A                      l1033 054B  
                    l1041 0534                      l1121 06F4                      l1113 06D7  
                    l1107 057B                      l1035 054E                      l1043 0536  
                    l1051 0560                      l1123 0706                      l1115 06DA  
                    l1131 0724                      l1211 0745                      l1109 0581  
                    l1141 0521                      l1037 0556                      l1061 0620  
                    l1053 0565                      l1125 0714                      l1117 06E7  
                    l1221 076A                      l1213 0751                      l1135 050A  
                    l1143 0526                      l1151 053C                      l1039 0531  
                    l1063 062A                      l1047 055B                      l1071 05F3  
                    l1127 0715                      l1119 06EB                      l1231 0796  
                    l1223 076F                      l1215 0756                      l1207 072D  
                    l1137 050F                      l1145 052B                      l1153 0502  
                    l1081 0680                      l1057 0615                      l1049 055E  
                    l1073 0600                      l1161 05D8                      l1129 071E  
                    l1241 07BA                      l1233 07A0                      l1225 0778  
                    l1217 075A                      l1209 0735                      l1139 051C  
                    l1147 0513                      l1155 0508                      l1091 06A2  
                    l1083 0689                      l1059 0616                      l1067 0634  
                    l1075 0606                      l1163 05DE                      l1171 0642  
                    l1243 07C4                      l1235 07A6                      l1227 0786  
                    l1219 0764                      l1251 07D7                      l1149 0518  
                    l1093 06A8                      l1085 068F                      l1077 0678  
                    l1069 05F0                      l1165 05E8                      l1157 05CB  
                    l1173 0643                      l1181 058D                      l1245 07CA  
                    l1237 07B2                      l1229 0792                      l1253 07E4  
                    l1095 06AE                      l1087 0697                      l1079 067C  
                    l1159 05D0                      l1175 0647                      l1167 063D  
                    l1183 0592                      l1239 07B6                      l1097 06B4  
                    l1089 069D                      l1177 064A                      l1169 0641  
                    l1185 0597                      l1099 06BA                      l1179 0588  
                    l1189 05A8                      STR_1 001A                      STR_2 0028  
                    STR_3 0012                      STR_4 0021                      STR_5 002F  
                    STR_6 0009        __size_of_LCD_START 004F            ??_i2c_MasterSS 0074  
                    _data 002B                      _main 072D                      btemp 007E  
  __size_of_LCD_setCursor 0029            ??_config_clock 0070                      start 0000  
        ?_LCD_writeString 0070        __size_of_LCD_write 000F                     ?_main 0070  
                   _ANSEL 0188           __end_of___lldiv 072D                     _PORTA 0005  
                   _PORTB 0006                     _PORTD 0008                     _TRISA 0085  
                   _TRISB 0086                     _TRISD 0088           __end_of_flip_EN 055A  
                   _setup 0588                     pclath 000A                     status 0003  
                   wtemp0 007E           __initialization 07F7              __end_of_main 07F7  
                  ??_main 0028         __end_of_LCD_START 06C7             _LCD_setCursor 0614  
               ??_LCD_CMD 0072         __end_of_LCD_write 0569                    ?_setup 0070  
                  _ANSELH 0189                    _SSPADD 0093                    _SSPCON 0014  
                  _SSPBUF 0013                    _i2c_MW 05A7        i2c_MasterInit@freq 0020  
               ??___lldiv 0078          ??_i2c_MasterInit 0024          ??_i2c_MasterWait 0070  
        ??_i2c_MasterStop 0072            ?_LCD_setCursor 0073                 ??_flip_EN 0070  
    __end_of_i2c_MasterSS 0526      __end_of_config_clock 050A         LCD_setCursor@fila 0074  
 __end_of__initialization 07FC  __size_of_i2c_MasterStart 0009            __pcstackCOMMON 0070  
__size_of_i2c_MasterWrite 000A             __end_of_setup 05A7       i2c_MasterSS@address 0072  
      __size_of_config_io 000F                   ??_setup 007E                __pbssBANK0 002B  
                 ?_i2c_MW 0074                __pmaintext 072D           ??_LCD_setCursor 0074  
          LCD_write@value 0072                   _LCD_CMD 0530                _config_lcd 05CB  
                 _SSPCON2 0091                   _SSPSTAT 0094                __stringtab 0003  
         __size_of_i2c_MW 0024         __end_of_config_io 054B     __size_of_i2c_MasterSS 000A  
                 ___lldiv 06C7     __size_of_config_clock 0008                   __ptext1 0588  
                 __ptext2 063D                   __ptext3 06C7                   __ptext4 05CB  
                 __ptext5 05EF                   __ptext6 055A                   __ptext7 0614  
                 __ptext8 0678                   __ptext9 0530         ??_i2c_MasterStart 0072  
                 _flip_EN 054B         ??_i2c_MasterWrite 0074  __size_of_LCD_writeString 0025  
     LCD_writeString@text 0075          LCD_writeString@i 0073                 _LCD_START 0678  
    end_of_initialization 07FC                 _LCD_write 055A              _i2c_MasterSS 051C  
         ___lldiv@divisor 0070              _config_clock 0502           ___lldiv@counter 007D  
              LCD_CMD@cmd 0072               ?_config_lcd 0070                ?_LCD_START 0070  
               _TRISCbits 0087                ?_LCD_write 0070            __end_of_i2c_MW 05CB  
     i2c_MasterWrite@dato 0072       start_initialization 07F7         ??_LCD_writeString 0073  
                ??_i2c_MW 0075       __size_of_config_lcd 0024                  ?_LCD_CMD 0070  
               ___latbits 0002             __pcstackBANK0 0020               ??_LCD_START 0073  
 __size_of_i2c_MasterInit 003B   __size_of_i2c_MasterWait 001F   __size_of_i2c_MasterStop 0009  
             ??_LCD_write 0072           _i2c_MasterStart 050A           _i2c_MasterWrite 0526  
                ?___lldiv 0070                 _config_io 053C     __end_of_LCD_setCursor 063D  
               __pstrings 0003                  ?_flip_EN 0070            __size_of_setup 001F  
              ?_config_io 0070               __stringbase 0008          __size_of_LCD_CMD 000C  
            ??_config_lcd 0076   __end_of_i2c_MasterStart 0513   __end_of_i2c_MasterWrite 0530  
      __end_of_config_lcd 05EF          __size_of___lldiv 0066           _LCD_writeString 05EF  
      __end_of__stringtab 0009          __size_of_flip_EN 000F            _i2c_MasterInit 063D  
          _i2c_MasterWait 0569            _i2c_MasterStop 0513                  __ptext10 054B  
                __ptext11 053C                  __ptext12 0502                  __ptext13 05A7  
                __ptext14 0526                  __ptext15 0513                  __ptext16 050A  
                __ptext17 051C                  __ptext18 0569             __size_of_main 00CA  
                _semaforo 002D      LCD_setCursor@columna 0073               ??_config_io 0070  
  __end_of_i2c_MasterInit 0678    __end_of_i2c_MasterWait 0588    __end_of_i2c_MasterStop 051C  
        ?_i2c_MasterStart 0070          ?_i2c_MasterWrite 0072          ___lldiv@dividend 0074  
               stringcode 0003                _OSCCONbits 008F             i2c_MW@address 0077  
 __end_of_LCD_writeString 0614             i2c_MW@messege 0074           ?_i2c_MasterInit 0020  
         ?_i2c_MasterWait 0070           ?_i2c_MasterStop 0070          ___lldiv@quotient 0079  
                stringdir 0003                  stringtab 0003               _SSPCON2bits 0091  
           ?_i2c_MasterSS 0072                _SSPCONbits 0014             ?_config_clock 0070  
