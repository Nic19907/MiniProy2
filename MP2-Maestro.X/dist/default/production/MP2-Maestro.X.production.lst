

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Mar 06 15:57:29 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	text9,local,class=CODE,merge=1,delta=2
    17                           	psect	text10,local,class=CODE,merge=1,delta=2
    18                           	psect	text11,local,class=CODE,merge=1,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  0008                     	;# 
   221  0009                     	;# 
   222  000A                     	;# 
   223  000B                     	;# 
   224  000C                     	;# 
   225  000D                     	;# 
   226  000E                     	;# 
   227  000E                     	;# 
   228  000F                     	;# 
   229  0010                     	;# 
   230  0011                     	;# 
   231  0012                     	;# 
   232  0013                     	;# 
   233  0014                     	;# 
   234  0015                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0017                     	;# 
   238  0018                     	;# 
   239  0019                     	;# 
   240  001A                     	;# 
   241  001B                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  001D                     	;# 
   245  001E                     	;# 
   246  001F                     	;# 
   247  0081                     	;# 
   248  0085                     	;# 
   249  0086                     	;# 
   250  0087                     	;# 
   251  0088                     	;# 
   252  0089                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  008E                     	;# 
   256  008F                     	;# 
   257  0090                     	;# 
   258  0091                     	;# 
   259  0092                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0094                     	;# 
   264  0095                     	;# 
   265  0096                     	;# 
   266  0097                     	;# 
   267  0098                     	;# 
   268  0099                     	;# 
   269  009A                     	;# 
   270  009B                     	;# 
   271  009C                     	;# 
   272  009D                     	;# 
   273  009E                     	;# 
   274  009F                     	;# 
   275  0105                     	;# 
   276  0107                     	;# 
   277  0108                     	;# 
   278  0109                     	;# 
   279  010C                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  010E                     	;# 
   283  010F                     	;# 
   284  0185                     	;# 
   285  0187                     	;# 
   286  0188                     	;# 
   287  0189                     	;# 
   288  018C                     	;# 
   289  018D                     	;# 
   290  0000                     	;# 
   291  0001                     	;# 
   292  0002                     	;# 
   293  0003                     	;# 
   294  0004                     	;# 
   295  0005                     	;# 
   296  0006                     	;# 
   297  0007                     	;# 
   298  0008                     	;# 
   299  0009                     	;# 
   300  000A                     	;# 
   301  000B                     	;# 
   302  000C                     	;# 
   303  000D                     	;# 
   304  000E                     	;# 
   305  000E                     	;# 
   306  000F                     	;# 
   307  0010                     	;# 
   308  0011                     	;# 
   309  0012                     	;# 
   310  0013                     	;# 
   311  0014                     	;# 
   312  0015                     	;# 
   313  0015                     	;# 
   314  0016                     	;# 
   315  0017                     	;# 
   316  0018                     	;# 
   317  0019                     	;# 
   318  001A                     	;# 
   319  001B                     	;# 
   320  001B                     	;# 
   321  001C                     	;# 
   322  001D                     	;# 
   323  001E                     	;# 
   324  001F                     	;# 
   325  0081                     	;# 
   326  0085                     	;# 
   327  0086                     	;# 
   328  0087                     	;# 
   329  0088                     	;# 
   330  0089                     	;# 
   331  008C                     	;# 
   332  008D                     	;# 
   333  008E                     	;# 
   334  008F                     	;# 
   335  0090                     	;# 
   336  0091                     	;# 
   337  0092                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0094                     	;# 
   342  0095                     	;# 
   343  0096                     	;# 
   344  0097                     	;# 
   345  0098                     	;# 
   346  0099                     	;# 
   347  009A                     	;# 
   348  009B                     	;# 
   349  009C                     	;# 
   350  009D                     	;# 
   351  009E                     	;# 
   352  009F                     	;# 
   353  0105                     	;# 
   354  0107                     	;# 
   355  0108                     	;# 
   356  0109                     	;# 
   357  010C                     	;# 
   358  010C                     	;# 
   359  010D                     	;# 
   360  010E                     	;# 
   361  010F                     	;# 
   362  0185                     	;# 
   363  0187                     	;# 
   364  0188                     	;# 
   365  0189                     	;# 
   366  018C                     	;# 
   367  018D                     	;# 
   368  0014                     _SSPCON	set	20
   369  0013                     _SSPBUF	set	19
   370  0008                     _PORTD	set	8
   371  0006                     _PORTB	set	6
   372  0047                     _RD7	set	71
   373  0046                     _RD6	set	70
   374  0093                     _SSPADD	set	147
   375  0091                     _SSPCON2bits	set	145
   376  0087                     _TRISCbits	set	135
   377  0094                     _SSPSTAT	set	148
   378  0091                     _SSPCON2	set	145
   379  008F                     _OSCCONbits	set	143
   380  0088                     _TRISD	set	136
   381  0086                     _TRISB	set	134
   382  0189                     _ANSELH	set	393
   383  0188                     _ANSEL	set	392
   384                           
   385                           	psect	strings
   386  0003                     __pstrings:
   387  0003                     stringtab:
   388  0003                     __stringtab:
   389  0003                     stringcode:	
   390                           ;	String table - string pointers are 1 byte each
   391                           
   392  0003                     stringdir:
   393  0003  3000               	movlw	high stringdir
   394  0004  008A               	movwf	10
   395  0005  0804               	movf	4,w
   396  0006  0A84               	incf	4,f
   397  0007  0782               	addwf	2,f
   398  0008                     __stringbase:
   399  0008  3400               	retlw	0
   400  0009                     __end_of__stringtab:
   401  0009                     STR_2:
   402  0009  3453               	retlw	83	;'S'
   403  000A  3465               	retlw	101	;'e'
   404  000B  346D               	retlw	109	;'m'
   405  000C  3461               	retlw	97	;'a'
   406  000D  3466               	retlw	102	;'f'
   407  000E  346F               	retlw	111	;'o'
   408  000F  3472               	retlw	114	;'r'
   409  0010  346F               	retlw	111	;'o'
   410  0011  3400               	retlw	0
   411  0012                     STR_1:
   412  0012  3447               	retlw	71	;'G'
   413  0013  3465               	retlw	101	;'e'
   414  0014  3473               	retlw	115	;'s'
   415  0015  3474               	retlw	116	;'t'
   416  0016  346F               	retlw	111	;'o'
   417  0017  3400               	retlw	0
   418                           
   419                           	psect	cinit
   420  07FC                     start_initialization:	
   421                           ; #config settings
   422                           
   423  07FC                     __initialization:
   424  07FC                     end_of_initialization:	
   425                           ;End of C runtime variable initialization code
   426                           
   427  07FC                     __end_of__initialization:
   428  07FC  0183               	clrf	3
   429  07FD  120A  118A  2EDE   	ljmp	_main	;jump to C main() function
   430                           
   431                           	psect	cstackCOMMON
   432  0070                     __pcstackCOMMON:
   433  0070                     ?_setup:
   434  0070                     ?_config_io:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0070                     ??_config_io:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0070                     ?_config_clock:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0070                     ??_config_clock:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0070                     ?_config_lcd:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  0070                     ?_i2c_MasterInit:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  0070                     ?_LCD_START:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0070                     ?_LCD_writeString:	
   456                           ; 1 bytes @ 0x0
   457                           
   458  0070                     ?_main:	
   459                           ; 1 bytes @ 0x0
   460                           
   461  0070                     ?_flip_EN:	
   462                           ; 1 bytes @ 0x0
   463                           
   464  0070                     ??_flip_EN:	
   465                           ; 1 bytes @ 0x0
   466                           
   467  0070                     ?_LCD_CMD:	
   468                           ; 1 bytes @ 0x0
   469                           
   470  0070                     ?_LCD_write:	
   471                           ; 1 bytes @ 0x0
   472                           
   473  0070                     i2c_MasterInit@freq:	
   474                           ; 1 bytes @ 0x0
   475                           
   476                           
   477                           ; 4 bytes @ 0x0
   478  0070                     	ds	2
   479  0072                     ??_LCD_CMD:
   480  0072                     ??_LCD_write:	
   481                           ; 1 bytes @ 0x2
   482                           
   483  0072                     LCD_CMD@cmd:	
   484                           ; 1 bytes @ 0x2
   485                           
   486  0072                     LCD_write@value:	
   487                           ; 1 bytes @ 0x2
   488                           
   489                           
   490                           ; 1 bytes @ 0x2
   491  0072                     	ds	1
   492  0073                     ??_LCD_START:
   493  0073                     ?_LCD_setCursor:	
   494                           ; 1 bytes @ 0x3
   495                           
   496  0073                     ??_LCD_writeString:	
   497                           ; 1 bytes @ 0x3
   498                           
   499  0073                     LCD_setCursor@columna:	
   500                           ; 1 bytes @ 0x3
   501                           
   502  0073                     LCD_writeString@i:	
   503                           ; 1 bytes @ 0x3
   504                           
   505                           
   506                           ; 2 bytes @ 0x3
   507  0073                     	ds	1
   508  0074                     ??_i2c_MasterInit:
   509  0074                     ??_LCD_setCursor:	
   510                           ; 1 bytes @ 0x4
   511                           
   512  0074                     LCD_setCursor@fila:	
   513                           ; 1 bytes @ 0x4
   514                           
   515                           
   516                           ; 1 bytes @ 0x4
   517  0074                     	ds	1
   518  0075                     LCD_writeString@text:
   519                           
   520                           ; 1 bytes @ 0x5
   521  0075                     	ds	1
   522  0076                     ??_config_lcd:
   523                           
   524                           ; 1 bytes @ 0x6
   525  0076                     	ds	1
   526  0077                     ??_setup:
   527  0077                     ??_main:	
   528                           ; 1 bytes @ 0x7
   529                           
   530                           
   531                           	psect	maintext
   532  06DE                     __pmaintext:	
   533                           ; 1 bytes @ 0x7
   534 ;;
   535 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   536 ;;
   537 ;; *************** function _main *****************
   538 ;; Defined at:
   539 ;;		line 78 in file "C:/Users/nicou/OneDrive/Documents/2022/1er_semestre/Digital_2/MiniProy2/MP2-Maestro.X/main.c"
   540 ;; Parameters:    Size  Location     Type
   541 ;;		None
   542 ;; Auto vars:     Size  Location     Type
   543 ;;		None
   544 ;; Return value:  Size  Location     Type
   545 ;;                  1    wreg      void 
   546 ;; Registers used:
   547 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   548 ;; Tracked objects:
   549 ;;		On entry : B00/0
   550 ;;		On exit  : 0/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   553 ;;      Params:         0       0       0       0       0
   554 ;;      Locals:         0       0       0       0       0
   555 ;;      Temps:          0       0       0       0       0
   556 ;;      Totals:         0       0       0       0       0
   557 ;;Total ram usage:        0 bytes
   558 ;; Hardware stack levels required when called: 5
   559 ;; This function calls:
   560 ;;		_setup
   561 ;; This function is called by:
   562 ;;		Startup code after reset
   563 ;; This function uses a non-reentrant model
   564 ;;
   565                           
   566                           
   567                           ;psect for function _main
   568  06DE                     _main:
   569  06DE                     l931:	
   570                           ;incstack = 0
   571                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   572                           
   573                           
   574                           ;main.c: 79: setup();
   575  06DE  120A  118A  271E  120A  118A  	fcall	_setup
   576  06E3                     l35:	
   577                           ;main.c: 81: while (1){
   578                           
   579  06E3                     l36:
   580  06E3  2EE3               	goto	l35
   581  06E4  120A  118A  2800   	ljmp	start
   582  06E7                     __end_of_main:
   583                           
   584                           	psect	text1
   585  071E                     __ptext1:	
   586 ;; *************** function _setup *****************
   587 ;; Defined at:
   588 ;;		line 93 in file "C:/Users/nicou/OneDrive/Documents/2022/1er_semestre/Digital_2/MiniProy2/MP2-Maestro.X/main.c"
   589 ;; Parameters:    Size  Location     Type
   590 ;;		None
   591 ;; Auto vars:     Size  Location     Type
   592 ;;		None
   593 ;; Return value:  Size  Location     Type
   594 ;;                  1    wreg      void 
   595 ;; Registers used:
   596 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   597 ;; Tracked objects:
   598 ;;		On entry : 0/0
   599 ;;		On exit  : 0/0
   600 ;;		Unchanged: 0/0
   601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   602 ;;      Params:         0       0       0       0       0
   603 ;;      Locals:         0       0       0       0       0
   604 ;;      Temps:          0       0       0       0       0
   605 ;;      Totals:         0       0       0       0       0
   606 ;;Total ram usage:        0 bytes
   607 ;; Hardware stack levels used: 1
   608 ;; Hardware stack levels required when called: 4
   609 ;; This function calls:
   610 ;;		_config_clock
   611 ;;		_config_io
   612 ;;		_config_lcd
   613 ;;		_i2c_MasterInit
   614 ;; This function is called by:
   615 ;;		_main
   616 ;; This function uses a non-reentrant model
   617 ;;
   618                           
   619                           
   620                           ;psect for function _setup
   621  071E                     _setup:
   622  071E                     l923:	
   623                           ;incstack = 0
   624                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   625                           
   626                           
   627                           ;main.c: 94: config_io();
   628  071E  120A  118A  26F3  120A  118A  	fcall	_config_io
   629  0723                     l925:
   630                           
   631                           ;main.c: 95: config_clock();
   632  0723  120A  118A  26D6  120A  118A  	fcall	_config_clock
   633  0728                     l927:
   634                           
   635                           ;main.c: 96: config_lcd();
   636  0728  120A  118A  273B  120A  118A  	fcall	_config_lcd
   637  072D                     l929:
   638                           
   639                           ;main.c: 99: i2c_MasterInit(100000);
   640  072D  3000               	movlw	0
   641  072E  00F3               	movwf	i2c_MasterInit@freq+3
   642  072F  3001               	movlw	1
   643  0730  00F2               	movwf	i2c_MasterInit@freq+2
   644  0731  3086               	movlw	134
   645  0732  00F1               	movwf	i2c_MasterInit@freq+1
   646  0733  30A0               	movlw	160
   647  0734  00F0               	movwf	i2c_MasterInit@freq
   648  0735  120A  118A  26CF  120A  118A  	fcall	_i2c_MasterInit
   649  073A                     l41:
   650  073A  0008               	return
   651  073B                     __end_of_setup:
   652                           
   653                           	psect	text2
   654  06CF                     __ptext2:	
   655 ;; *************** function _i2c_MasterInit *****************
   656 ;; Defined at:
   657 ;;		line 10 in file "C:/Users/nicou/OneDrive/Documents/2022/1er_semestre/Digital_2/MiniProy2/MP2-Maestro.X/i2c.c"
   658 ;; Parameters:    Size  Location     Type
   659 ;;  freq            4    0[COMMON] unsigned long 
   660 ;; Auto vars:     Size  Location     Type
   661 ;;		None
   662 ;; Return value:  Size  Location     Type
   663 ;;                  1    wreg      void 
   664 ;; Registers used:
   665 ;;		status,2
   666 ;; Tracked objects:
   667 ;;		On entry : 0/0
   668 ;;		On exit  : 0/0
   669 ;;		Unchanged: 0/0
   670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   671 ;;      Params:         4       0       0       0       0
   672 ;;      Locals:         0       0       0       0       0
   673 ;;      Temps:          0       0       0       0       0
   674 ;;      Totals:         4       0       0       0       0
   675 ;;Total ram usage:        4 bytes
   676 ;; Hardware stack levels used: 1
   677 ;; This function calls:
   678 ;;		Nothing
   679 ;; This function is called by:
   680 ;;		_setup
   681 ;; This function uses a non-reentrant model
   682 ;;
   683                           
   684                           
   685                           ;psect for function _i2c_MasterInit
   686  06CF                     _i2c_MasterInit:
   687  06CF                     l917:	
   688                           ;incstack = 0
   689                           ; Regs used in _i2c_MasterInit: [status,2]
   690                           
   691                           
   692                           ;i2c.c: 11: SSPCON2 = 0;
   693  06CF  1683               	bsf	3,5	;RP0=1, select bank1
   694  06D0  1303               	bcf	3,6	;RP1=0, select bank1
   695  06D1  0191               	clrf	17	;volatile
   696                           
   697                           ;i2c.c: 13: SSPSTAT = 0;
   698  06D2  0194               	clrf	20	;volatile
   699  06D3                     l919:
   700                           
   701                           ;i2c.c: 14: TRISCbits.TRISC3 = 1;
   702  06D3  1587               	bsf	7,3	;volatile
   703  06D4                     l921:
   704                           
   705                           ;i2c.c: 15: TRISCbits.TRISC4 = 1;
   706  06D4  1607               	bsf	7,4	;volatile
   707  06D5                     l112:
   708  06D5  0008               	return
   709  06D6                     __end_of_i2c_MasterInit:
   710                           
   711                           	psect	text3
   712  073B                     __ptext3:	
   713 ;; *************** function _config_lcd *****************
   714 ;; Defined at:
   715 ;;		line 121 in file "C:/Users/nicou/OneDrive/Documents/2022/1er_semestre/Digital_2/MiniProy2/MP2-Maestro.X/main.c"
   716 ;; Parameters:    Size  Location     Type
   717 ;;		None
   718 ;; Auto vars:     Size  Location     Type
   719 ;;		None
   720 ;; Return value:  Size  Location     Type
   721 ;;                  1    wreg      void 
   722 ;; Registers used:
   723 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   724 ;; Tracked objects:
   725 ;;		On entry : 0/0
   726 ;;		On exit  : 0/0
   727 ;;		Unchanged: 0/0
   728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   729 ;;      Params:         0       0       0       0       0
   730 ;;      Locals:         0       0       0       0       0
   731 ;;      Temps:          1       0       0       0       0
   732 ;;      Totals:         1       0       0       0       0
   733 ;;Total ram usage:        1 bytes
   734 ;; Hardware stack levels used: 1
   735 ;; Hardware stack levels required when called: 3
   736 ;; This function calls:
   737 ;;		_LCD_START
   738 ;;		_LCD_setCursor
   739 ;;		_LCD_writeString
   740 ;; This function is called by:
   741 ;;		_setup
   742 ;; This function uses a non-reentrant model
   743 ;;
   744                           
   745                           
   746                           ;psect for function _config_lcd
   747  073B                     _config_lcd:
   748  073B                     l907:	
   749                           ;incstack = 0
   750                           ; Regs used in _config_lcd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   751                           
   752                           
   753                           ;main.c: 122: LCD_START();
   754  073B  120A  118A  27AD  120A  118A  	fcall	_LCD_START
   755  0740                     l909:
   756                           
   757                           ;main.c: 124: LCD_setCursor (1,1);
   758  0740  01F3               	clrf	LCD_setCursor@columna
   759  0741  0AF3               	incf	LCD_setCursor@columna,f
   760  0742  3001               	movlw	1
   761  0743  120A  118A  2784  120A  118A  	fcall	_LCD_setCursor
   762  0748                     l911:
   763                           
   764                           ;main.c: 125: LCD_writeString ("Gesto");
   765  0748  300A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   766  0749  120A  118A  275F  120A  118A  	fcall	_LCD_writeString
   767  074E                     l913:
   768                           
   769                           ;main.c: 127: LCD_setCursor (1,9);
   770  074E  3009               	movlw	9
   771  074F  00F6               	movwf	??_config_lcd
   772  0750  0876               	movf	??_config_lcd,w
   773  0751  00F3               	movwf	LCD_setCursor@columna
   774  0752  3001               	movlw	1
   775  0753  120A  118A  2784  120A  118A  	fcall	_LCD_setCursor
   776  0758                     l915:
   777                           
   778                           ;main.c: 128: LCD_writeString ("Semaforo");
   779  0758  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   780  0759  120A  118A  275F  120A  118A  	fcall	_LCD_writeString
   781  075E                     l50:
   782  075E  0008               	return
   783  075F                     __end_of_config_lcd:
   784                           
   785                           	psect	text4
   786  075F                     __ptext4:	
   787 ;; *************** function _LCD_writeString *****************
   788 ;; Defined at:
   789 ;;		line 86 in file "lcd_8bitsA.c"
   790 ;; Parameters:    Size  Location     Type
   791 ;;  text            1    wreg     PTR unsigned char 
   792 ;;		 -> STR_2(9), STR_1(6), 
   793 ;; Auto vars:     Size  Location     Type
   794 ;;  text            1    5[COMMON] PTR unsigned char 
   795 ;;		 -> STR_2(9), STR_1(6), 
   796 ;;  i               2    3[COMMON] int 
   797 ;; Return value:  Size  Location     Type
   798 ;;                  1    wreg      void 
   799 ;; Registers used:
   800 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   801 ;; Tracked objects:
   802 ;;		On entry : 0/0
   803 ;;		On exit  : 0/0
   804 ;;		Unchanged: 0/0
   805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   806 ;;      Params:         0       0       0       0       0
   807 ;;      Locals:         3       0       0       0       0
   808 ;;      Temps:          0       0       0       0       0
   809 ;;      Totals:         3       0       0       0       0
   810 ;;Total ram usage:        3 bytes
   811 ;; Hardware stack levels used: 1
   812 ;; Hardware stack levels required when called: 2
   813 ;; This function calls:
   814 ;;		_LCD_write
   815 ;; This function is called by:
   816 ;;		_config_lcd
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820                           
   821                           ;psect for function _LCD_writeString
   822  075F                     _LCD_writeString:
   823                           
   824                           ;incstack = 0
   825                           ; Regs used in _LCD_writeString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   826                           ;LCD_writeString@text stored from wreg
   827  075F  00F5               	movwf	LCD_writeString@text
   828  0760                     l899:
   829                           
   830                           ;lcd_8bitsA.c: 87: int i;;lcd_8bitsA.c: 88: for (i = 0; text[i] != '\0'; i++){
   831  0760  01F3               	clrf	LCD_writeString@i
   832  0761  01F4               	clrf	LCD_writeString@i+1
   833  0762  2F76               	goto	l905
   834  0763                     l901:
   835                           
   836                           ;lcd_8bitsA.c: 89: LCD_write(text[i]);
   837  0763  0873               	movf	LCD_writeString@i,w
   838  0764  0775               	addwf	LCD_writeString@text,w
   839  0765  0084               	movwf	4
   840  0766  120A  118A  2003  120A  118A  	fcall	stringdir
   841  076B  120A  118A  270F  120A  118A  	fcall	_LCD_write
   842  0770                     l903:
   843  0770  3001               	movlw	1
   844  0771  07F3               	addwf	LCD_writeString@i,f
   845  0772  1803               	skipnc
   846  0773  0AF4               	incf	LCD_writeString@i+1,f
   847  0774  3000               	movlw	0
   848  0775  07F4               	addwf	LCD_writeString@i+1,f
   849  0776                     l905:
   850  0776  0873               	movf	LCD_writeString@i,w
   851  0777  0775               	addwf	LCD_writeString@text,w
   852  0778  0084               	movwf	4
   853  0779  120A  118A  2003  120A  118A  	fcall	stringdir
   854  077E  3A00               	xorlw	0
   855  077F  1D03               	skipz
   856  0780  2F82               	goto	u51
   857  0781  2F83               	goto	u50
   858  0782                     u51:
   859  0782  2F63               	goto	l901
   860  0783                     u50:
   861  0783                     l89:
   862  0783  0008               	return
   863  0784                     __end_of_LCD_writeString:
   864                           
   865                           	psect	text5
   866  070F                     __ptext5:	
   867 ;; *************** function _LCD_write *****************
   868 ;; Defined at:
   869 ;;		line 77 in file "lcd_8bitsA.c"
   870 ;; Parameters:    Size  Location     Type
   871 ;;  value           1    wreg     unsigned char 
   872 ;; Auto vars:     Size  Location     Type
   873 ;;  value           1    2[COMMON] unsigned char 
   874 ;; Return value:  Size  Location     Type
   875 ;;                  1    wreg      void 
   876 ;; Registers used:
   877 ;;		wreg, status,2, status,0, pclath, cstack
   878 ;; Tracked objects:
   879 ;;		On entry : 0/0
   880 ;;		On exit  : 0/0
   881 ;;		Unchanged: 0/0
   882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   883 ;;      Params:         0       0       0       0       0
   884 ;;      Locals:         1       0       0       0       0
   885 ;;      Temps:          0       0       0       0       0
   886 ;;      Totals:         1       0       0       0       0
   887 ;;Total ram usage:        1 bytes
   888 ;; Hardware stack levels used: 1
   889 ;; Hardware stack levels required when called: 1
   890 ;; This function calls:
   891 ;;		_flip_EN
   892 ;; This function is called by:
   893 ;;		_LCD_writeString
   894 ;; This function uses a non-reentrant model
   895 ;;
   896                           
   897                           
   898                           ;psect for function _LCD_write
   899  070F                     _LCD_write:
   900                           
   901                           ;incstack = 0
   902                           ; Regs used in _LCD_write: [wreg+status,2+status,0+pclath+cstack]
   903                           ;LCD_write@value stored from wreg
   904  070F  00F2               	movwf	LCD_write@value
   905  0710                     l747:
   906                           
   907                           ;lcd_8bitsA.c: 78: RD7 = 1;
   908  0710  1283               	bcf	3,5	;RP0=0, select bank0
   909  0711  1303               	bcf	3,6	;RP1=0, select bank0
   910  0712  1788               	bsf	8,7	;volatile
   911  0713                     l749:
   912                           
   913                           ;lcd_8bitsA.c: 79: PORTB = value;
   914  0713  0872               	movf	LCD_write@value,w
   915  0714  0086               	movwf	6	;volatile
   916  0715                     l751:
   917                           
   918                           ;lcd_8bitsA.c: 80: flip_EN();
   919  0715  120A  118A  2700  120A  118A  	fcall	_flip_EN
   920  071A                     l753:
   921                           
   922                           ;lcd_8bitsA.c: 81: RD7 = 0;
   923  071A  1283               	bcf	3,5	;RP0=0, select bank0
   924  071B  1303               	bcf	3,6	;RP1=0, select bank0
   925  071C  1388               	bcf	8,7	;volatile
   926  071D                     l83:
   927  071D  0008               	return
   928  071E                     __end_of_LCD_write:
   929                           
   930                           	psect	text6
   931  0784                     __ptext6:	
   932 ;; *************** function _LCD_setCursor *****************
   933 ;; Defined at:
   934 ;;		line 58 in file "lcd_8bitsA.c"
   935 ;; Parameters:    Size  Location     Type
   936 ;;  fila            1    wreg     unsigned char 
   937 ;;  columna         1    3[COMMON] unsigned char 
   938 ;; Auto vars:     Size  Location     Type
   939 ;;  fila            1    4[COMMON] unsigned char 
   940 ;; Return value:  Size  Location     Type
   941 ;;                  1    wreg      void 
   942 ;; Registers used:
   943 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   944 ;; Tracked objects:
   945 ;;		On entry : 0/0
   946 ;;		On exit  : 0/0
   947 ;;		Unchanged: 0/0
   948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   949 ;;      Params:         1       0       0       0       0
   950 ;;      Locals:         1       0       0       0       0
   951 ;;      Temps:          0       0       0       0       0
   952 ;;      Totals:         2       0       0       0       0
   953 ;;Total ram usage:        2 bytes
   954 ;; Hardware stack levels used: 1
   955 ;; Hardware stack levels required when called: 2
   956 ;; This function calls:
   957 ;;		_LCD_CMD
   958 ;; This function is called by:
   959 ;;		_config_lcd
   960 ;; This function uses a non-reentrant model
   961 ;;
   962                           
   963                           
   964                           ;psect for function _LCD_setCursor
   965  0784                     _LCD_setCursor:
   966                           
   967                           ;incstack = 0
   968                           ; Regs used in _LCD_setCursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   969                           ;LCD_setCursor@fila stored from wreg
   970  0784  00F4               	movwf	LCD_setCursor@fila
   971  0785                     l887:
   972                           
   973                           ;lcd_8bitsA.c: 59: switch (fila){
   974  0785  2FA4               	goto	l897
   975  0786                     l889:
   976                           
   977                           ;lcd_8bitsA.c: 62: LCD_CMD(((columna & 0x0F)-1) | 0x80);
   978  0786  0873               	movf	LCD_setCursor@columna,w
   979  0787  390F               	andlw	15
   980  0788  3EFF               	addlw	255
   981  0789  3880               	iorlw	128
   982  078A  120A  118A  26E7  120A  118A  	fcall	_LCD_CMD
   983                           
   984                           ;lcd_8bitsA.c: 63: break;
   985  078F  2FAC               	goto	l80
   986  0790                     l891:
   987                           
   988                           ;lcd_8bitsA.c: 67: LCD_CMD(((columna & 0x0F)-1) | 0xC0);
   989  0790  0873               	movf	LCD_setCursor@columna,w
   990  0791  390F               	andlw	15
   991  0792  3EFF               	addlw	255
   992  0793  38C0               	iorlw	192
   993  0794  120A  118A  26E7  120A  118A  	fcall	_LCD_CMD
   994                           
   995                           ;lcd_8bitsA.c: 68: break;
   996  0799  2FAC               	goto	l80
   997  079A                     l893:
   998                           
   999                           ;lcd_8bitsA.c: 71: LCD_CMD(((columna & 0x0F)-1) | 0x80);
  1000  079A  0873               	movf	LCD_setCursor@columna,w
  1001  079B  390F               	andlw	15
  1002  079C  3EFF               	addlw	255
  1003  079D  3880               	iorlw	128
  1004  079E  120A  118A  26E7  120A  118A  	fcall	_LCD_CMD
  1005                           
  1006                           ;lcd_8bitsA.c: 72: break;
  1007  07A3  2FAC               	goto	l80
  1008  07A4                     l897:
  1009  07A4  0874               	movf	LCD_setCursor@fila,w
  1010                           
  1011                           ; Switch size 1, requested type "simple"
  1012                           ; Number of cases is 2, Range of values is 1 to 2
  1013                           ; switch strategies available:
  1014                           ; Name         Instructions Cycles
  1015                           ; simple_byte            7     4 (average)
  1016                           ; direct_byte           17    11 (fixed)
  1017                           ; jumptable            263     9 (fixed)
  1018                           ;	Chosen strategy is simple_byte
  1019  07A5  3A01               	xorlw	1	; case 1
  1020  07A6  1903               	skipnz
  1021  07A7  2F86               	goto	l889
  1022  07A8  3A03               	xorlw	3	; case 2
  1023  07A9  1903               	skipnz
  1024  07AA  2F90               	goto	l891
  1025  07AB  2F9A               	goto	l893
  1026  07AC                     l80:
  1027  07AC  0008               	return
  1028  07AD                     __end_of_LCD_setCursor:
  1029                           
  1030                           	psect	text7
  1031  07AD                     __ptext7:	
  1032 ;; *************** function _LCD_START *****************
  1033 ;; Defined at:
  1034 ;;		line 19 in file "lcd_8bitsA.c"
  1035 ;; Parameters:    Size  Location     Type
  1036 ;;		None
  1037 ;; Auto vars:     Size  Location     Type
  1038 ;;		None
  1039 ;; Return value:  Size  Location     Type
  1040 ;;                  1    wreg      void 
  1041 ;; Registers used:
  1042 ;;		wreg, status,2, status,0, pclath, cstack
  1043 ;; Tracked objects:
  1044 ;;		On entry : 0/0
  1045 ;;		On exit  : 0/0
  1046 ;;		Unchanged: 0/0
  1047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1048 ;;      Params:         0       0       0       0       0
  1049 ;;      Locals:         0       0       0       0       0
  1050 ;;      Temps:          2       0       0       0       0
  1051 ;;      Totals:         2       0       0       0       0
  1052 ;;Total ram usage:        2 bytes
  1053 ;; Hardware stack levels used: 1
  1054 ;; Hardware stack levels required when called: 2
  1055 ;; This function calls:
  1056 ;;		_LCD_CMD
  1057 ;; This function is called by:
  1058 ;;		_config_lcd
  1059 ;; This function uses a non-reentrant model
  1060 ;;
  1061                           
  1062                           
  1063                           ;psect for function _LCD_START
  1064  07AD                     _LCD_START:
  1065  07AD                     l757:	
  1066                           ;incstack = 0
  1067                           ; Regs used in _LCD_START: [wreg+status,2+status,0+pclath+cstack]
  1068                           
  1069                           
  1070                           ;lcd_8bitsA.c: 20: RD6 = 0;
  1071  07AD  1283               	bcf	3,5	;RP0=0, select bank0
  1072  07AE  1303               	bcf	3,6	;RP1=0, select bank0
  1073  07AF  1308               	bcf	8,6	;volatile
  1074                           
  1075                           ;lcd_8bitsA.c: 21: RD7 = 0;
  1076  07B0  1388               	bcf	8,7	;volatile
  1077  07B1                     l759:
  1078                           
  1079                           ;lcd_8bitsA.c: 22: PORTB = 0;
  1080  07B1  0186               	clrf	6	;volatile
  1081                           
  1082                           ;lcd_8bitsA.c: 23: TRISB = 0;
  1083  07B2  1683               	bsf	3,5	;RP0=1, select bank1
  1084  07B3  1303               	bcf	3,6	;RP1=0, select bank1
  1085  07B4  0186               	clrf	6	;volatile
  1086  07B5                     l761:
  1087                           
  1088                           ;lcd_8bitsA.c: 26: _delay((unsigned long)((20)*(4000000/4000.0)));
  1089  07B5  301A               	movlw	26
  1090  07B6  00F4               	movwf	??_LCD_START+1
  1091  07B7  30F8               	movlw	248
  1092  07B8  00F3               	movwf	??_LCD_START
  1093  07B9                     u67:
  1094  07B9  0BF3               	decfsz	??_LCD_START,f
  1095  07BA  2FB9               	goto	u67
  1096  07BB  0BF4               	decfsz	??_LCD_START+1,f
  1097  07BC  2FB9               	goto	u67
  1098  07BD  0000               	nop
  1099  07BE                     l763:
  1100                           
  1101                           ;lcd_8bitsA.c: 27: LCD_CMD (0x30);
  1102  07BE  3030               	movlw	48
  1103  07BF  120A  118A  26E7  120A  118A  	fcall	_LCD_CMD
  1104  07C4                     l765:
  1105                           
  1106                           ;lcd_8bitsA.c: 29: _delay((unsigned long)((5)*(4000000/4000.0)));
  1107  07C4  3007               	movlw	7
  1108  07C5  00F4               	movwf	??_LCD_START+1
  1109  07C6  307D               	movlw	125
  1110  07C7  00F3               	movwf	??_LCD_START
  1111  07C8                     u77:
  1112  07C8  0BF3               	decfsz	??_LCD_START,f
  1113  07C9  2FC8               	goto	u77
  1114  07CA  0BF4               	decfsz	??_LCD_START+1,f
  1115  07CB  2FC8               	goto	u77
  1116  07CC                     l767:
  1117                           
  1118                           ;lcd_8bitsA.c: 30: LCD_CMD (0x30);
  1119  07CC  3030               	movlw	48
  1120  07CD  120A  118A  26E7  120A  118A  	fcall	_LCD_CMD
  1121  07D2                     l769:
  1122                           
  1123                           ;lcd_8bitsA.c: 32: _delay((unsigned long)((200)*(4000000/4000000.0)));
  1124  07D2  3042               	movlw	66
  1125  07D3  00F3               	movwf	??_LCD_START
  1126  07D4                     u87:
  1127  07D4  0BF3               	decfsz	??_LCD_START,f
  1128  07D5  2FD4               	goto	u87
  1129  07D6  0000               	nop
  1130  07D7                     l771:
  1131                           
  1132                           ;lcd_8bitsA.c: 33: LCD_CMD (0x30);
  1133  07D7  3030               	movlw	48
  1134  07D8  120A  118A  26E7  120A  118A  	fcall	_LCD_CMD
  1135  07DD                     l773:
  1136                           
  1137                           ;lcd_8bitsA.c: 37: LCD_CMD (0x3C);
  1138  07DD  303C               	movlw	60
  1139  07DE  120A  118A  26E7  120A  118A  	fcall	_LCD_CMD
  1140  07E3                     l775:
  1141                           
  1142                           ;lcd_8bitsA.c: 40: LCD_CMD (0x0C);
  1143  07E3  300C               	movlw	12
  1144  07E4  120A  118A  26E7  120A  118A  	fcall	_LCD_CMD
  1145  07E9                     l777:
  1146                           
  1147                           ;lcd_8bitsA.c: 43: LCD_CMD (0x10);
  1148  07E9  3010               	movlw	16
  1149  07EA  120A  118A  26E7  120A  118A  	fcall	_LCD_CMD
  1150  07EF                     l779:
  1151                           
  1152                           ;lcd_8bitsA.c: 46: LCD_CMD (0x01);
  1153  07EF  3001               	movlw	1
  1154  07F0  120A  118A  26E7  120A  118A  	fcall	_LCD_CMD
  1155  07F5                     l781:
  1156                           
  1157                           ;lcd_8bitsA.c: 49: LCD_CMD (0x06);
  1158  07F5  3006               	movlw	6
  1159  07F6  120A  118A  26E7  120A  118A  	fcall	_LCD_CMD
  1160  07FB                     l69:
  1161  07FB  0008               	return
  1162  07FC                     __end_of_LCD_START:
  1163                           
  1164                           	psect	text8
  1165  06E7                     __ptext8:	
  1166 ;; *************** function _LCD_CMD *****************
  1167 ;; Defined at:
  1168 ;;		line 12 in file "lcd_8bitsA.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;  cmd             1    wreg     unsigned char 
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;  cmd             1    2[COMMON] unsigned char 
  1173 ;; Return value:  Size  Location     Type
  1174 ;;                  1    wreg      void 
  1175 ;; Registers used:
  1176 ;;		wreg, status,2, status,0, pclath, cstack
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1182 ;;      Params:         0       0       0       0       0
  1183 ;;      Locals:         1       0       0       0       0
  1184 ;;      Temps:          0       0       0       0       0
  1185 ;;      Totals:         1       0       0       0       0
  1186 ;;Total ram usage:        1 bytes
  1187 ;; Hardware stack levels used: 1
  1188 ;; Hardware stack levels required when called: 1
  1189 ;; This function calls:
  1190 ;;		_flip_EN
  1191 ;; This function is called by:
  1192 ;;		_LCD_START
  1193 ;;		_LCD_setCursor
  1194 ;;		_LCD_CLR
  1195 ;;		_LCD_shiftR
  1196 ;;		_LCD_shiftL
  1197 ;; This function uses a non-reentrant model
  1198 ;;
  1199                           
  1200                           
  1201                           ;psect for function _LCD_CMD
  1202  06E7                     _LCD_CMD:
  1203                           
  1204                           ;incstack = 0
  1205                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  1206                           ;LCD_CMD@cmd stored from wreg
  1207  06E7  00F2               	movwf	LCD_CMD@cmd
  1208  06E8                     l739:
  1209                           
  1210                           ;lcd_8bitsA.c: 13: RD7 = 0;
  1211  06E8  1283               	bcf	3,5	;RP0=0, select bank0
  1212  06E9  1303               	bcf	3,6	;RP1=0, select bank0
  1213  06EA  1388               	bcf	8,7	;volatile
  1214  06EB                     l741:
  1215                           
  1216                           ;lcd_8bitsA.c: 14: PORTB = cmd;
  1217  06EB  0872               	movf	LCD_CMD@cmd,w
  1218  06EC  0086               	movwf	6	;volatile
  1219  06ED                     l743:
  1220                           
  1221                           ;lcd_8bitsA.c: 15: flip_EN ();
  1222  06ED  120A  118A  2700  120A  118A  	fcall	_flip_EN
  1223  06F2                     l66:
  1224  06F2  0008               	return
  1225  06F3                     __end_of_LCD_CMD:
  1226                           
  1227                           	psect	text9
  1228  0700                     __ptext9:	
  1229 ;; *************** function _flip_EN *****************
  1230 ;; Defined at:
  1231 ;;		line 5 in file "lcd_8bitsA.c"
  1232 ;; Parameters:    Size  Location     Type
  1233 ;;		None
  1234 ;; Auto vars:     Size  Location     Type
  1235 ;;		None
  1236 ;; Return value:  Size  Location     Type
  1237 ;;                  1    wreg      void 
  1238 ;; Registers used:
  1239 ;;		wreg
  1240 ;; Tracked objects:
  1241 ;;		On entry : 0/0
  1242 ;;		On exit  : 0/0
  1243 ;;		Unchanged: 0/0
  1244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1245 ;;      Params:         0       0       0       0       0
  1246 ;;      Locals:         0       0       0       0       0
  1247 ;;      Temps:          2       0       0       0       0
  1248 ;;      Totals:         2       0       0       0       0
  1249 ;;Total ram usage:        2 bytes
  1250 ;; Hardware stack levels used: 1
  1251 ;; This function calls:
  1252 ;;		Nothing
  1253 ;; This function is called by:
  1254 ;;		_LCD_CMD
  1255 ;;		_LCD_write
  1256 ;; This function uses a non-reentrant model
  1257 ;;
  1258                           
  1259                           
  1260                           ;psect for function _flip_EN
  1261  0700                     _flip_EN:
  1262  0700                     l733:	
  1263                           ;incstack = 0
  1264                           ; Regs used in _flip_EN: [wreg]
  1265                           
  1266                           
  1267                           ;lcd_8bitsA.c: 6: RD6 = 1;
  1268  0700  1283               	bcf	3,5	;RP0=0, select bank0
  1269  0701  1303               	bcf	3,6	;RP1=0, select bank0
  1270  0702  1708               	bsf	8,6	;volatile
  1271  0703                     l735:
  1272                           
  1273                           ;lcd_8bitsA.c: 7: _delay((unsigned long)((5)*(4000000/4000.0)));
  1274  0703  3007               	movlw	7
  1275  0704  00F1               	movwf	??_flip_EN+1
  1276  0705  307D               	movlw	125
  1277  0706  00F0               	movwf	??_flip_EN
  1278  0707                     u97:
  1279  0707  0BF0               	decfsz	??_flip_EN,f
  1280  0708  2F07               	goto	u97
  1281  0709  0BF1               	decfsz	??_flip_EN+1,f
  1282  070A  2F07               	goto	u97
  1283  070B                     l737:
  1284                           
  1285                           ;lcd_8bitsA.c: 8: RD6 = 0;
  1286  070B  1283               	bcf	3,5	;RP0=0, select bank0
  1287  070C  1303               	bcf	3,6	;RP1=0, select bank0
  1288  070D  1308               	bcf	8,6	;volatile
  1289  070E                     l63:
  1290  070E  0008               	return
  1291  070F                     __end_of_flip_EN:
  1292                           
  1293                           	psect	text10
  1294  06F3                     __ptext10:	
  1295 ;; *************** function _config_io *****************
  1296 ;; Defined at:
  1297 ;;		line 102 in file "C:/Users/nicou/OneDrive/Documents/2022/1er_semestre/Digital_2/MiniProy2/MP2-Maestro.X/main.c"
  1298 ;; Parameters:    Size  Location     Type
  1299 ;;		None
  1300 ;; Auto vars:     Size  Location     Type
  1301 ;;		None
  1302 ;; Return value:  Size  Location     Type
  1303 ;;                  1    wreg      void 
  1304 ;; Registers used:
  1305 ;;		status,2
  1306 ;; Tracked objects:
  1307 ;;		On entry : 0/0
  1308 ;;		On exit  : 0/0
  1309 ;;		Unchanged: 0/0
  1310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1311 ;;      Params:         0       0       0       0       0
  1312 ;;      Locals:         0       0       0       0       0
  1313 ;;      Temps:          0       0       0       0       0
  1314 ;;      Totals:         0       0       0       0       0
  1315 ;;Total ram usage:        0 bytes
  1316 ;; Hardware stack levels used: 1
  1317 ;; This function calls:
  1318 ;;		Nothing
  1319 ;; This function is called by:
  1320 ;;		_setup
  1321 ;; This function uses a non-reentrant model
  1322 ;;
  1323                           
  1324                           
  1325                           ;psect for function _config_io
  1326  06F3                     _config_io:
  1327  06F3                     l803:	
  1328                           ;incstack = 0
  1329                           ; Regs used in _config_io: [status,2]
  1330                           
  1331                           
  1332                           ;main.c: 103: ANSEL = 0;
  1333  06F3  1683               	bsf	3,5	;RP0=1, select bank3
  1334  06F4  1703               	bsf	3,6	;RP1=1, select bank3
  1335  06F5  0188               	clrf	8	;volatile
  1336                           
  1337                           ;main.c: 104: ANSELH = 0;
  1338  06F6  0189               	clrf	9	;volatile
  1339                           
  1340                           ;main.c: 106: TRISB = 0;
  1341  06F7  1683               	bsf	3,5	;RP0=1, select bank1
  1342  06F8  1303               	bcf	3,6	;RP1=0, select bank1
  1343  06F9  0186               	clrf	6	;volatile
  1344                           
  1345                           ;main.c: 107: TRISD = 0;
  1346  06FA  0188               	clrf	8	;volatile
  1347                           
  1348                           ;main.c: 109: PORTB = 0;
  1349  06FB  1283               	bcf	3,5	;RP0=0, select bank0
  1350  06FC  1303               	bcf	3,6	;RP1=0, select bank0
  1351  06FD  0186               	clrf	6	;volatile
  1352                           
  1353                           ;main.c: 110: PORTD = 0;
  1354  06FE  0188               	clrf	8	;volatile
  1355  06FF                     l44:
  1356  06FF  0008               	return
  1357  0700                     __end_of_config_io:
  1358                           
  1359                           	psect	text11
  1360  06D6                     __ptext11:	
  1361 ;; *************** function _config_clock *****************
  1362 ;; Defined at:
  1363 ;;		line 115 in file "C:/Users/nicou/OneDrive/Documents/2022/1er_semestre/Digital_2/MiniProy2/MP2-Maestro.X/main.c"
  1364 ;; Parameters:    Size  Location     Type
  1365 ;;		None
  1366 ;; Auto vars:     Size  Location     Type
  1367 ;;		None
  1368 ;; Return value:  Size  Location     Type
  1369 ;;                  1    wreg      void 
  1370 ;; Registers used:
  1371 ;;		wreg, status,2, status,0
  1372 ;; Tracked objects:
  1373 ;;		On entry : 0/0
  1374 ;;		On exit  : 0/0
  1375 ;;		Unchanged: 0/0
  1376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1377 ;;      Params:         0       0       0       0       0
  1378 ;;      Locals:         0       0       0       0       0
  1379 ;;      Temps:          0       0       0       0       0
  1380 ;;      Totals:         0       0       0       0       0
  1381 ;;Total ram usage:        0 bytes
  1382 ;; Hardware stack levels used: 1
  1383 ;; This function calls:
  1384 ;;		Nothing
  1385 ;; This function is called by:
  1386 ;;		_setup
  1387 ;; This function uses a non-reentrant model
  1388 ;;
  1389                           
  1390                           
  1391                           ;psect for function _config_clock
  1392  06D6                     _config_clock:
  1393  06D6                     l805:	
  1394                           ;incstack = 0
  1395                           ; Regs used in _config_clock: [wreg+status,2+status,0]
  1396                           
  1397                           
  1398                           ;main.c: 116: OSCCONbits.IRCF = 0b110;
  1399  06D6  1683               	bsf	3,5	;RP0=1, select bank1
  1400  06D7  1303               	bcf	3,6	;RP1=0, select bank1
  1401  06D8  080F               	movf	15,w	;volatile
  1402  06D9  398F               	andlw	-113
  1403  06DA  3860               	iorlw	96
  1404  06DB  008F               	movwf	15	;volatile
  1405  06DC                     l807:
  1406                           
  1407                           ;main.c: 117: OSCCONbits.SCS = 1;
  1408  06DC  140F               	bsf	15,0	;volatile
  1409  06DD                     l47:
  1410  06DD  0008               	return
  1411  06DE                     __end_of_config_clock:
  1412  007E                     btemp	set	126	;btemp
  1413  007E                     wtemp0	set	126
  1414                           
  1415                           	psect	config
  1416                           
  1417                           ;Config register CONFIG1 @ 0x2007
  1418                           ;	Oscillator Selection bits
  1419                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1420                           ;	Watchdog Timer Enable bit
  1421                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1422                           ;	Power-up Timer Enable bit
  1423                           ;	PWRTE = OFF, PWRT disabled
  1424                           ;	RE3/MCLR pin function select bit
  1425                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1426                           ;	Code Protection bit
  1427                           ;	CP = OFF, Program memory code protection is disabled
  1428                           ;	Data Code Protection bit
  1429                           ;	CPD = OFF, Data memory code protection is disabled
  1430                           ;	Brown Out Reset Selection bits
  1431                           ;	BOREN = OFF, BOR disabled
  1432                           ;	Internal External Switchover bit
  1433                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1434                           ;	Fail-Safe Clock Monitor Enabled bit
  1435                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1436                           ;	Low Voltage Programming Enable bit
  1437                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1438                           ;	In-Circuit Debugger Mode bit
  1439                           ;	DEBUG = 0x1, unprogrammed default
  1440  2007                     	org	8199
  1441  2007  20D4               	dw	8404
  1442                           
  1443                           ;Config register CONFIG2 @ 0x2008
  1444                           ;	Brown-out Reset Selection bit
  1445                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1446                           ;	Flash Program Memory Self Write Enable bits
  1447                           ;	WRT = OFF, Write protection off
  1448  2008                     	org	8200
  1449  2008  3FFF               	dw	16383

Data Sizes:
    Strings     15
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_writeString@text	PTR unsigned char  size(1) Largest target is 9
		 -> STR_2(CODE[9]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _setup->_config_lcd
    _config_lcd->_LCD_writeString
    _LCD_writeString->_LCD_write
    _LCD_write->_flip_EN
    _LCD_setCursor->_LCD_CMD
    _LCD_START->_LCD_CMD
    _LCD_CMD->_flip_EN

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     517
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     517
                       _config_clock
                          _config_io
                         _config_lcd
                     _i2c_MasterInit
 ---------------------------------------------------------------------------------
 (2) _i2c_MasterInit                                       4     0      4      76
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) _config_lcd                                           1     1      0     441
                                              6 COMMON     1     1      0
                          _LCD_START
                      _LCD_setCursor
                    _LCD_writeString
 ---------------------------------------------------------------------------------
 (3) _LCD_writeString                                      3     3      0     171
                                              3 COMMON     3     3      0
                          _LCD_write
 ---------------------------------------------------------------------------------
 (4) _LCD_write                                            1     1      0      15
                                              2 COMMON     1     1      0
                            _flip_EN
 ---------------------------------------------------------------------------------
 (3) _LCD_setCursor                                        2     1      1     255
                                              3 COMMON     2     1      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _LCD_START                                            2     2      0      15
                                              3 COMMON     2     2      0
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (4) _LCD_CMD                                              1     1      0      15
                                              2 COMMON     1     1      0
                            _flip_EN
 ---------------------------------------------------------------------------------
 (5) _flip_EN                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _config_io                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_clock                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _config_clock
     _config_io
     _config_lcd
       _LCD_START
         _LCD_CMD
           _flip_EN
       _LCD_setCursor
         _LCD_CMD
       _LCD_writeString
         _LCD_write
           _flip_EN
     _i2c_MasterInit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Mar 06 15:57:29 2022

                       pc 0002                        l41 073A                        l50 075E  
                      l35 06E3                        l44 06FF                        l36 06E3  
                      l47 06DD                        l63 070E                        l80 07AC  
                      l66 06F2                        l83 071D                        l69 07FB  
                      l89 0783                        u50 0783                        u51 0782  
                      u67 07B9                        u77 07C8                        u87 07D4  
                      u97 0707                        fsr 0004                       l112 06D5  
                     l803 06F3                       l805 06D6                       l733 0700  
                     l741 06EB                       l901 0763                       l807 06DC  
                     l735 0703                       l743 06ED                       l751 0715  
                     l903 0770                       l911 0748                       l737 070B  
                     l761 07B5                       l753 071A                       l905 0776  
                     l913 074E                       l921 06D4                       l739 06E8  
                     l771 07D7                       l763 07BE                       l747 0710  
                     l915 0758                       l907 073B                       l923 071E  
                     l931 06DE                       l781 07F5                       l773 07DD  
                     l765 07C4                       l757 07AD                       l749 0713  
                     l909 0740                       l917 06CF                       l925 0723  
                     l775 07E3                       l767 07CC                       l759 07B1  
                     l919 06D3                       l927 0728                       l777 07E9  
                     l769 07D2                       l929 072D                       l779 07EF  
                     l891 0790                       l893 079A                       l887 0785  
                     l889 0786                       l897 07A4                       l899 0760  
                     _RD6 0046                       _RD7 0047                       fsr0 0004  
         __end_of_LCD_CMD 06F3                      STR_1 0012                      STR_2 0009  
      __size_of_LCD_START 004F                      _main 06DE                      btemp 007E  
  __size_of_LCD_setCursor 0029            ??_config_clock 0070                      start 0000  
        ?_LCD_writeString 0070        __size_of_LCD_write 000F                     ?_main 0070  
                   _ANSEL 0188                     _PORTB 0006                     _PORTD 0008  
                   _TRISB 0086                     _TRISD 0088           __end_of_flip_EN 070F  
                   _setup 071E                     pclath 000A                     status 0003  
                   wtemp0 007E           __initialization 07FC              __end_of_main 06E7  
                  ??_main 0077         __end_of_LCD_START 07FC             _LCD_setCursor 0784  
               ??_LCD_CMD 0072         __end_of_LCD_write 071E                    ?_setup 0070  
                  _ANSELH 0189                    _SSPADD 0093                    _SSPBUF 0013  
                  _SSPCON 0014        i2c_MasterInit@freq 0070          ??_i2c_MasterInit 0074  
          ?_LCD_setCursor 0073                 ??_flip_EN 0070      __end_of_config_clock 06DE  
       LCD_setCursor@fila 0074   __end_of__initialization 07FC            __pcstackCOMMON 0070  
           __end_of_setup 073B        __size_of_config_io 000D                   ??_setup 0077  
              __pmaintext 06DE           ??_LCD_setCursor 0074            LCD_write@value 0072  
                 _LCD_CMD 06E7                _config_lcd 073B                   _SSPCON2 0091  
                 _SSPSTAT 0094                __stringtab 0003         __end_of_config_io 0700  
   __size_of_config_clock 0008                   __ptext1 071E                   __ptext2 06CF  
                 __ptext3 073B                   __ptext4 075F                   __ptext5 070F  
                 __ptext6 0784                   __ptext7 07AD                   __ptext8 06E7  
                 __ptext9 0700                   _flip_EN 0700  __size_of_LCD_writeString 0025  
     LCD_writeString@text 0075          LCD_writeString@i 0073                 _LCD_START 07AD  
    end_of_initialization 07FC                 _LCD_write 070F              _config_clock 06D6  
              LCD_CMD@cmd 0072               ?_config_lcd 0070                ?_LCD_START 0070  
               _TRISCbits 0087                ?_LCD_write 0070       start_initialization 07FC  
       ??_LCD_writeString 0073       __size_of_config_lcd 0024                  ?_LCD_CMD 0070  
               ___latbits 0002               ??_LCD_START 0073   __size_of_i2c_MasterInit 0007  
             ??_LCD_write 0072                 _config_io 06F3     __end_of_LCD_setCursor 07AD  
               __pstrings 0003                  ?_flip_EN 0070            __size_of_setup 001D  
              ?_config_io 0070               __stringbase 0008          __size_of_LCD_CMD 000C  
            ??_config_lcd 0076        __end_of_config_lcd 075F           _LCD_writeString 075F  
      __end_of__stringtab 0009          __size_of_flip_EN 000F            _i2c_MasterInit 06CF  
                __ptext10 06F3                  __ptext11 06D6             __size_of_main 0009  
    LCD_setCursor@columna 0073               ??_config_io 0070    __end_of_i2c_MasterInit 06D6  
               stringcode 0003                _OSCCONbits 008F   __end_of_LCD_writeString 0784  
         ?_i2c_MasterInit 0070                  stringdir 0003                  stringtab 0003  
             _SSPCON2bits 0091             ?_config_clock 0070  
