

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Mar 06 22:57:36 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F887 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  008F                     	;# 
   110  0090                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  0105                     	;# 
   129  0107                     	;# 
   130  0108                     	;# 
   131  0109                     	;# 
   132  010C                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  0185                     	;# 
   138  0187                     	;# 
   139  0188                     	;# 
   140  0189                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0015                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001B                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  0081                     	;# 
   179  0085                     	;# 
   180  0086                     	;# 
   181  0087                     	;# 
   182  0088                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  008F                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0094                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0097                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009A                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  009F                     	;# 
   206  0105                     	;# 
   207  0107                     	;# 
   208  0108                     	;# 
   209  0109                     	;# 
   210  010C                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010E                     	;# 
   214  010F                     	;# 
   215  0185                     	;# 
   216  0187                     	;# 
   217  0188                     	;# 
   218  0189                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000D                     	;# 
   235  000E                     	;# 
   236  000E                     	;# 
   237  000F                     	;# 
   238  0010                     	;# 
   239  0011                     	;# 
   240  0012                     	;# 
   241  0013                     	;# 
   242  0014                     	;# 
   243  0015                     	;# 
   244  0015                     	;# 
   245  0016                     	;# 
   246  0017                     	;# 
   247  0018                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001B                     	;# 
   252  001C                     	;# 
   253  001D                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  0081                     	;# 
   257  0085                     	;# 
   258  0086                     	;# 
   259  0087                     	;# 
   260  0088                     	;# 
   261  0089                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  008F                     	;# 
   266  0090                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0094                     	;# 
   273  0095                     	;# 
   274  0096                     	;# 
   275  0097                     	;# 
   276  0098                     	;# 
   277  0099                     	;# 
   278  009A                     	;# 
   279  009B                     	;# 
   280  009C                     	;# 
   281  009D                     	;# 
   282  009E                     	;# 
   283  009F                     	;# 
   284  0105                     	;# 
   285  0107                     	;# 
   286  0108                     	;# 
   287  0109                     	;# 
   288  010C                     	;# 
   289  010C                     	;# 
   290  010D                     	;# 
   291  010E                     	;# 
   292  010F                     	;# 
   293  0185                     	;# 
   294  0187                     	;# 
   295  0188                     	;# 
   296  0189                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0006                     	;# 
   306  0007                     	;# 
   307  0008                     	;# 
   308  0009                     	;# 
   309  000A                     	;# 
   310  000B                     	;# 
   311  000C                     	;# 
   312  000D                     	;# 
   313  000E                     	;# 
   314  000E                     	;# 
   315  000F                     	;# 
   316  0010                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0013                     	;# 
   320  0014                     	;# 
   321  0015                     	;# 
   322  0015                     	;# 
   323  0016                     	;# 
   324  0017                     	;# 
   325  0018                     	;# 
   326  0019                     	;# 
   327  001A                     	;# 
   328  001B                     	;# 
   329  001B                     	;# 
   330  001C                     	;# 
   331  001D                     	;# 
   332  001E                     	;# 
   333  001F                     	;# 
   334  0081                     	;# 
   335  0085                     	;# 
   336  0086                     	;# 
   337  0087                     	;# 
   338  0088                     	;# 
   339  0089                     	;# 
   340  008C                     	;# 
   341  008D                     	;# 
   342  008E                     	;# 
   343  008F                     	;# 
   344  0090                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0094                     	;# 
   351  0095                     	;# 
   352  0096                     	;# 
   353  0097                     	;# 
   354  0098                     	;# 
   355  0099                     	;# 
   356  009A                     	;# 
   357  009B                     	;# 
   358  009C                     	;# 
   359  009D                     	;# 
   360  009E                     	;# 
   361  009F                     	;# 
   362  0105                     	;# 
   363  0107                     	;# 
   364  0108                     	;# 
   365  0109                     	;# 
   366  010C                     	;# 
   367  010C                     	;# 
   368  010D                     	;# 
   369  010E                     	;# 
   370  010F                     	;# 
   371  0185                     	;# 
   372  0187                     	;# 
   373  0188                     	;# 
   374  0189                     	;# 
   375  018C                     	;# 
   376  018D                     	;# 
   377  0014                     _SSPCON	set	20
   378  0013                     _SSPBUF	set	19
   379  0014                     _SSPCONbits	set	20
   380  0008                     _PORTD	set	8
   381  0006                     _PORTB	set	6
   382  0005                     _PORTA	set	5
   383  0046                     _RD6	set	70
   384  0047                     _RD7	set	71
   385  0091                     _SSPCON2bits	set	145
   386  0087                     _TRISCbits	set	135
   387  0093                     _SSPADD	set	147
   388  0091                     _SSPCON2	set	145
   389  0094                     _SSPSTAT	set	148
   390  008F                     _OSCCONbits	set	143
   391  0088                     _TRISD	set	136
   392  0086                     _TRISB	set	134
   393  0085                     _TRISA	set	133
   394  0189                     _ANSELH	set	393
   395  0188                     _ANSEL	set	392
   396                           
   397                           	psect	strings
   398  0003                     __pstrings:
   399  0003                     stringtab:
   400  0003                     __stringtab:
   401  0003                     stringcode:	
   402                           ;	String table - string pointers are 1 byte each
   403                           
   404  0003                     stringdir:
   405  0003  3000               	movlw	high stringdir
   406  0004  008A               	movwf	10
   407  0005  0804               	movf	4,w
   408  0006  0A84               	incf	4,f
   409  0007  0782               	addwf	2,f
   410  0008                     __stringbase:
   411  0008  3400               	retlw	0
   412  0009                     __end_of__stringtab:
   413  0009                     STR_2:
   414  0009  3453               	retlw	83	;'S'
   415  000A  3465               	retlw	101	;'e'
   416  000B  346D               	retlw	109	;'m'
   417  000C  3461               	retlw	97	;'a'
   418  000D  3466               	retlw	102	;'f'
   419  000E  346F               	retlw	111	;'o'
   420  000F  3472               	retlw	114	;'r'
   421  0010  346F               	retlw	111	;'o'
   422  0011  3400               	retlw	0
   423  0012                     STR_1:
   424  0012  3447               	retlw	71	;'G'
   425  0013  3465               	retlw	101	;'e'
   426  0014  3473               	retlw	115	;'s'
   427  0015  3474               	retlw	116	;'t'
   428  0016  346F               	retlw	111	;'o'
   429  0017  3400               	retlw	0
   430                           
   431                           	psect	cinit
   432  07F8                     start_initialization:	
   433                           ; #config settings
   434                           
   435  07F8                     __initialization:
   436                           
   437                           ; Clear objects allocated to BANK0
   438  07F8  1283               	bcf	3,5	;RP0=0, select bank0
   439  07F9  1303               	bcf	3,6	;RP1=0, select bank0
   440  07FA  01AB               	clrf	__pbssBANK0& (0+127)
   441  07FB  01AC               	clrf	(__pbssBANK0+1)& (0+127)
   442  07FC                     end_of_initialization:	
   443                           ;End of C runtime variable initialization code
   444                           
   445  07FC                     __end_of__initialization:
   446  07FC  0183               	clrf	3
   447  07FD  120A  118A  2EAC   	ljmp	_main	;jump to C main() function
   448                           
   449                           	psect	bssBANK0
   450  002B                     __pbssBANK0:
   451  002B                     _data:
   452  002B                     	ds	2
   453                           
   454                           	psect	cstackCOMMON
   455  0070                     __pcstackCOMMON:
   456  0070                     ?_setup:
   457  0070                     ?_config_io:	
   458                           ; 1 bytes @ 0x0
   459                           
   460  0070                     ??_config_io:	
   461                           ; 1 bytes @ 0x0
   462                           
   463  0070                     ?_config_clock:	
   464                           ; 1 bytes @ 0x0
   465                           
   466  0070                     ??_config_clock:	
   467                           ; 1 bytes @ 0x0
   468                           
   469  0070                     ?_config_lcd:	
   470                           ; 1 bytes @ 0x0
   471                           
   472  0070                     ?_LCD_START:	
   473                           ; 1 bytes @ 0x0
   474                           
   475  0070                     ?_LCD_writeString:	
   476                           ; 1 bytes @ 0x0
   477                           
   478  0070                     ?_main:	
   479                           ; 1 bytes @ 0x0
   480                           
   481  0070                     ?_flip_EN:	
   482                           ; 1 bytes @ 0x0
   483                           
   484  0070                     ??_flip_EN:	
   485                           ; 1 bytes @ 0x0
   486                           
   487  0070                     ?_LCD_CMD:	
   488                           ; 1 bytes @ 0x0
   489                           
   490  0070                     ?_LCD_write:	
   491                           ; 1 bytes @ 0x0
   492                           
   493  0070                     ?_i2c_MasterWait:	
   494                           ; 1 bytes @ 0x0
   495                           
   496  0070                     ??_i2c_MasterWait:	
   497                           ; 1 bytes @ 0x0
   498                           
   499  0070                     ?_i2c_MasterStart:	
   500                           ; 1 bytes @ 0x0
   501                           
   502  0070                     ??_i2c_MasterStart:	
   503                           ; 1 bytes @ 0x0
   504                           
   505  0070                     ?_i2c_MasterStop:	
   506                           ; 1 bytes @ 0x0
   507                           
   508  0070                     ??_i2c_MasterStop:	
   509                           ; 1 bytes @ 0x0
   510                           
   511  0070                     ?_i2c_MasterSS:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  0070                     ??_i2c_MasterSS:	
   515                           ; 1 bytes @ 0x0
   516                           
   517  0070                     ?_i2c_MasterRead:	
   518                           ; 1 bytes @ 0x0
   519                           
   520  0070                     ?___lldiv:	
   521                           ; 2 bytes @ 0x0
   522                           
   523  0070                     i2c_MasterSS@address:	
   524                           ; 4 bytes @ 0x0
   525                           
   526  0070                     i2c_MasterRead@d:	
   527                           ; 1 bytes @ 0x0
   528                           
   529  0070                     ___lldiv@divisor:	
   530                           ; 2 bytes @ 0x0
   531                           
   532                           
   533                           ; 4 bytes @ 0x0
   534  0070                     	ds	2
   535  0072                     ??_LCD_CMD:
   536  0072                     ??_LCD_write:	
   537                           ; 1 bytes @ 0x2
   538                           
   539  0072                     ??_i2c_MasterRead:	
   540                           ; 1 bytes @ 0x2
   541                           
   542  0072                     LCD_CMD@cmd:	
   543                           ; 1 bytes @ 0x2
   544                           
   545  0072                     LCD_write@value:	
   546                           ; 1 bytes @ 0x2
   547                           
   548                           
   549                           ; 1 bytes @ 0x2
   550  0072                     	ds	1
   551  0073                     ??_LCD_START:
   552  0073                     ?_LCD_setCursor:	
   553                           ; 1 bytes @ 0x3
   554                           
   555  0073                     ??_LCD_writeString:	
   556                           ; 1 bytes @ 0x3
   557                           
   558  0073                     LCD_setCursor@columna:	
   559                           ; 1 bytes @ 0x3
   560                           
   561  0073                     LCD_writeString@i:	
   562                           ; 1 bytes @ 0x3
   563                           
   564                           
   565                           ; 2 bytes @ 0x3
   566  0073                     	ds	1
   567  0074                     ??_LCD_setCursor:
   568  0074                     LCD_setCursor@fila:	
   569                           ; 1 bytes @ 0x4
   570                           
   571  0074                     i2c_MasterRead@temp:	
   572                           ; 1 bytes @ 0x4
   573                           
   574  0074                     ___lldiv@dividend:	
   575                           ; 2 bytes @ 0x4
   576                           
   577                           
   578                           ; 4 bytes @ 0x4
   579  0074                     	ds	1
   580  0075                     LCD_writeString@text:
   581                           
   582                           ; 1 bytes @ 0x5
   583  0075                     	ds	1
   584  0076                     ?_i2c_MR:
   585  0076                     ??_config_lcd:	
   586                           ; 1 bytes @ 0x6
   587                           
   588  0076                     i2c_MR@value:	
   589                           ; 1 bytes @ 0x6
   590                           
   591                           
   592                           ; 1 bytes @ 0x6
   593  0076                     	ds	1
   594  0077                     ??_i2c_MR:
   595                           
   596                           ; 1 bytes @ 0x7
   597  0077                     	ds	1
   598  0078                     ??___lldiv:
   599  0078                     i2c_MR@address:	
   600                           ; 1 bytes @ 0x8
   601                           
   602                           
   603                           ; 1 bytes @ 0x8
   604  0078                     	ds	1
   605  0079                     i2c_MR@temp:
   606  0079                     ___lldiv@quotient:	
   607                           ; 1 bytes @ 0x9
   608                           
   609                           
   610                           ; 4 bytes @ 0x9
   611  0079                     	ds	4
   612  007D                     ___lldiv@counter:
   613                           
   614                           ; 1 bytes @ 0xD
   615  007D                     	ds	1
   616  007E                     ??_setup:
   617                           
   618                           	psect	cstackBANK0
   619  0020                     __pcstackBANK0:	
   620                           ; 1 bytes @ 0xE
   621                           
   622  0020                     ?_i2c_MasterInit:
   623  0020                     i2c_MasterInit@freq:	
   624                           ; 1 bytes @ 0x0
   625                           
   626                           
   627                           ; 4 bytes @ 0x0
   628  0020                     	ds	4
   629  0024                     ??_i2c_MasterInit:
   630                           
   631                           ; 1 bytes @ 0x4
   632  0024                     	ds	4
   633  0028                     ??_main:
   634                           
   635                           ; 1 bytes @ 0x8
   636  0028                     	ds	3
   637                           
   638                           	psect	maintext
   639  06AC                     __pmaintext:	
   640 ;;
   641 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   642 ;;
   643 ;; *************** function _main *****************
   644 ;; Defined at:
   645 ;;		line 87 in file "C:/Users/nicou/OneDrive/Documents/2022/1er_semestre/Digital_2/MiniProy2/MP2-Maestro.X/main.c"
   646 ;; Parameters:    Size  Location     Type
   647 ;;		None
   648 ;; Auto vars:     Size  Location     Type
   649 ;;		None
   650 ;; Return value:  Size  Location     Type
   651 ;;                  1    wreg      void 
   652 ;; Registers used:
   653 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   654 ;; Tracked objects:
   655 ;;		On entry : B00/0
   656 ;;		On exit  : 0/0
   657 ;;		Unchanged: 0/0
   658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   659 ;;      Params:         0       0       0       0       0
   660 ;;      Locals:         0       0       0       0       0
   661 ;;      Temps:          0       3       0       0       0
   662 ;;      Totals:         0       3       0       0       0
   663 ;;Total ram usage:        3 bytes
   664 ;; Hardware stack levels required when called: 5
   665 ;; This function calls:
   666 ;;		_i2c_MR
   667 ;;		_setup
   668 ;; This function is called by:
   669 ;;		Startup code after reset
   670 ;; This function uses a non-reentrant model
   671 ;;
   672                           
   673                           
   674                           ;psect for function _main
   675  06AC                     _main:
   676  06AC                     l1139:	
   677                           ;incstack = 0
   678                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   679                           
   680                           
   681                           ;main.c: 88: setup();
   682  06AC  120A  118A  25F5  120A  118A  	fcall	_setup
   683  06B1                     l1141:
   684                           
   685                           ;main.c: 89: data.send = 0x15;
   686  06B1  3015               	movlw	21
   687  06B2  1283               	bcf	3,5	;RP0=0, select bank0
   688  06B3  1303               	bcf	3,6	;RP1=0, select bank0
   689  06B4  00A8               	movwf	??_main
   690  06B5  0828               	movf	??_main,w
   691  06B6  00AB               	movwf	_data
   692  06B7                     l1143:
   693                           
   694                           ;main.c: 98: i2c_MR(0x50, &data.read);
   695  06B7  302C               	movlw	(low ((_data| 0+1)))& (0+255)
   696  06B8  00A8               	movwf	??_main
   697  06B9  0828               	movf	??_main,w
   698  06BA  00F6               	movwf	i2c_MR@value
   699  06BB  3050               	movlw	80
   700  06BC  120A  118A  265D  120A  118A  	fcall	_i2c_MR
   701                           
   702                           ;main.c: 99: _delay((unsigned long)((1000)*(4000000/4000.0)));
   703  06C1  3006               	movlw	6
   704  06C2  1283               	bcf	3,5	;RP0=0, select bank0
   705  06C3  1303               	bcf	3,6	;RP1=0, select bank0
   706  06C4  00AA               	movwf	??_main+2
   707  06C5  3013               	movlw	19
   708  06C6  00A9               	movwf	??_main+1
   709  06C7  30AD               	movlw	173
   710  06C8  00A8               	movwf	??_main
   711  06C9                     u257:
   712  06C9  0BA8               	decfsz	??_main,f
   713  06CA  2EC9               	goto	u257
   714  06CB  0BA9               	decfsz	??_main+1,f
   715  06CC  2EC9               	goto	u257
   716  06CD  0BAA               	decfsz	??_main+2,f
   717  06CE  2EC9               	goto	u257
   718                           
   719                           ;main.c: 101: PORTA = data.read;
   720  06CF  1283               	bcf	3,5	;RP0=0, select bank0
   721  06D0  1303               	bcf	3,6	;RP1=0, select bank0
   722  06D1  082C               	movf	_data+1,w
   723  06D2  0085               	movwf	5	;volatile
   724  06D3  2EB7               	goto	l1143
   725  06D4  120A  118A  2800   	ljmp	start
   726  06D7                     __end_of_main:
   727                           
   728                           	psect	text1
   729  05F5                     __ptext1:	
   730 ;; *************** function _setup *****************
   731 ;; Defined at:
   732 ;;		line 112 in file "C:/Users/nicou/OneDrive/Documents/2022/1er_semestre/Digital_2/MiniProy2/MP2-Maestro.X/main.c"
   733 ;; Parameters:    Size  Location     Type
   734 ;;		None
   735 ;; Auto vars:     Size  Location     Type
   736 ;;		None
   737 ;; Return value:  Size  Location     Type
   738 ;;                  1    wreg      void 
   739 ;; Registers used:
   740 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   741 ;; Tracked objects:
   742 ;;		On entry : 0/0
   743 ;;		On exit  : 0/0
   744 ;;		Unchanged: 0/0
   745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   746 ;;      Params:         0       0       0       0       0
   747 ;;      Locals:         0       0       0       0       0
   748 ;;      Temps:          0       0       0       0       0
   749 ;;      Totals:         0       0       0       0       0
   750 ;;Total ram usage:        0 bytes
   751 ;; Hardware stack levels used: 1
   752 ;; Hardware stack levels required when called: 4
   753 ;; This function calls:
   754 ;;		_config_clock
   755 ;;		_config_io
   756 ;;		_config_lcd
   757 ;;		_i2c_MasterInit
   758 ;; This function is called by:
   759 ;;		_main
   760 ;; This function uses a non-reentrant model
   761 ;;
   762                           
   763                           
   764                           ;psect for function _setup
   765  05F5                     _setup:
   766  05F5                     l1115:	
   767                           ;incstack = 0
   768                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   769                           
   770                           
   771                           ;main.c: 113: config_io();
   772  05F5  120A  118A  25C8  120A  118A  	fcall	_config_io
   773  05FA                     l1117:
   774                           
   775                           ;main.c: 114: config_clock();
   776  05FA  120A  118A  258A  120A  118A  	fcall	_config_clock
   777  05FF                     l1119:
   778                           
   779                           ;main.c: 115: config_lcd();
   780  05FF  120A  118A  2614  120A  118A  	fcall	_config_lcd
   781  0604                     l1121:
   782                           
   783                           ;main.c: 118: i2c_MasterInit(100000);
   784  0604  3000               	movlw	0
   785  0605  1283               	bcf	3,5	;RP0=0, select bank0
   786  0606  1303               	bcf	3,6	;RP1=0, select bank0
   787  0607  00A3               	movwf	i2c_MasterInit@freq+3
   788  0608  3001               	movlw	1
   789  0609  00A2               	movwf	i2c_MasterInit@freq+2
   790  060A  3086               	movlw	134
   791  060B  00A1               	movwf	i2c_MasterInit@freq+1
   792  060C  30A0               	movlw	160
   793  060D  00A0               	movwf	i2c_MasterInit@freq
   794  060E  120A  118A  2705  120A  118A  	fcall	_i2c_MasterInit
   795  0613                     l51:
   796  0613  0008               	return
   797  0614                     __end_of_setup:
   798                           
   799                           	psect	text2
   800  0705                     __ptext2:	
   801 ;; *************** function _i2c_MasterInit *****************
   802 ;; Defined at:
   803 ;;		line 10 in file "C:/Users/nicou/OneDrive/Documents/2022/1er_semestre/Digital_2/MiniProy2/MP2-Maestro.X/i2c.c"
   804 ;; Parameters:    Size  Location     Type
   805 ;;  freq            4    0[BANK0 ] unsigned long 
   806 ;; Auto vars:     Size  Location     Type
   807 ;;		None
   808 ;; Return value:  Size  Location     Type
   809 ;;                  1    wreg      void 
   810 ;; Registers used:
   811 ;;		wreg, status,2, status,0, pclath, cstack
   812 ;; Tracked objects:
   813 ;;		On entry : 0/0
   814 ;;		On exit  : 0/0
   815 ;;		Unchanged: 0/0
   816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   817 ;;      Params:         0       4       0       0       0
   818 ;;      Locals:         0       0       0       0       0
   819 ;;      Temps:          0       4       0       0       0
   820 ;;      Totals:         0       8       0       0       0
   821 ;;Total ram usage:        8 bytes
   822 ;; Hardware stack levels used: 1
   823 ;; Hardware stack levels required when called: 1
   824 ;; This function calls:
   825 ;;		___lldiv
   826 ;; This function is called by:
   827 ;;		_setup
   828 ;; This function uses a non-reentrant model
   829 ;;
   830                           
   831                           
   832                           ;psect for function _i2c_MasterInit
   833  0705                     _i2c_MasterInit:
   834  0705                     l1073:	
   835                           ;incstack = 0
   836                           ; Regs used in _i2c_MasterInit: [wreg+status,2+status,0+pclath+cstack]
   837                           
   838                           
   839                           ;i2c.c: 11: SSPSTAT = 0b10000000;
   840  0705  3080               	movlw	128
   841  0706  1683               	bsf	3,5	;RP0=1, select bank1
   842  0707  1303               	bcf	3,6	;RP1=0, select bank1
   843  0708  0094               	movwf	20	;volatile
   844  0709                     l1075:
   845                           
   846                           ;i2c.c: 13: SSPCONbits.SSPEN = 1;
   847  0709  1283               	bcf	3,5	;RP0=0, select bank0
   848  070A  1303               	bcf	3,6	;RP1=0, select bank0
   849  070B  1694               	bsf	20,5	;volatile
   850  070C                     l1077:
   851                           
   852                           ;i2c.c: 14: SSPCONbits.SSPM = 0b1000;
   853  070C  0814               	movf	20,w	;volatile
   854  070D  39F0               	andlw	-16
   855  070E  3808               	iorlw	8
   856  070F  0094               	movwf	20	;volatile
   857  0710                     l1079:
   858                           
   859                           ;i2c.c: 16: SSPCON2 = 0b0;
   860  0710  1683               	bsf	3,5	;RP0=1, select bank1
   861  0711  1303               	bcf	3,6	;RP1=0, select bank1
   862  0712  0191               	clrf	17	;volatile
   863  0713                     l1081:
   864                           
   865                           ;i2c.c: 18: SSPADD = (4000000/(4*freq))-1;
   866  0713  1283               	bcf	3,5	;RP0=0, select bank0
   867  0714  1303               	bcf	3,6	;RP1=0, select bank0
   868  0715  0820               	movf	i2c_MasterInit@freq,w
   869  0716  00A4               	movwf	??_i2c_MasterInit
   870  0717  0821               	movf	i2c_MasterInit@freq+1,w
   871  0718  00A5               	movwf	??_i2c_MasterInit+1
   872  0719  0822               	movf	i2c_MasterInit@freq+2,w
   873  071A  00A6               	movwf	??_i2c_MasterInit+2
   874  071B  0823               	movf	i2c_MasterInit@freq+3,w
   875  071C  00A7               	movwf	??_i2c_MasterInit+3
   876  071D  3002               	movlw	2
   877  071E                     u235:
   878  071E  1003               	clrc
   879  071F  0DA4               	rlf	??_i2c_MasterInit,f
   880  0720  0DA5               	rlf	??_i2c_MasterInit+1,f
   881  0721  0DA6               	rlf	??_i2c_MasterInit+2,f
   882  0722  0DA7               	rlf	??_i2c_MasterInit+3,f
   883  0723                     u230:
   884  0723  3EFF               	addlw	-1
   885  0724  1D03               	skipz
   886  0725  2F1E               	goto	u235
   887  0726  0827               	movf	??_i2c_MasterInit+3,w
   888  0727  00F3               	movwf	___lldiv@divisor+3
   889  0728  0826               	movf	??_i2c_MasterInit+2,w
   890  0729  00F2               	movwf	___lldiv@divisor+2
   891  072A  0825               	movf	??_i2c_MasterInit+1,w
   892  072B  00F1               	movwf	___lldiv@divisor+1
   893  072C  0824               	movf	??_i2c_MasterInit,w
   894  072D  00F0               	movwf	___lldiv@divisor
   895  072E  3000               	movlw	0
   896  072F  00F7               	movwf	___lldiv@dividend+3
   897  0730  303D               	movlw	61
   898  0731  00F6               	movwf	___lldiv@dividend+2
   899  0732  3009               	movlw	9
   900  0733  00F5               	movwf	___lldiv@dividend+1
   901  0734  3000               	movlw	0
   902  0735  00F4               	movwf	___lldiv@dividend
   903  0736  120A  118A  2792  120A  118A  	fcall	___lldiv
   904  073B  0870               	movf	?___lldiv,w
   905  073C  3EFF               	addlw	255
   906  073D  1683               	bsf	3,5	;RP0=1, select bank1
   907  073E  1303               	bcf	3,6	;RP1=0, select bank1
   908  073F  0093               	movwf	19	;volatile
   909  0740                     l1083:
   910                           
   911                           ;i2c.c: 20: TRISCbits.TRISC3 = 1;
   912  0740  1587               	bsf	7,3	;volatile
   913  0741                     l1085:
   914                           
   915                           ;i2c.c: 21: TRISCbits.TRISC4 = 1;
   916  0741  1607               	bsf	7,4	;volatile
   917  0742                     l124:
   918  0742  0008               	return
   919  0743                     __end_of_i2c_MasterInit:
   920                           
   921                           	psect	text3
   922  0792                     __ptext3:	
   923 ;; *************** function ___lldiv *****************
   924 ;; Defined at:
   925 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
   926 ;; Parameters:    Size  Location     Type
   927 ;;  divisor         4    0[COMMON] unsigned long 
   928 ;;  dividend        4    4[COMMON] unsigned long 
   929 ;; Auto vars:     Size  Location     Type
   930 ;;  quotient        4    9[COMMON] unsigned long 
   931 ;;  counter         1   13[COMMON] unsigned char 
   932 ;; Return value:  Size  Location     Type
   933 ;;                  4    0[COMMON] unsigned long 
   934 ;; Registers used:
   935 ;;		wreg, status,2, status,0
   936 ;; Tracked objects:
   937 ;;		On entry : 0/0
   938 ;;		On exit  : 0/0
   939 ;;		Unchanged: 0/0
   940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   941 ;;      Params:         8       0       0       0       0
   942 ;;      Locals:         5       0       0       0       0
   943 ;;      Temps:          1       0       0       0       0
   944 ;;      Totals:        14       0       0       0       0
   945 ;;Total ram usage:       14 bytes
   946 ;; Hardware stack levels used: 1
   947 ;; This function calls:
   948 ;;		Nothing
   949 ;; This function is called by:
   950 ;;		_i2c_MasterInit
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954                           
   955                           ;psect for function ___lldiv
   956  0792                     ___lldiv:
   957  0792                     l1033:	
   958                           ;incstack = 0
   959                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
   960                           
   961  0792  3000               	movlw	0
   962  0793  00FC               	movwf	___lldiv@quotient+3
   963  0794  3000               	movlw	0
   964  0795  00FB               	movwf	___lldiv@quotient+2
   965  0796  3000               	movlw	0
   966  0797  00FA               	movwf	___lldiv@quotient+1
   967  0798  3000               	movlw	0
   968  0799  00F9               	movwf	___lldiv@quotient
   969  079A  0873               	movf	___lldiv@divisor+3,w
   970  079B  0472               	iorwf	___lldiv@divisor+2,w
   971  079C  0471               	iorwf	___lldiv@divisor+1,w
   972  079D  0470               	iorwf	___lldiv@divisor,w
   973  079E  1903               	skipnz
   974  079F  2FA1               	goto	u161
   975  07A0  2FA2               	goto	u160
   976  07A1                     u161:
   977  07A1  2FEF               	goto	l1053
   978  07A2                     u160:
   979  07A2                     l1035:
   980  07A2  01FD               	clrf	___lldiv@counter
   981  07A3  0AFD               	incf	___lldiv@counter,f
   982  07A4  2FB2               	goto	l1039
   983  07A5                     l1037:
   984  07A5  3001               	movlw	1
   985  07A6  00F8               	movwf	??___lldiv
   986  07A7                     u175:
   987  07A7  1003               	clrc
   988  07A8  0DF0               	rlf	___lldiv@divisor,f
   989  07A9  0DF1               	rlf	___lldiv@divisor+1,f
   990  07AA  0DF2               	rlf	___lldiv@divisor+2,f
   991  07AB  0DF3               	rlf	___lldiv@divisor+3,f
   992  07AC  0BF8               	decfsz	??___lldiv,f
   993  07AD  2FA7               	goto	u175
   994  07AE  3001               	movlw	1
   995  07AF  00F8               	movwf	??___lldiv
   996  07B0  0878               	movf	??___lldiv,w
   997  07B1  07FD               	addwf	___lldiv@counter,f
   998  07B2                     l1039:
   999  07B2  1FF3               	btfss	___lldiv@divisor+3,7
  1000  07B3  2FB5               	goto	u181
  1001  07B4  2FB6               	goto	u180
  1002  07B5                     u181:
  1003  07B5  2FA5               	goto	l1037
  1004  07B6                     u180:
  1005  07B6                     l1041:
  1006  07B6  3001               	movlw	1
  1007  07B7  00F8               	movwf	??___lldiv
  1008  07B8                     u195:
  1009  07B8  1003               	clrc
  1010  07B9  0DF9               	rlf	___lldiv@quotient,f
  1011  07BA  0DFA               	rlf	___lldiv@quotient+1,f
  1012  07BB  0DFB               	rlf	___lldiv@quotient+2,f
  1013  07BC  0DFC               	rlf	___lldiv@quotient+3,f
  1014  07BD  0BF8               	decfsz	??___lldiv,f
  1015  07BE  2FB8               	goto	u195
  1016  07BF                     l1043:
  1017  07BF  0873               	movf	___lldiv@divisor+3,w
  1018  07C0  0277               	subwf	___lldiv@dividend+3,w
  1019  07C1  1D03               	skipz
  1020  07C2  2FCD               	goto	u205
  1021  07C3  0872               	movf	___lldiv@divisor+2,w
  1022  07C4  0276               	subwf	___lldiv@dividend+2,w
  1023  07C5  1D03               	skipz
  1024  07C6  2FCD               	goto	u205
  1025  07C7  0871               	movf	___lldiv@divisor+1,w
  1026  07C8  0275               	subwf	___lldiv@dividend+1,w
  1027  07C9  1D03               	skipz
  1028  07CA  2FCD               	goto	u205
  1029  07CB  0870               	movf	___lldiv@divisor,w
  1030  07CC  0274               	subwf	___lldiv@dividend,w
  1031  07CD                     u205:
  1032  07CD  1C03               	skipc
  1033  07CE  2FD0               	goto	u201
  1034  07CF  2FD1               	goto	u200
  1035  07D0                     u201:
  1036  07D0  2FE0               	goto	l1049
  1037  07D1                     u200:
  1038  07D1                     l1045:
  1039  07D1  0870               	movf	___lldiv@divisor,w
  1040  07D2  02F4               	subwf	___lldiv@dividend,f
  1041  07D3  0871               	movf	___lldiv@divisor+1,w
  1042  07D4  1C03               	skipc
  1043  07D5  0F71               	incfsz	___lldiv@divisor+1,w
  1044  07D6  02F5               	subwf	___lldiv@dividend+1,f
  1045  07D7  0872               	movf	___lldiv@divisor+2,w
  1046  07D8  1C03               	skipc
  1047  07D9  0F72               	incfsz	___lldiv@divisor+2,w
  1048  07DA  02F6               	subwf	___lldiv@dividend+2,f
  1049  07DB  0873               	movf	___lldiv@divisor+3,w
  1050  07DC  1C03               	skipc
  1051  07DD  0F73               	incfsz	___lldiv@divisor+3,w
  1052  07DE  02F7               	subwf	___lldiv@dividend+3,f
  1053  07DF                     l1047:
  1054  07DF  1479               	bsf	___lldiv@quotient,0
  1055  07E0                     l1049:
  1056  07E0  3001               	movlw	1
  1057  07E1                     u215:
  1058  07E1  1003               	clrc
  1059  07E2  0CF3               	rrf	___lldiv@divisor+3,f
  1060  07E3  0CF2               	rrf	___lldiv@divisor+2,f
  1061  07E4  0CF1               	rrf	___lldiv@divisor+1,f
  1062  07E5  0CF0               	rrf	___lldiv@divisor,f
  1063  07E6  3EFF               	addlw	-1
  1064  07E7  1D03               	skipz
  1065  07E8  2FE1               	goto	u215
  1066  07E9                     l1051:
  1067  07E9  3001               	movlw	1
  1068  07EA  02FD               	subwf	___lldiv@counter,f
  1069  07EB  1D03               	btfss	3,2
  1070  07EC  2FEE               	goto	u221
  1071  07ED  2FEF               	goto	u220
  1072  07EE                     u221:
  1073  07EE  2FB6               	goto	l1041
  1074  07EF                     u220:
  1075  07EF                     l1053:
  1076  07EF  087C               	movf	___lldiv@quotient+3,w
  1077  07F0  00F3               	movwf	?___lldiv+3
  1078  07F1  087B               	movf	___lldiv@quotient+2,w
  1079  07F2  00F2               	movwf	?___lldiv+2
  1080  07F3  087A               	movf	___lldiv@quotient+1,w
  1081  07F4  00F1               	movwf	?___lldiv+1
  1082  07F5  0879               	movf	___lldiv@quotient,w
  1083  07F6  00F0               	movwf	?___lldiv
  1084  07F7                     l281:
  1085  07F7  0008               	return
  1086  07F8                     __end_of___lldiv:
  1087                           
  1088                           	psect	text4
  1089  0614                     __ptext4:	
  1090 ;; *************** function _config_lcd *****************
  1091 ;; Defined at:
  1092 ;;		line 142 in file "C:/Users/nicou/OneDrive/Documents/2022/1er_semestre/Digital_2/MiniProy2/MP2-Maestro.X/main.c"
  1093 ;; Parameters:    Size  Location     Type
  1094 ;;		None
  1095 ;; Auto vars:     Size  Location     Type
  1096 ;;		None
  1097 ;; Return value:  Size  Location     Type
  1098 ;;                  1    wreg      void 
  1099 ;; Registers used:
  1100 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1101 ;; Tracked objects:
  1102 ;;		On entry : 0/0
  1103 ;;		On exit  : 0/0
  1104 ;;		Unchanged: 0/0
  1105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1106 ;;      Params:         0       0       0       0       0
  1107 ;;      Locals:         0       0       0       0       0
  1108 ;;      Temps:          1       0       0       0       0
  1109 ;;      Totals:         1       0       0       0       0
  1110 ;;Total ram usage:        1 bytes
  1111 ;; Hardware stack levels used: 1
  1112 ;; Hardware stack levels required when called: 3
  1113 ;; This function calls:
  1114 ;;		_LCD_START
  1115 ;;		_LCD_setCursor
  1116 ;;		_LCD_writeString
  1117 ;; This function is called by:
  1118 ;;		_setup
  1119 ;; This function uses a non-reentrant model
  1120 ;;
  1121                           
  1122                           
  1123                           ;psect for function _config_lcd
  1124  0614                     _config_lcd:
  1125  0614                     l1063:	
  1126                           ;incstack = 0
  1127                           ; Regs used in _config_lcd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1128                           
  1129                           
  1130                           ;main.c: 143: LCD_START();
  1131  0614  120A  118A  2743  120A  118A  	fcall	_LCD_START
  1132  0619                     l1065:
  1133                           
  1134                           ;main.c: 145: LCD_setCursor (1,1);
  1135  0619  01F3               	clrf	LCD_setCursor@columna
  1136  061A  0AF3               	incf	LCD_setCursor@columna,f
  1137  061B  3001               	movlw	1
  1138  061C  120A  118A  2683  120A  118A  	fcall	_LCD_setCursor
  1139  0621                     l1067:
  1140                           
  1141                           ;main.c: 146: LCD_writeString ("Gesto");
  1142  0621  300A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1143  0622  120A  118A  2638  120A  118A  	fcall	_LCD_writeString
  1144  0627                     l1069:
  1145                           
  1146                           ;main.c: 148: LCD_setCursor (1,9);
  1147  0627  3009               	movlw	9
  1148  0628  00F6               	movwf	??_config_lcd
  1149  0629  0876               	movf	??_config_lcd,w
  1150  062A  00F3               	movwf	LCD_setCursor@columna
  1151  062B  3001               	movlw	1
  1152  062C  120A  118A  2683  120A  118A  	fcall	_LCD_setCursor
  1153  0631                     l1071:
  1154                           
  1155                           ;main.c: 149: LCD_writeString ("Semaforo");
  1156  0631  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1157  0632  120A  118A  2638  120A  118A  	fcall	_LCD_writeString
  1158  0637                     l60:
  1159  0637  0008               	return
  1160  0638                     __end_of_config_lcd:
  1161                           
  1162                           	psect	text5
  1163  0638                     __ptext5:	
  1164 ;; *************** function _LCD_writeString *****************
  1165 ;; Defined at:
  1166 ;;		line 86 in file "lcd_8bitsA.c"
  1167 ;; Parameters:    Size  Location     Type
  1168 ;;  text            1    wreg     PTR unsigned char 
  1169 ;;		 -> STR_2(9), STR_1(6), 
  1170 ;; Auto vars:     Size  Location     Type
  1171 ;;  text            1    5[COMMON] PTR unsigned char 
  1172 ;;		 -> STR_2(9), STR_1(6), 
  1173 ;;  i               2    3[COMMON] int 
  1174 ;; Return value:  Size  Location     Type
  1175 ;;                  1    wreg      void 
  1176 ;; Registers used:
  1177 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1178 ;; Tracked objects:
  1179 ;;		On entry : 0/0
  1180 ;;		On exit  : 0/0
  1181 ;;		Unchanged: 0/0
  1182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1183 ;;      Params:         0       0       0       0       0
  1184 ;;      Locals:         3       0       0       0       0
  1185 ;;      Temps:          0       0       0       0       0
  1186 ;;      Totals:         3       0       0       0       0
  1187 ;;Total ram usage:        3 bytes
  1188 ;; Hardware stack levels used: 1
  1189 ;; Hardware stack levels required when called: 2
  1190 ;; This function calls:
  1191 ;;		_LCD_write
  1192 ;; This function is called by:
  1193 ;;		_config_lcd
  1194 ;; This function uses a non-reentrant model
  1195 ;;
  1196                           
  1197                           
  1198                           ;psect for function _LCD_writeString
  1199  0638                     _LCD_writeString:
  1200                           
  1201                           ;incstack = 0
  1202                           ; Regs used in _LCD_writeString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1203                           ;LCD_writeString@text stored from wreg
  1204  0638  00F5               	movwf	LCD_writeString@text
  1205  0639                     l1021:
  1206                           
  1207                           ;lcd_8bitsA.c: 87: int i;;lcd_8bitsA.c: 88: for (i = 0; text[i] != '\0'; i++){
  1208  0639  01F3               	clrf	LCD_writeString@i
  1209  063A  01F4               	clrf	LCD_writeString@i+1
  1210  063B  2E4F               	goto	l1027
  1211  063C                     l1023:
  1212                           
  1213                           ;lcd_8bitsA.c: 89: LCD_write(text[i]);
  1214  063C  0873               	movf	LCD_writeString@i,w
  1215  063D  0775               	addwf	LCD_writeString@text,w
  1216  063E  0084               	movwf	4
  1217  063F  120A  118A  2003  120A  118A  	fcall	stringdir
  1218  0644  120A  118A  25E6  120A  118A  	fcall	_LCD_write
  1219  0649                     l1025:
  1220  0649  3001               	movlw	1
  1221  064A  07F3               	addwf	LCD_writeString@i,f
  1222  064B  1803               	skipnc
  1223  064C  0AF4               	incf	LCD_writeString@i+1,f
  1224  064D  3000               	movlw	0
  1225  064E  07F4               	addwf	LCD_writeString@i+1,f
  1226  064F                     l1027:
  1227  064F  0873               	movf	LCD_writeString@i,w
  1228  0650  0775               	addwf	LCD_writeString@text,w
  1229  0651  0084               	movwf	4
  1230  0652  120A  118A  2003  120A  118A  	fcall	stringdir
  1231  0657  3A00               	xorlw	0
  1232  0658  1D03               	skipz
  1233  0659  2E5B               	goto	u131
  1234  065A  2E5C               	goto	u130
  1235  065B                     u131:
  1236  065B  2E3C               	goto	l1023
  1237  065C                     u130:
  1238  065C                     l99:
  1239  065C  0008               	return
  1240  065D                     __end_of_LCD_writeString:
  1241                           
  1242                           	psect	text6
  1243  05E6                     __ptext6:	
  1244 ;; *************** function _LCD_write *****************
  1245 ;; Defined at:
  1246 ;;		line 77 in file "lcd_8bitsA.c"
  1247 ;; Parameters:    Size  Location     Type
  1248 ;;  value           1    wreg     unsigned char 
  1249 ;; Auto vars:     Size  Location     Type
  1250 ;;  value           1    2[COMMON] unsigned char 
  1251 ;; Return value:  Size  Location     Type
  1252 ;;                  1    wreg      void 
  1253 ;; Registers used:
  1254 ;;		wreg, status,2, status,0, pclath, cstack
  1255 ;; Tracked objects:
  1256 ;;		On entry : 0/0
  1257 ;;		On exit  : 0/0
  1258 ;;		Unchanged: 0/0
  1259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1260 ;;      Params:         0       0       0       0       0
  1261 ;;      Locals:         1       0       0       0       0
  1262 ;;      Temps:          0       0       0       0       0
  1263 ;;      Totals:         1       0       0       0       0
  1264 ;;Total ram usage:        1 bytes
  1265 ;; Hardware stack levels used: 1
  1266 ;; Hardware stack levels required when called: 1
  1267 ;; This function calls:
  1268 ;;		_flip_EN
  1269 ;; This function is called by:
  1270 ;;		_LCD_writeString
  1271 ;; This function uses a non-reentrant model
  1272 ;;
  1273                           
  1274                           
  1275                           ;psect for function _LCD_write
  1276  05E6                     _LCD_write:
  1277                           
  1278                           ;incstack = 0
  1279                           ; Regs used in _LCD_write: [wreg+status,2+status,0+pclath+cstack]
  1280                           ;LCD_write@value stored from wreg
  1281  05E6  00F2               	movwf	LCD_write@value
  1282  05E7                     l973:
  1283                           
  1284                           ;lcd_8bitsA.c: 78: RD6 = 1;
  1285  05E7  1283               	bcf	3,5	;RP0=0, select bank0
  1286  05E8  1303               	bcf	3,6	;RP1=0, select bank0
  1287  05E9  1708               	bsf	8,6	;volatile
  1288  05EA                     l975:
  1289                           
  1290                           ;lcd_8bitsA.c: 79: PORTB = value;
  1291  05EA  0872               	movf	LCD_write@value,w
  1292  05EB  0086               	movwf	6	;volatile
  1293  05EC                     l977:
  1294                           
  1295                           ;lcd_8bitsA.c: 80: flip_EN();
  1296  05EC  120A  118A  25D7  120A  118A  	fcall	_flip_EN
  1297  05F1                     l979:
  1298                           
  1299                           ;lcd_8bitsA.c: 81: RD6 = 0;
  1300  05F1  1283               	bcf	3,5	;RP0=0, select bank0
  1301  05F2  1303               	bcf	3,6	;RP1=0, select bank0
  1302  05F3  1308               	bcf	8,6	;volatile
  1303  05F4                     l93:
  1304  05F4  0008               	return
  1305  05F5                     __end_of_LCD_write:
  1306                           
  1307                           	psect	text7
  1308  0683                     __ptext7:	
  1309 ;; *************** function _LCD_setCursor *****************
  1310 ;; Defined at:
  1311 ;;		line 58 in file "lcd_8bitsA.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;  fila            1    wreg     unsigned char 
  1314 ;;  columna         1    3[COMMON] unsigned char 
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;  fila            1    4[COMMON] unsigned char 
  1317 ;; Return value:  Size  Location     Type
  1318 ;;                  1    wreg      void 
  1319 ;; Registers used:
  1320 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1321 ;; Tracked objects:
  1322 ;;		On entry : 0/0
  1323 ;;		On exit  : 0/0
  1324 ;;		Unchanged: 0/0
  1325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1326 ;;      Params:         1       0       0       0       0
  1327 ;;      Locals:         1       0       0       0       0
  1328 ;;      Temps:          0       0       0       0       0
  1329 ;;      Totals:         2       0       0       0       0
  1330 ;;Total ram usage:        2 bytes
  1331 ;; Hardware stack levels used: 1
  1332 ;; Hardware stack levels required when called: 2
  1333 ;; This function calls:
  1334 ;;		_LCD_CMD
  1335 ;; This function is called by:
  1336 ;;		_config_lcd
  1337 ;; This function uses a non-reentrant model
  1338 ;;
  1339                           
  1340                           
  1341                           ;psect for function _LCD_setCursor
  1342  0683                     _LCD_setCursor:
  1343                           
  1344                           ;incstack = 0
  1345                           ; Regs used in _LCD_setCursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1346                           ;LCD_setCursor@fila stored from wreg
  1347  0683  00F4               	movwf	LCD_setCursor@fila
  1348  0684                     l1009:
  1349                           
  1350                           ;lcd_8bitsA.c: 59: switch (fila){
  1351  0684  2EA3               	goto	l1019
  1352  0685                     l1011:
  1353                           
  1354                           ;lcd_8bitsA.c: 62: LCD_CMD(((columna & 0x0F)-1) | 0x80);
  1355  0685  0873               	movf	LCD_setCursor@columna,w
  1356  0686  390F               	andlw	15
  1357  0687  3EFF               	addlw	255
  1358  0688  3880               	iorlw	128
  1359  0689  120A  118A  25AF  120A  118A  	fcall	_LCD_CMD
  1360                           
  1361                           ;lcd_8bitsA.c: 63: break;
  1362  068E  2EAB               	goto	l90
  1363  068F                     l1013:
  1364                           
  1365                           ;lcd_8bitsA.c: 67: LCD_CMD(((columna & 0x0F)-1) | 0xC0);
  1366  068F  0873               	movf	LCD_setCursor@columna,w
  1367  0690  390F               	andlw	15
  1368  0691  3EFF               	addlw	255
  1369  0692  38C0               	iorlw	192
  1370  0693  120A  118A  25AF  120A  118A  	fcall	_LCD_CMD
  1371                           
  1372                           ;lcd_8bitsA.c: 68: break;
  1373  0698  2EAB               	goto	l90
  1374  0699                     l1015:
  1375                           
  1376                           ;lcd_8bitsA.c: 71: LCD_CMD(((columna & 0x0F)-1) | 0x80);
  1377  0699  0873               	movf	LCD_setCursor@columna,w
  1378  069A  390F               	andlw	15
  1379  069B  3EFF               	addlw	255
  1380  069C  3880               	iorlw	128
  1381  069D  120A  118A  25AF  120A  118A  	fcall	_LCD_CMD
  1382                           
  1383                           ;lcd_8bitsA.c: 72: break;
  1384  06A2  2EAB               	goto	l90
  1385  06A3                     l1019:
  1386  06A3  0874               	movf	LCD_setCursor@fila,w
  1387                           
  1388                           ; Switch size 1, requested type "simple"
  1389                           ; Number of cases is 2, Range of values is 1 to 2
  1390                           ; switch strategies available:
  1391                           ; Name         Instructions Cycles
  1392                           ; simple_byte            7     4 (average)
  1393                           ; direct_byte           17    11 (fixed)
  1394                           ; jumptable            263     9 (fixed)
  1395                           ;	Chosen strategy is simple_byte
  1396  06A4  3A01               	xorlw	1	; case 1
  1397  06A5  1903               	skipnz
  1398  06A6  2E85               	goto	l1011
  1399  06A7  3A03               	xorlw	3	; case 2
  1400  06A8  1903               	skipnz
  1401  06A9  2E8F               	goto	l1013
  1402  06AA  2E99               	goto	l1015
  1403  06AB                     l90:
  1404  06AB  0008               	return
  1405  06AC                     __end_of_LCD_setCursor:
  1406                           
  1407                           	psect	text8
  1408  0743                     __ptext8:	
  1409 ;; *************** function _LCD_START *****************
  1410 ;; Defined at:
  1411 ;;		line 19 in file "lcd_8bitsA.c"
  1412 ;; Parameters:    Size  Location     Type
  1413 ;;		None
  1414 ;; Auto vars:     Size  Location     Type
  1415 ;;		None
  1416 ;; Return value:  Size  Location     Type
  1417 ;;                  1    wreg      void 
  1418 ;; Registers used:
  1419 ;;		wreg, status,2, status,0, pclath, cstack
  1420 ;; Tracked objects:
  1421 ;;		On entry : 0/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1425 ;;      Params:         0       0       0       0       0
  1426 ;;      Locals:         0       0       0       0       0
  1427 ;;      Temps:          2       0       0       0       0
  1428 ;;      Totals:         2       0       0       0       0
  1429 ;;Total ram usage:        2 bytes
  1430 ;; Hardware stack levels used: 1
  1431 ;; Hardware stack levels required when called: 2
  1432 ;; This function calls:
  1433 ;;		_LCD_CMD
  1434 ;; This function is called by:
  1435 ;;		_config_lcd
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439                           
  1440                           ;psect for function _LCD_START
  1441  0743                     _LCD_START:
  1442  0743                     l983:	
  1443                           ;incstack = 0
  1444                           ; Regs used in _LCD_START: [wreg+status,2+status,0+pclath+cstack]
  1445                           
  1446                           
  1447                           ;lcd_8bitsA.c: 20: RD7 = 0;
  1448  0743  1283               	bcf	3,5	;RP0=0, select bank0
  1449  0744  1303               	bcf	3,6	;RP1=0, select bank0
  1450  0745  1388               	bcf	8,7	;volatile
  1451                           
  1452                           ;lcd_8bitsA.c: 21: RD6 = 0;
  1453  0746  1308               	bcf	8,6	;volatile
  1454  0747                     l985:
  1455                           
  1456                           ;lcd_8bitsA.c: 22: PORTB = 0;
  1457  0747  0186               	clrf	6	;volatile
  1458                           
  1459                           ;lcd_8bitsA.c: 23: TRISB = 0;
  1460  0748  1683               	bsf	3,5	;RP0=1, select bank1
  1461  0749  1303               	bcf	3,6	;RP1=0, select bank1
  1462  074A  0186               	clrf	6	;volatile
  1463  074B                     l987:
  1464                           
  1465                           ;lcd_8bitsA.c: 26: _delay((unsigned long)((20)*(4000000/4000.0)));
  1466  074B  301A               	movlw	26
  1467  074C  00F4               	movwf	??_LCD_START+1
  1468  074D  30F8               	movlw	248
  1469  074E  00F3               	movwf	??_LCD_START
  1470  074F                     u267:
  1471  074F  0BF3               	decfsz	??_LCD_START,f
  1472  0750  2F4F               	goto	u267
  1473  0751  0BF4               	decfsz	??_LCD_START+1,f
  1474  0752  2F4F               	goto	u267
  1475  0753  0000               	nop
  1476  0754                     l989:
  1477                           
  1478                           ;lcd_8bitsA.c: 27: LCD_CMD (0x30);
  1479  0754  3030               	movlw	48
  1480  0755  120A  118A  25AF  120A  118A  	fcall	_LCD_CMD
  1481  075A                     l991:
  1482                           
  1483                           ;lcd_8bitsA.c: 29: _delay((unsigned long)((5)*(4000000/4000.0)));
  1484  075A  3007               	movlw	7
  1485  075B  00F4               	movwf	??_LCD_START+1
  1486  075C  307D               	movlw	125
  1487  075D  00F3               	movwf	??_LCD_START
  1488  075E                     u277:
  1489  075E  0BF3               	decfsz	??_LCD_START,f
  1490  075F  2F5E               	goto	u277
  1491  0760  0BF4               	decfsz	??_LCD_START+1,f
  1492  0761  2F5E               	goto	u277
  1493  0762                     l993:
  1494                           
  1495                           ;lcd_8bitsA.c: 30: LCD_CMD (0x30);
  1496  0762  3030               	movlw	48
  1497  0763  120A  118A  25AF  120A  118A  	fcall	_LCD_CMD
  1498  0768                     l995:
  1499                           
  1500                           ;lcd_8bitsA.c: 32: _delay((unsigned long)((200)*(4000000/4000000.0)));
  1501  0768  3042               	movlw	66
  1502  0769  00F3               	movwf	??_LCD_START
  1503  076A                     u287:
  1504  076A  0BF3               	decfsz	??_LCD_START,f
  1505  076B  2F6A               	goto	u287
  1506  076C  0000               	nop
  1507  076D                     l997:
  1508                           
  1509                           ;lcd_8bitsA.c: 33: LCD_CMD (0x30);
  1510  076D  3030               	movlw	48
  1511  076E  120A  118A  25AF  120A  118A  	fcall	_LCD_CMD
  1512  0773                     l999:
  1513                           
  1514                           ;lcd_8bitsA.c: 37: LCD_CMD (0x3C);
  1515  0773  303C               	movlw	60
  1516  0774  120A  118A  25AF  120A  118A  	fcall	_LCD_CMD
  1517  0779                     l1001:
  1518                           
  1519                           ;lcd_8bitsA.c: 40: LCD_CMD (0x0C);
  1520  0779  300C               	movlw	12
  1521  077A  120A  118A  25AF  120A  118A  	fcall	_LCD_CMD
  1522  077F                     l1003:
  1523                           
  1524                           ;lcd_8bitsA.c: 43: LCD_CMD (0x10);
  1525  077F  3010               	movlw	16
  1526  0780  120A  118A  25AF  120A  118A  	fcall	_LCD_CMD
  1527  0785                     l1005:
  1528                           
  1529                           ;lcd_8bitsA.c: 46: LCD_CMD (0x01);
  1530  0785  3001               	movlw	1
  1531  0786  120A  118A  25AF  120A  118A  	fcall	_LCD_CMD
  1532  078B                     l1007:
  1533                           
  1534                           ;lcd_8bitsA.c: 49: LCD_CMD (0x06);
  1535  078B  3006               	movlw	6
  1536  078C  120A  118A  25AF  120A  118A  	fcall	_LCD_CMD
  1537  0791                     l79:
  1538  0791  0008               	return
  1539  0792                     __end_of_LCD_START:
  1540                           
  1541                           	psect	text9
  1542  05AF                     __ptext9:	
  1543 ;; *************** function _LCD_CMD *****************
  1544 ;; Defined at:
  1545 ;;		line 12 in file "lcd_8bitsA.c"
  1546 ;; Parameters:    Size  Location     Type
  1547 ;;  cmd             1    wreg     unsigned char 
  1548 ;; Auto vars:     Size  Location     Type
  1549 ;;  cmd             1    2[COMMON] unsigned char 
  1550 ;; Return value:  Size  Location     Type
  1551 ;;                  1    wreg      void 
  1552 ;; Registers used:
  1553 ;;		wreg, status,2, status,0, pclath, cstack
  1554 ;; Tracked objects:
  1555 ;;		On entry : 0/0
  1556 ;;		On exit  : 0/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1559 ;;      Params:         0       0       0       0       0
  1560 ;;      Locals:         1       0       0       0       0
  1561 ;;      Temps:          0       0       0       0       0
  1562 ;;      Totals:         1       0       0       0       0
  1563 ;;Total ram usage:        1 bytes
  1564 ;; Hardware stack levels used: 1
  1565 ;; Hardware stack levels required when called: 1
  1566 ;; This function calls:
  1567 ;;		_flip_EN
  1568 ;; This function is called by:
  1569 ;;		_LCD_START
  1570 ;;		_LCD_setCursor
  1571 ;;		_LCD_CLR
  1572 ;;		_LCD_shiftR
  1573 ;;		_LCD_shiftL
  1574 ;; This function uses a non-reentrant model
  1575 ;;
  1576                           
  1577                           
  1578                           ;psect for function _LCD_CMD
  1579  05AF                     _LCD_CMD:
  1580                           
  1581                           ;incstack = 0
  1582                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  1583                           ;LCD_CMD@cmd stored from wreg
  1584  05AF  00F2               	movwf	LCD_CMD@cmd
  1585  05B0                     l965:
  1586                           
  1587                           ;lcd_8bitsA.c: 13: RD6 = 0;
  1588  05B0  1283               	bcf	3,5	;RP0=0, select bank0
  1589  05B1  1303               	bcf	3,6	;RP1=0, select bank0
  1590  05B2  1308               	bcf	8,6	;volatile
  1591  05B3                     l967:
  1592                           
  1593                           ;lcd_8bitsA.c: 14: PORTB = cmd;
  1594  05B3  0872               	movf	LCD_CMD@cmd,w
  1595  05B4  0086               	movwf	6	;volatile
  1596  05B5                     l969:
  1597                           
  1598                           ;lcd_8bitsA.c: 15: flip_EN ();
  1599  05B5  120A  118A  25D7  120A  118A  	fcall	_flip_EN
  1600  05BA                     l76:
  1601  05BA  0008               	return
  1602  05BB                     __end_of_LCD_CMD:
  1603                           
  1604                           	psect	text10
  1605  05D7                     __ptext10:	
  1606 ;; *************** function _flip_EN *****************
  1607 ;; Defined at:
  1608 ;;		line 5 in file "lcd_8bitsA.c"
  1609 ;; Parameters:    Size  Location     Type
  1610 ;;		None
  1611 ;; Auto vars:     Size  Location     Type
  1612 ;;		None
  1613 ;; Return value:  Size  Location     Type
  1614 ;;                  1    wreg      void 
  1615 ;; Registers used:
  1616 ;;		wreg
  1617 ;; Tracked objects:
  1618 ;;		On entry : 0/0
  1619 ;;		On exit  : 0/0
  1620 ;;		Unchanged: 0/0
  1621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1622 ;;      Params:         0       0       0       0       0
  1623 ;;      Locals:         0       0       0       0       0
  1624 ;;      Temps:          2       0       0       0       0
  1625 ;;      Totals:         2       0       0       0       0
  1626 ;;Total ram usage:        2 bytes
  1627 ;; Hardware stack levels used: 1
  1628 ;; This function calls:
  1629 ;;		Nothing
  1630 ;; This function is called by:
  1631 ;;		_LCD_CMD
  1632 ;;		_LCD_write
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636                           
  1637                           ;psect for function _flip_EN
  1638  05D7                     _flip_EN:
  1639  05D7                     l959:	
  1640                           ;incstack = 0
  1641                           ; Regs used in _flip_EN: [wreg]
  1642                           
  1643                           
  1644                           ;lcd_8bitsA.c: 6: RD7 = 1;
  1645  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  1646  05D8  1303               	bcf	3,6	;RP1=0, select bank0
  1647  05D9  1788               	bsf	8,7	;volatile
  1648  05DA                     l961:
  1649                           
  1650                           ;lcd_8bitsA.c: 7: _delay((unsigned long)((5)*(4000000/4000.0)));
  1651  05DA  3007               	movlw	7
  1652  05DB  00F1               	movwf	??_flip_EN+1
  1653  05DC  307D               	movlw	125
  1654  05DD  00F0               	movwf	??_flip_EN
  1655  05DE                     u297:
  1656  05DE  0BF0               	decfsz	??_flip_EN,f
  1657  05DF  2DDE               	goto	u297
  1658  05E0  0BF1               	decfsz	??_flip_EN+1,f
  1659  05E1  2DDE               	goto	u297
  1660  05E2                     l963:
  1661                           
  1662                           ;lcd_8bitsA.c: 8: RD7 = 0;
  1663  05E2  1283               	bcf	3,5	;RP0=0, select bank0
  1664  05E3  1303               	bcf	3,6	;RP1=0, select bank0
  1665  05E4  1388               	bcf	8,7	;volatile
  1666  05E5                     l73:
  1667  05E5  0008               	return
  1668  05E6                     __end_of_flip_EN:
  1669                           
  1670                           	psect	text11
  1671  05C8                     __ptext11:	
  1672 ;; *************** function _config_io *****************
  1673 ;; Defined at:
  1674 ;;		line 121 in file "C:/Users/nicou/OneDrive/Documents/2022/1er_semestre/Digital_2/MiniProy2/MP2-Maestro.X/main.c"
  1675 ;; Parameters:    Size  Location     Type
  1676 ;;		None
  1677 ;; Auto vars:     Size  Location     Type
  1678 ;;		None
  1679 ;; Return value:  Size  Location     Type
  1680 ;;                  1    wreg      void 
  1681 ;; Registers used:
  1682 ;;		status,2
  1683 ;; Tracked objects:
  1684 ;;		On entry : 0/0
  1685 ;;		On exit  : 0/0
  1686 ;;		Unchanged: 0/0
  1687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1688 ;;      Params:         0       0       0       0       0
  1689 ;;      Locals:         0       0       0       0       0
  1690 ;;      Temps:          0       0       0       0       0
  1691 ;;      Totals:         0       0       0       0       0
  1692 ;;Total ram usage:        0 bytes
  1693 ;; Hardware stack levels used: 1
  1694 ;; This function calls:
  1695 ;;		Nothing
  1696 ;; This function is called by:
  1697 ;;		_setup
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701                           
  1702                           ;psect for function _config_io
  1703  05C8                     _config_io:
  1704  05C8                     l1057:	
  1705                           ;incstack = 0
  1706                           ; Regs used in _config_io: [status,2]
  1707                           
  1708                           
  1709                           ;main.c: 122: ANSEL = 0;
  1710  05C8  1683               	bsf	3,5	;RP0=1, select bank3
  1711  05C9  1703               	bsf	3,6	;RP1=1, select bank3
  1712  05CA  0188               	clrf	8	;volatile
  1713                           
  1714                           ;main.c: 123: ANSELH = 0;
  1715  05CB  0189               	clrf	9	;volatile
  1716                           
  1717                           ;main.c: 125: TRISA = 0;
  1718  05CC  1683               	bsf	3,5	;RP0=1, select bank1
  1719  05CD  1303               	bcf	3,6	;RP1=0, select bank1
  1720  05CE  0185               	clrf	5	;volatile
  1721                           
  1722                           ;main.c: 126: TRISB = 0;
  1723  05CF  0186               	clrf	6	;volatile
  1724                           
  1725                           ;main.c: 127: TRISD = 0;
  1726  05D0  0188               	clrf	8	;volatile
  1727                           
  1728                           ;main.c: 129: PORTA = 0;
  1729  05D1  1283               	bcf	3,5	;RP0=0, select bank0
  1730  05D2  1303               	bcf	3,6	;RP1=0, select bank0
  1731  05D3  0185               	clrf	5	;volatile
  1732                           
  1733                           ;main.c: 130: PORTB = 0;
  1734  05D4  0186               	clrf	6	;volatile
  1735                           
  1736                           ;main.c: 131: PORTD = 0;
  1737  05D5  0188               	clrf	8	;volatile
  1738  05D6                     l54:
  1739  05D6  0008               	return
  1740  05D7                     __end_of_config_io:
  1741                           
  1742                           	psect	text12
  1743  058A                     __ptext12:	
  1744 ;; *************** function _config_clock *****************
  1745 ;; Defined at:
  1746 ;;		line 136 in file "C:/Users/nicou/OneDrive/Documents/2022/1er_semestre/Digital_2/MiniProy2/MP2-Maestro.X/main.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;		None
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;		None
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  1    wreg      void 
  1753 ;; Registers used:
  1754 ;;		wreg, status,2, status,0
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1760 ;;      Params:         0       0       0       0       0
  1761 ;;      Locals:         0       0       0       0       0
  1762 ;;      Temps:          0       0       0       0       0
  1763 ;;      Totals:         0       0       0       0       0
  1764 ;;Total ram usage:        0 bytes
  1765 ;; Hardware stack levels used: 1
  1766 ;; This function calls:
  1767 ;;		Nothing
  1768 ;; This function is called by:
  1769 ;;		_setup
  1770 ;; This function uses a non-reentrant model
  1771 ;;
  1772                           
  1773                           
  1774                           ;psect for function _config_clock
  1775  058A                     _config_clock:
  1776  058A                     l1059:	
  1777                           ;incstack = 0
  1778                           ; Regs used in _config_clock: [wreg+status,2+status,0]
  1779                           
  1780                           
  1781                           ;main.c: 137: OSCCONbits.IRCF = 0b110;
  1782  058A  1683               	bsf	3,5	;RP0=1, select bank1
  1783  058B  1303               	bcf	3,6	;RP1=0, select bank1
  1784  058C  080F               	movf	15,w	;volatile
  1785  058D  398F               	andlw	-113
  1786  058E  3860               	iorlw	96
  1787  058F  008F               	movwf	15	;volatile
  1788  0590                     l1061:
  1789                           
  1790                           ;main.c: 138: OSCCONbits.SCS = 1;
  1791  0590  140F               	bsf	15,0	;volatile
  1792  0591                     l57:
  1793  0591  0008               	return
  1794  0592                     __end_of_config_clock:
  1795                           
  1796                           	psect	text13
  1797  065D                     __ptext13:	
  1798 ;; *************** function _i2c_MR *****************
  1799 ;; Defined at:
  1800 ;;		line 83 in file "C:/Users/nicou/OneDrive/Documents/2022/1er_semestre/Digital_2/MiniProy2/MP2-Maestro.X/i2c.c"
  1801 ;; Parameters:    Size  Location     Type
  1802 ;;  address         1    wreg     unsigned char 
  1803 ;;  value           1    6[COMMON] PTR unsigned char 
  1804 ;;		 -> data(2), 
  1805 ;; Auto vars:     Size  Location     Type
  1806 ;;  address         1    8[COMMON] unsigned char 
  1807 ;;  temp            1    9[COMMON] unsigned char 
  1808 ;; Return value:  Size  Location     Type
  1809 ;;                  1    wreg      void 
  1810 ;; Registers used:
  1811 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1812 ;; Tracked objects:
  1813 ;;		On entry : 0/0
  1814 ;;		On exit  : 0/0
  1815 ;;		Unchanged: 0/0
  1816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1817 ;;      Params:         1       0       0       0       0
  1818 ;;      Locals:         2       0       0       0       0
  1819 ;;      Temps:          1       0       0       0       0
  1820 ;;      Totals:         4       0       0       0       0
  1821 ;;Total ram usage:        4 bytes
  1822 ;; Hardware stack levels used: 1
  1823 ;; Hardware stack levels required when called: 2
  1824 ;; This function calls:
  1825 ;;		_i2c_MasterRead
  1826 ;;		_i2c_MasterSS
  1827 ;;		_i2c_MasterStart
  1828 ;;		_i2c_MasterStop
  1829 ;; This function is called by:
  1830 ;;		_main
  1831 ;; This function uses a non-reentrant model
  1832 ;;
  1833                           
  1834                           
  1835                           ;psect for function _i2c_MR
  1836  065D                     _i2c_MR:
  1837                           
  1838                           ;incstack = 0
  1839                           ; Regs used in _i2c_MR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1840                           ;i2c_MR@address stored from wreg
  1841  065D  00F8               	movwf	i2c_MR@address
  1842  065E                     l1123:
  1843                           
  1844                           ;i2c.c: 84: uint8_t temp;;i2c.c: 85: temp = address;
  1845  065E  0878               	movf	i2c_MR@address,w
  1846  065F  00F7               	movwf	??_i2c_MR
  1847  0660  0877               	movf	??_i2c_MR,w
  1848  0661  00F9               	movwf	i2c_MR@temp
  1849  0662                     l1125:
  1850                           
  1851                           ;i2c.c: 86: temp |= 0b1;
  1852  0662  1479               	bsf	i2c_MR@temp,0
  1853  0663                     l1127:
  1854                           
  1855                           ;i2c.c: 87: i2c_MasterStart();
  1856  0663  120A  118A  2592  120A  118A  	fcall	_i2c_MasterStart
  1857  0668                     l1129:
  1858                           
  1859                           ;i2c.c: 88: i2c_MasterSS(temp);
  1860  0668  0879               	movf	i2c_MR@temp,w
  1861  0669  120A  118A  25A4  120A  118A  	fcall	_i2c_MasterSS
  1862  066E                     l1131:
  1863                           
  1864                           ;i2c.c: 89: *value = i2c_MasterRead(0);
  1865  066E  3000               	movlw	0
  1866  066F  00F0               	movwf	i2c_MasterRead@d
  1867  0670  00F1               	movwf	i2c_MasterRead@d+1
  1868  0671  120A  118A  26D7  120A  118A  	fcall	_i2c_MasterRead
  1869  0676  0870               	movf	?_i2c_MasterRead,w
  1870  0677  00F7               	movwf	??_i2c_MR
  1871  0678  0876               	movf	i2c_MR@value,w
  1872  0679  0084               	movwf	4
  1873  067A  0877               	movf	??_i2c_MR,w
  1874  067B  1383               	bcf	3,7	;select IRP bank0
  1875  067C  0080               	movwf	0
  1876  067D                     l1133:
  1877                           
  1878                           ;i2c.c: 90: i2c_MasterStop();
  1879  067D  120A  118A  259B  120A  118A  	fcall	_i2c_MasterStop
  1880  0682                     l156:
  1881  0682  0008               	return
  1882  0683                     __end_of_i2c_MR:
  1883                           
  1884                           	psect	text14
  1885  059B                     __ptext14:	
  1886 ;; *************** function _i2c_MasterStop *****************
  1887 ;; Defined at:
  1888 ;;		line 38 in file "C:/Users/nicou/OneDrive/Documents/2022/1er_semestre/Digital_2/MiniProy2/MP2-Maestro.X/i2c.c"
  1889 ;; Parameters:    Size  Location     Type
  1890 ;;		None
  1891 ;; Auto vars:     Size  Location     Type
  1892 ;;		None
  1893 ;; Return value:  Size  Location     Type
  1894 ;;                  1    wreg      void 
  1895 ;; Registers used:
  1896 ;;		wreg, status,2, status,0, pclath, cstack
  1897 ;; Tracked objects:
  1898 ;;		On entry : 0/0
  1899 ;;		On exit  : 0/0
  1900 ;;		Unchanged: 0/0
  1901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1902 ;;      Params:         0       0       0       0       0
  1903 ;;      Locals:         0       0       0       0       0
  1904 ;;      Temps:          0       0       0       0       0
  1905 ;;      Totals:         0       0       0       0       0
  1906 ;;Total ram usage:        0 bytes
  1907 ;; Hardware stack levels used: 1
  1908 ;; Hardware stack levels required when called: 1
  1909 ;; This function calls:
  1910 ;;		_i2c_MasterWait
  1911 ;; This function is called by:
  1912 ;;		_i2c_MR
  1913 ;;		_i2c_MW
  1914 ;; This function uses a non-reentrant model
  1915 ;;
  1916                           
  1917                           
  1918                           ;psect for function _i2c_MasterStop
  1919  059B                     _i2c_MasterStop:
  1920  059B                     l1091:	
  1921                           ;incstack = 0
  1922                           ; Regs used in _i2c_MasterStop: [wreg+status,2+status,0+pclath+cstack]
  1923                           
  1924                           
  1925                           ;i2c.c: 39: i2c_MasterWait();
  1926  059B  120A  118A  25BB  120A  118A  	fcall	_i2c_MasterWait
  1927  05A0                     l1093:
  1928                           
  1929                           ;i2c.c: 40: SSPCON2bits.PEN = 1;
  1930  05A0  1683               	bsf	3,5	;RP0=1, select bank1
  1931  05A1  1303               	bcf	3,6	;RP1=0, select bank1
  1932  05A2  1511               	bsf	17,2	;volatile
  1933  05A3                     l139:
  1934  05A3  0008               	return
  1935  05A4                     __end_of_i2c_MasterStop:
  1936                           
  1937                           	psect	text15
  1938  0592                     __ptext15:	
  1939 ;; *************** function _i2c_MasterStart *****************
  1940 ;; Defined at:
  1941 ;;		line 28 in file "C:/Users/nicou/OneDrive/Documents/2022/1er_semestre/Digital_2/MiniProy2/MP2-Maestro.X/i2c.c"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;		None
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;		None
  1946 ;; Return value:  Size  Location     Type
  1947 ;;                  1    wreg      void 
  1948 ;; Registers used:
  1949 ;;		wreg, status,2, status,0, pclath, cstack
  1950 ;; Tracked objects:
  1951 ;;		On entry : 0/0
  1952 ;;		On exit  : 0/0
  1953 ;;		Unchanged: 0/0
  1954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1955 ;;      Params:         0       0       0       0       0
  1956 ;;      Locals:         0       0       0       0       0
  1957 ;;      Temps:          0       0       0       0       0
  1958 ;;      Totals:         0       0       0       0       0
  1959 ;;Total ram usage:        0 bytes
  1960 ;; Hardware stack levels used: 1
  1961 ;; Hardware stack levels required when called: 1
  1962 ;; This function calls:
  1963 ;;		_i2c_MasterWait
  1964 ;; This function is called by:
  1965 ;;		_i2c_MR
  1966 ;;		_i2c_MW
  1967 ;; This function uses a non-reentrant model
  1968 ;;
  1969                           
  1970                           
  1971                           ;psect for function _i2c_MasterStart
  1972  0592                     _i2c_MasterStart:
  1973  0592                     l1087:	
  1974                           ;incstack = 0
  1975                           ; Regs used in _i2c_MasterStart: [wreg+status,2+status,0+pclath+cstack]
  1976                           
  1977                           
  1978                           ;i2c.c: 29: i2c_MasterWait();
  1979  0592  120A  118A  25BB  120A  118A  	fcall	_i2c_MasterWait
  1980  0597                     l1089:
  1981                           
  1982                           ;i2c.c: 30: SSPCON2bits.SEN = 1;
  1983  0597  1683               	bsf	3,5	;RP0=1, select bank1
  1984  0598  1303               	bcf	3,6	;RP1=0, select bank1
  1985  0599  1411               	bsf	17,0	;volatile
  1986  059A                     l133:
  1987  059A  0008               	return
  1988  059B                     __end_of_i2c_MasterStart:
  1989                           
  1990                           	psect	text16
  1991  05A4                     __ptext16:	
  1992 ;; *************** function _i2c_MasterSS *****************
  1993 ;; Defined at:
  1994 ;;		line 43 in file "C:/Users/nicou/OneDrive/Documents/2022/1er_semestre/Digital_2/MiniProy2/MP2-Maestro.X/i2c.c"
  1995 ;; Parameters:    Size  Location     Type
  1996 ;;  address         1    wreg     unsigned char 
  1997 ;; Auto vars:     Size  Location     Type
  1998 ;;  address         1    0[COMMON] unsigned char 
  1999 ;; Return value:  Size  Location     Type
  2000 ;;                  1    wreg      void 
  2001 ;; Registers used:
  2002 ;;		wreg, status,2, status,0, pclath, cstack
  2003 ;; Tracked objects:
  2004 ;;		On entry : 0/0
  2005 ;;		On exit  : 0/0
  2006 ;;		Unchanged: 0/0
  2007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2008 ;;      Params:         0       0       0       0       0
  2009 ;;      Locals:         1       0       0       0       0
  2010 ;;      Temps:          0       0       0       0       0
  2011 ;;      Totals:         1       0       0       0       0
  2012 ;;Total ram usage:        1 bytes
  2013 ;; Hardware stack levels used: 1
  2014 ;; Hardware stack levels required when called: 1
  2015 ;; This function calls:
  2016 ;;		_i2c_MasterWait
  2017 ;; This function is called by:
  2018 ;;		_i2c_MR
  2019 ;;		_i2c_MW
  2020 ;; This function uses a non-reentrant model
  2021 ;;
  2022                           
  2023                           
  2024                           ;psect for function _i2c_MasterSS
  2025  05A4                     _i2c_MasterSS:
  2026                           
  2027                           ;incstack = 0
  2028                           ; Regs used in _i2c_MasterSS: [wreg+status,2+status,0+pclath+cstack]
  2029                           ;i2c_MasterSS@address stored from wreg
  2030  05A4  00F0               	movwf	i2c_MasterSS@address
  2031  05A5                     l1095:
  2032                           
  2033                           ;i2c.c: 44: i2c_MasterWait();
  2034  05A5  120A  118A  25BB  120A  118A  	fcall	_i2c_MasterWait
  2035  05AA                     l1097:
  2036                           
  2037                           ;i2c.c: 45: SSPBUF = address;
  2038  05AA  0870               	movf	i2c_MasterSS@address,w
  2039  05AB  1283               	bcf	3,5	;RP0=0, select bank0
  2040  05AC  1303               	bcf	3,6	;RP1=0, select bank0
  2041  05AD  0093               	movwf	19	;volatile
  2042  05AE                     l142:
  2043  05AE  0008               	return
  2044  05AF                     __end_of_i2c_MasterSS:
  2045                           
  2046                           	psect	text17
  2047  06D7                     __ptext17:	
  2048 ;; *************** function _i2c_MasterRead *****************
  2049 ;; Defined at:
  2050 ;;		line 56 in file "C:/Users/nicou/OneDrive/Documents/2022/1er_semestre/Digital_2/MiniProy2/MP2-Maestro.X/i2c.c"
  2051 ;; Parameters:    Size  Location     Type
  2052 ;;  d               2    0[COMMON] unsigned short 
  2053 ;; Auto vars:     Size  Location     Type
  2054 ;;  temp            2    4[COMMON] unsigned short 
  2055 ;; Return value:  Size  Location     Type
  2056 ;;                  2    0[COMMON] unsigned short 
  2057 ;; Registers used:
  2058 ;;		wreg, status,2, status,0, pclath, cstack
  2059 ;; Tracked objects:
  2060 ;;		On entry : 0/0
  2061 ;;		On exit  : 0/0
  2062 ;;		Unchanged: 0/0
  2063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2064 ;;      Params:         2       0       0       0       0
  2065 ;;      Locals:         2       0       0       0       0
  2066 ;;      Temps:          2       0       0       0       0
  2067 ;;      Totals:         6       0       0       0       0
  2068 ;;Total ram usage:        6 bytes
  2069 ;; Hardware stack levels used: 1
  2070 ;; Hardware stack levels required when called: 1
  2071 ;; This function calls:
  2072 ;;		_i2c_MasterWait
  2073 ;; This function is called by:
  2074 ;;		_i2c_MR
  2075 ;; This function uses a non-reentrant model
  2076 ;;
  2077                           
  2078                           
  2079                           ;psect for function _i2c_MasterRead
  2080  06D7                     _i2c_MasterRead:
  2081  06D7                     l1099:	
  2082                           ;incstack = 0
  2083                           ; Regs used in _i2c_MasterRead: [wreg+status,2+status,0+pclath+cstack]
  2084                           
  2085                           
  2086                           ;i2c.c: 57: unsigned short temp;;i2c.c: 58: i2c_MasterWait();
  2087  06D7  120A  118A  25BB  120A  118A  	fcall	_i2c_MasterWait
  2088  06DC                     l1101:
  2089                           
  2090                           ;i2c.c: 59: SSPCON2bits.RCEN = 1;
  2091  06DC  1683               	bsf	3,5	;RP0=1, select bank1
  2092  06DD  1303               	bcf	3,6	;RP1=0, select bank1
  2093  06DE  1591               	bsf	17,3	;volatile
  2094                           
  2095                           ;i2c.c: 61: i2c_MasterWait();
  2096  06DF  120A  118A  25BB  120A  118A  	fcall	_i2c_MasterWait
  2097  06E4                     l1103:
  2098                           
  2099                           ;i2c.c: 62: temp = SSPBUF;
  2100  06E4  1283               	bcf	3,5	;RP0=0, select bank0
  2101  06E5  1303               	bcf	3,6	;RP1=0, select bank0
  2102  06E6  0813               	movf	19,w	;volatile
  2103  06E7  00F2               	movwf	??_i2c_MasterRead
  2104  06E8  01F3               	clrf	??_i2c_MasterRead+1
  2105  06E9  0872               	movf	??_i2c_MasterRead,w
  2106  06EA  00F4               	movwf	i2c_MasterRead@temp
  2107  06EB  0873               	movf	??_i2c_MasterRead+1,w
  2108  06EC  00F5               	movwf	i2c_MasterRead@temp+1
  2109  06ED                     l1105:
  2110                           
  2111                           ;i2c.c: 64: i2c_MasterWait();
  2112  06ED  120A  118A  25BB  120A  118A  	fcall	_i2c_MasterWait
  2113  06F2                     l1107:
  2114                           
  2115                           ;i2c.c: 65: if (d==1){
  2116  06F2  0370               	decf	i2c_MasterRead@d,w
  2117  06F3  0471               	iorwf	i2c_MasterRead@d+1,w
  2118  06F4  1D03               	btfss	3,2
  2119  06F5  2EF7               	goto	u241
  2120  06F6  2EF8               	goto	u240
  2121  06F7                     u241:
  2122  06F7  2EFC               	goto	l148
  2123  06F8                     u240:
  2124  06F8                     l1109:
  2125                           
  2126                           ;i2c.c: 66: SSPCON2bits.ACKDT = 0;
  2127  06F8  1683               	bsf	3,5	;RP0=1, select bank1
  2128  06F9  1303               	bcf	3,6	;RP1=0, select bank1
  2129  06FA  1291               	bcf	17,5	;volatile
  2130                           
  2131                           ;i2c.c: 67: }
  2132  06FB  2EFF               	goto	l149
  2133  06FC                     l148:
  2134                           
  2135                           ;i2c.c: 69: else {;i2c.c: 70: SSPCON2bits.ACKDT = 1;
  2136  06FC  1683               	bsf	3,5	;RP0=1, select bank1
  2137  06FD  1303               	bcf	3,6	;RP1=0, select bank1
  2138  06FE  1691               	bsf	17,5	;volatile
  2139  06FF                     l149:
  2140                           
  2141                           ;i2c.c: 71: };i2c.c: 72: SSPCON2bits.ACKEN = 1;
  2142  06FF  1611               	bsf	17,4	;volatile
  2143  0700                     l1111:
  2144                           
  2145                           ;i2c.c: 73: return temp;
  2146  0700  0875               	movf	i2c_MasterRead@temp+1,w
  2147  0701  00F1               	movwf	?_i2c_MasterRead+1
  2148  0702  0874               	movf	i2c_MasterRead@temp,w
  2149  0703  00F0               	movwf	?_i2c_MasterRead
  2150  0704                     l150:
  2151  0704  0008               	return
  2152  0705                     __end_of_i2c_MasterRead:
  2153                           
  2154                           	psect	text18
  2155  05BB                     __ptext18:	
  2156 ;; *************** function _i2c_MasterWait *****************
  2157 ;; Defined at:
  2158 ;;		line 24 in file "C:/Users/nicou/OneDrive/Documents/2022/1er_semestre/Digital_2/MiniProy2/MP2-Maestro.X/i2c.c"
  2159 ;; Parameters:    Size  Location     Type
  2160 ;;		None
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;		None
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  1    wreg      void 
  2165 ;; Registers used:
  2166 ;;		wreg, status,2
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2172 ;;      Params:         0       0       0       0       0
  2173 ;;      Locals:         0       0       0       0       0
  2174 ;;      Temps:          0       0       0       0       0
  2175 ;;      Totals:         0       0       0       0       0
  2176 ;;Total ram usage:        0 bytes
  2177 ;; Hardware stack levels used: 1
  2178 ;; This function calls:
  2179 ;;		Nothing
  2180 ;; This function is called by:
  2181 ;;		_i2c_MasterStart
  2182 ;;		_i2c_MasterStop
  2183 ;;		_i2c_MasterSS
  2184 ;;		_i2c_MasterRead
  2185 ;;		_i2c_Master_RepeatStart
  2186 ;;		_i2c_MasterWrite
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190                           
  2191                           ;psect for function _i2c_MasterWait
  2192  05BB                     _i2c_MasterWait:
  2193  05BB                     l1029:	
  2194                           ;incstack = 0
  2195                           ; Regs used in _i2c_MasterWait: [wreg+status,2]
  2196                           
  2197  05BB                     l127:	
  2198                           ;i2c.c: 25: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2199                           
  2200  05BB  1683               	bsf	3,5	;RP0=1, select bank1
  2201  05BC  1303               	bcf	3,6	;RP1=0, select bank1
  2202  05BD  1914               	btfsc	20,2	;volatile
  2203  05BE  2DC0               	goto	u141
  2204  05BF  2DC1               	goto	u140
  2205  05C0                     u141:
  2206  05C0  2DBB               	goto	l127
  2207  05C1                     u140:
  2208  05C1                     l1031:
  2209  05C1  0811               	movf	17,w	;volatile
  2210  05C2  391F               	andlw	31
  2211  05C3  1D03               	btfss	3,2
  2212  05C4  2DC6               	goto	u151
  2213  05C5  2DC7               	goto	u150
  2214  05C6                     u151:
  2215  05C6  2DBB               	goto	l127
  2216  05C7                     u150:
  2217  05C7                     l130:
  2218  05C7  0008               	return
  2219  05C8                     __end_of_i2c_MasterWait:
  2220  007E                     btemp	set	126	;btemp
  2221  007E                     wtemp0	set	126
  2222                           
  2223                           	psect	config
  2224                           
  2225                           ;Config register CONFIG1 @ 0x2007
  2226                           ;	Oscillator Selection bits
  2227                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2228                           ;	Watchdog Timer Enable bit
  2229                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2230                           ;	Power-up Timer Enable bit
  2231                           ;	PWRTE = OFF, PWRT disabled
  2232                           ;	RE3/MCLR pin function select bit
  2233                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2234                           ;	Code Protection bit
  2235                           ;	CP = OFF, Program memory code protection is disabled
  2236                           ;	Data Code Protection bit
  2237                           ;	CPD = OFF, Data memory code protection is disabled
  2238                           ;	Brown Out Reset Selection bits
  2239                           ;	BOREN = OFF, BOR disabled
  2240                           ;	Internal External Switchover bit
  2241                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2242                           ;	Fail-Safe Clock Monitor Enabled bit
  2243                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2244                           ;	Low Voltage Programming Enable bit
  2245                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2246                           ;	In-Circuit Debugger Mode bit
  2247                           ;	DEBUG = 0x1, unprogrammed default
  2248  2007                     	org	8199
  2249  2007  20D4               	dw	8404
  2250                           
  2251                           ;Config register CONFIG2 @ 0x2008
  2252                           ;	Brown-out Reset Selection bit
  2253                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2254                           ;	Flash Program Memory Self Write Enable bits
  2255                           ;	WRT = OFF, Write protection off
  2256  2008                     	org	8200
  2257  2008  3FFF               	dw	16383

Data Sizes:
    Strings     15
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     11      13
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    i2c_MR@value	PTR unsigned char  size(1) Largest target is 2
		 -> data(BANK0[2]), 

    LCD_writeString@text	PTR unsigned char  size(1) Largest target is 9
		 -> STR_2(CODE[9]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _i2c_MasterInit->___lldiv
    _config_lcd->_LCD_writeString
    _LCD_writeString->_LCD_write
    _LCD_write->_flip_EN
    _LCD_setCursor->_LCD_CMD
    _LCD_START->_LCD_CMD
    _LCD_CMD->_flip_EN
    _i2c_MR->_i2c_MasterRead

Critical Paths under _main in BANK0

    _setup->_i2c_MasterInit

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1161
                                              8 BANK0      3     3      0
                             _i2c_MR
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     874
                       _config_clock
                          _config_io
                         _config_lcd
                     _i2c_MasterInit
 ---------------------------------------------------------------------------------
 (2) _i2c_MasterInit                                       8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) _config_lcd                                           1     1      0     462
                                              6 COMMON     1     1      0
                          _LCD_START
                      _LCD_setCursor
                    _LCD_writeString
 ---------------------------------------------------------------------------------
 (3) _LCD_writeString                                      3     3      0     178
                                              3 COMMON     3     3      0
                          _LCD_write
 ---------------------------------------------------------------------------------
 (4) _LCD_write                                            1     1      0      22
                                              2 COMMON     1     1      0
                            _flip_EN
 ---------------------------------------------------------------------------------
 (3) _LCD_setCursor                                        2     1      1     262
                                              3 COMMON     2     1      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _LCD_START                                            2     2      0      22
                                              3 COMMON     2     2      0
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (4) _LCD_CMD                                              1     1      0      22
                                              2 COMMON     1     1      0
                            _flip_EN
 ---------------------------------------------------------------------------------
 (5) _flip_EN                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _config_io                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_clock                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_MR                                               4     3      1     287
                                              6 COMMON     4     3      1
                     _i2c_MasterRead
                       _i2c_MasterSS
                    _i2c_MasterStart
                     _i2c_MasterStop
 ---------------------------------------------------------------------------------
 (2) _i2c_MasterStop                                       0     0      0       0
                     _i2c_MasterWait
 ---------------------------------------------------------------------------------
 (2) _i2c_MasterStart                                      0     0      0       0
                     _i2c_MasterWait
 ---------------------------------------------------------------------------------
 (2) _i2c_MasterSS                                         1     1      0      22
                                              0 COMMON     1     1      0
                     _i2c_MasterWait
 ---------------------------------------------------------------------------------
 (2) _i2c_MasterRead                                       6     4      2     121
                                              0 COMMON     6     4      2
                     _i2c_MasterWait
 ---------------------------------------------------------------------------------
 (3) _i2c_MasterWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _i2c_MR
     _i2c_MasterRead
       _i2c_MasterWait
     _i2c_MasterSS
       _i2c_MasterWait
     _i2c_MasterStart
       _i2c_MasterWait
     _i2c_MasterStop
       _i2c_MasterWait
   _setup
     _config_clock
     _config_io
     _config_lcd
       _LCD_START
         _LCD_CMD
           _flip_EN
       _LCD_setCursor
         _LCD_CMD
       _LCD_writeString
         _LCD_write
           _flip_EN
     _i2c_MasterInit
       ___lldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      B       D       5       16.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1B      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Mar 06 22:57:36 2022

                       pc 0002                        l51 0613                        l60 0637  
                      l54 05D6                        l57 0591                        l73 05E5  
                      l90 06AB                        l76 05BA                        l93 05F4  
                      l79 0791                        l99 065C                        fsr 0004  
                     l130 05C7                       l124 0742                       l133 059A  
                     l150 0704                       l142 05AE                       l127 05BB  
                     l139 05A3                       l148 06FC                       l156 0682  
                     l149 06FF                       l281 07F7                       l961 05DA  
                     l963 05E2                       l965 05B0                       l973 05E7  
                     l959 05D7                       l967 05B3                       l991 075A  
                     l983 0743                       l975 05EA                       l969 05B5  
                     l993 0762                       l985 0747                       l977 05EC  
                     l995 0768                       l987 074B                       l979 05F1  
                     l997 076D                       l989 0754                       l999 0773  
                     _RD6 0046                       _RD7 0047                       u200 07D1  
                     u201 07D0                       u130 065C                       u131 065B  
                     u140 05C1                       u220 07EF                       u141 05C0  
                     u221 07EE                       u205 07CD                       u150 05C7  
                     u230 0723                       u151 05C6                       u215 07E1  
                     u240 06F8                       u160 07A2                       u241 06F7  
                     u161 07A1                       u235 071E                       u180 07B6  
                     u181 07B5                       u175 07A7                       u257 06C9  
                     u267 074F                       u195 07B8                       u277 075E  
                     u287 076A                       u297 05DE                       fsr0 0004  
                     indf 0000           __end_of_LCD_CMD 05BB                      l1001 0779  
                    l1003 077F                      l1011 0685                      l1101 06DC  
                    l1005 0785                      l1013 068F                      l1021 0639  
                    l1031 05C1                      l1111 0700                      l1103 06E4  
                    l1007 078B                      l1015 0699                      l1023 063C  
                    l1105 06ED                      l1009 0684                      l1025 0649  
                    l1041 07B6                      l1033 0792                      l1121 0604  
                    l1107 06F2                      l1131 066E                      l1123 065E  
                    l1019 06A3                      l1027 064F                      l1051 07E9  
                    l1043 07BF                      l1035 07A2                      l1115 05F5  
                    l1029 05BB                      l1109 06F8                      l1133 067D  
                    l1125 0662                      l1061 0590                      l1045 07D1  
                    l1037 07A5                      l1053 07EF                      l1117 05FA  
                    l1141 06B1                      l1127 0663                      l1071 0631  
                    l1063 0614                      l1047 07DF                      l1039 07B2  
                    l1119 05FF                      l1143 06B7                      l1129 0668  
                    l1057 05C8                      l1065 0619                      l1049 07E0  
                    l1081 0713                      l1073 0705                      l1091 059B  
                    l1059 058A                      l1067 0621                      l1083 0740  
                    l1075 0709                      l1139 06AC                      l1093 05A0  
                    l1069 0627                      l1085 0741                      l1077 070C  
                    l1095 05A5                      l1087 0592                      l1079 0710  
                    l1097 05AA                      l1089 0597                      l1099 06D7  
                    STR_1 0012                      STR_2 0009        __size_of_LCD_START 004F  
          ??_i2c_MasterSS 0070                      _data 002B                      _main 06AC  
                    btemp 007E    __size_of_LCD_setCursor 0029            ??_config_clock 0070  
                    start 0000          ?_LCD_writeString 0070        __size_of_LCD_write 000F  
                   ?_main 0070                     _ANSEL 0188           __end_of___lldiv 07F8  
                   _PORTA 0005                     _PORTB 0006                     _PORTD 0008  
                   _TRISA 0085                     _TRISB 0086                     _TRISD 0088  
         __end_of_flip_EN 05E6                     _setup 05F5                     pclath 000A  
                   status 0003                     wtemp0 007E           __initialization 07F8  
            __end_of_main 06D7                    ??_main 0028         __end_of_LCD_START 0792  
           _LCD_setCursor 0683                 ??_LCD_CMD 0072         __end_of_LCD_write 05F5  
                  ?_setup 0070                    _ANSELH 0189                    _SSPADD 0093  
                  _SSPBUF 0013                    _SSPCON 0014                    _i2c_MR 065D  
      i2c_MasterInit@freq 0020        i2c_MasterRead@temp 0074                 ??___lldiv 0078  
        ??_i2c_MasterInit 0024          ??_i2c_MasterRead 0072          ??_i2c_MasterWait 0070  
        ??_i2c_MasterStop 0070            ?_LCD_setCursor 0073                 ??_flip_EN 0070  
    __end_of_i2c_MasterSS 05AF      __end_of_config_clock 0592         LCD_setCursor@fila 0074  
 __end_of__initialization 07FC  __size_of_i2c_MasterStart 0009            __pcstackCOMMON 0070  
           __end_of_setup 0614       i2c_MasterSS@address 0070        __size_of_config_io 000F  
                 ??_setup 007E                __pbssBANK0 002B                   ?_i2c_MR 0076  
              __pmaintext 06AC           ??_LCD_setCursor 0074            LCD_write@value 0072  
                 _LCD_CMD 05AF                _config_lcd 0614                   _SSPCON2 0091  
                 _SSPSTAT 0094                __stringtab 0003           __size_of_i2c_MR 0026  
         i2c_MasterRead@d 0070         __end_of_config_io 05D7     __size_of_i2c_MasterSS 000B  
                 ___lldiv 0792     __size_of_config_clock 0008                   __ptext1 05F5  
                 __ptext2 0705                   __ptext3 0792                   __ptext4 0614  
                 __ptext5 0638                   __ptext6 05E6                   __ptext7 0683  
                 __ptext8 0743                   __ptext9 05AF         ??_i2c_MasterStart 0070  
                 _flip_EN 05D7  __size_of_LCD_writeString 0025       LCD_writeString@text 0075  
        LCD_writeString@i 0073                 _LCD_START 0743      end_of_initialization 07FC  
               _LCD_write 05E6              _i2c_MasterSS 05A4           ___lldiv@divisor 0070  
            _config_clock 058A           ___lldiv@counter 007D                LCD_CMD@cmd 0072  
             ?_config_lcd 0070                ?_LCD_START 0070                 _TRISCbits 0087  
              ?_LCD_write 0070            __end_of_i2c_MR 0683       start_initialization 07F8  
       ??_LCD_writeString 0073                  ??_i2c_MR 0077       __size_of_config_lcd 0024  
                ?_LCD_CMD 0070                 ___latbits 0002             __pcstackBANK0 0020  
             ??_LCD_START 0073   __size_of_i2c_MasterInit 003E   __size_of_i2c_MasterRead 002E  
 __size_of_i2c_MasterWait 000D   __size_of_i2c_MasterStop 0009               ??_LCD_write 0072  
         _i2c_MasterStart 0592                  ?___lldiv 0070                 _config_io 05C8  
   __end_of_LCD_setCursor 06AC                 __pstrings 0003                  ?_flip_EN 0070  
          __size_of_setup 001F                ?_config_io 0070               __stringbase 0008  
        __size_of_LCD_CMD 000C              ??_config_lcd 0076   __end_of_i2c_MasterStart 059B  
      __end_of_config_lcd 0638          __size_of___lldiv 0066           _LCD_writeString 0638  
      __end_of__stringtab 0009          __size_of_flip_EN 000F            _i2c_MasterInit 0705  
          _i2c_MasterRead 06D7            _i2c_MasterWait 05BB            _i2c_MasterStop 059B  
                __ptext10 05D7                  __ptext11 05C8                  __ptext12 058A  
                __ptext13 065D                  __ptext14 059B                  __ptext15 0592  
                __ptext16 05A4                  __ptext17 06D7                  __ptext18 05BB  
           __size_of_main 002B      LCD_setCursor@columna 0073               ??_config_io 0070  
  __end_of_i2c_MasterInit 0743    __end_of_i2c_MasterRead 0705    __end_of_i2c_MasterWait 05C8  
  __end_of_i2c_MasterStop 05A4             i2c_MR@address 0078          ?_i2c_MasterStart 0070  
        ___lldiv@dividend 0074                 stringcode 0003                _OSCCONbits 008F  
 __end_of_LCD_writeString 065D           ?_i2c_MasterInit 0020           ?_i2c_MasterRead 0070  
         ?_i2c_MasterWait 0070           ?_i2c_MasterStop 0070          ___lldiv@quotient 0079  
                stringdir 0003                  stringtab 0003               _SSPCON2bits 0091  
             i2c_MR@value 0076             ?_i2c_MasterSS 0070                i2c_MR@temp 0079  
              _SSPCONbits 0014             ?_config_clock 0070  
